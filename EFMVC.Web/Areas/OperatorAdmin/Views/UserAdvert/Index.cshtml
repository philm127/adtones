@using EFMVC.Web.Areas.OperatorAdmin.Models;
@model Tuple<List<UserAdvertResult>, UserAdvertFilter>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/OperatorAdmin/Views/Shared/_Layout.cshtml";
}

<div class="wrapper wrapper-content animated fadeIn">
    <div class="spiner-example" style="display:none;">
        <div class="sk-spinner sk-spinner-three-bounce">
            <div class="sk-bounce1"></div>
            <div class="sk-bounce2"></div>
            <div class="sk-bounce3"></div>
        </div>
    </div>
    <div class="p-w-md m-t-sm">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-content">
                        @Html.Partial("_UserAdvertManagement", Tuple.Create<List<UserAdvertResult>, UserAdvertFilter>(Model.Item1, Model.Item2))
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal inmodal" id="myModal6" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated flipInY">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Scripts Details</h4>
            </div>
            <div class="modal-body">
                <p id="pscripts"></p>
            </div>

        </div>
    </div>
</div>

<input type="hidden" id="RejectedAdvertId" />
<div class="modal fade" id="RejectedAdvertModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="exampleModalLabel">Advert Rejection</h4>
            </div>
            <div class="modal-body">
                <form>
                    @*<div class="form-group">
                            <label for="recipient-name" class="control-label">Recipient:</label>
                            <input type="text" class="form-control" id="recipient-name">
                        </div>*@
                    <div id="RejectionList">
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="control-label">Rejection Reason</label>
                        <textarea class="form-control" id="txtAreaReason"></textarea>
                    </div>
                </form>
                @*<input type="text" placeholder="Rejection Reason" class="form-control" />*@
                @*Modal content*@
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSubmit" class="btn btn-success">Submit</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/iCheck/custom")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @*@Styles.Render("~/plugins/dataPickerStyles")*@
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/dataTablesNew")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/daterangepickerNewStyles")

}
@section Scripts {
    @Scripts.Render("~/plugins/sparkLine")
    @Scripts.Render("~/plugins/flot")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/datatableNew")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/daterangepickerNew")
    <script type="text/javascript">

        $(window).load(function () {

            $("#UserId").select2({
                placeholder: "All Users",
                containerCssClass: "userdrp",
                allowClear: true,
                ajax: {
                    //url: "https://api.github.com/search/repositories",
                    //dataType: 'json',
                    traditional: true,
                    url: '@Url.Action("FillUserDropdownAJAX", "UserAdvert", new { area = "OperatorAdmin" })',
                    type: "POST",
                    delay: 250,
                    data: function (params) {
                        return {
                            UserName: params.term, // search term
                            page: params.page
                        };
                    },
                    processResults: function (data, params) {
                        // parse the results into the format expected by Select2
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data, except to indicate that infinite
                        // scrolling can be used

                        return {
                            results: data
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) {
                    return markup;
                }, // let our custom formatter work
                minimumInputLength: 1,
                templateResult: formatRepo, // omitted for brevity, see the source of this page
                templateSelection: formatRepoSelection, // omitted for brevity, see the source of this page
                width: '100%'
            });

            function formatRepo(repo) {
                if (repo.loading) {

                    return repo.text
                };

                var markup =
                    '<div class="avatar">' +
                    '<div class="info">' +

                    '<div class="col-sm-16">' + repo.name + '</div>';

                markup += '</div></div> ';

                return markup;
            }

            function formatRepoSelection(repo) {
                return repo.name || repo.text;
            }
        });

        function showModal(id) {
            $("#RejectedAdvertId").val(id);
            $.post('@Url.Action("GetRejectedReasonList", "UserAdvert", new { area = "OperatorAdmin" })', { advertId: id }, function (data) {
                if (data != "False") {
                    $("#RejectionList").html(data);
                }
            });
            $('#RejectedAdvertModal').modal();
        }

        $("#btnSubmit").click(function () {
            // status = 5
            var textAreaValue = $("#txtAreaReason").val();
            if (textAreaValue != "")
            {
                var advertId = $("#RejectedAdvertId").val();
                $.post('@Url.Action("RejectAdvert", "UserAdvert", new { area = "OperatorAdmin" })', { advertId: advertId, rejectionReason: textAreaValue }, function (data) {

                    if (data == "success") {
                        window.location.href = '@Url.Action("Index", "UserAdvert", new { area = "OperatorAdmin" })';

                    }
                });

            }
            else
            {
                alert("Please enter the rejection reason")
            }

        });

        function getscripts(current) {
            $("#pscripts").html($(current).attr('title'));
            $("#myModal6").modal();
        }
        function updatestatus(id, status, oldstatus) {
            $(".spiner-example").show();
            var userObject = new Object();
            userObject.id = id;
            userObject.status = status;
            userObject.oldstatus = oldstatus;
            $.post('@Url.Action("ApproveORRejectAdvert", "UserAdvert")', userObject, function (data) {

                if (data == "success") {
                    $(".spiner-example").hide();
                    window.location.href = '@Url.Action("Index", "UserAdvert", new { area = "OperatorAdmin" })';

                }
            });
        }
        function getParameterByName(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)", "i"),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }
        @*function getClientByUserId(userId) {
            $.ajax({
                traditional: true,
                url: '@Url.Action("GetClientsUser", "UserAdvert",new {area="OperatorAdmin" })',
                type: "POST",
                data: { userId: userId },
                success: function (data) {
                    $("#ClientId").empty();
                    if (data == "nodata" || data == "error") {

                    }
                    else {
                        $.each(data, function (i, client) {
                            $("#ClientId").append('<option value="' + client.Id + '">' +
                                                            client.Name + '</option>');
                        });
                    }
                    $("#ClientId").trigger("chosen:updated");
                },
                error: function (jqXHR, exception) {
                    alert('Internal server error.Please try again.');
                }
            });

        }*@
        @*function getAdvertByClientId(clientId) {
            $.ajax({
                traditional: true,
                url: '@Url.Action("GetClientsAdvert", "UserAdvert", new {area="OperatorAdmin" })',
                type: "POST",
                data: { clientId: clientId },
                success: function (data) {
                    $("#AdvertId").empty();
                    if (data == "nodata" || data == "error") {

                    }
                    else {
                        $.each(data, function (i, adverts) {
                            $("#AdvertId").append('<option value="' + adverts.Id + '">' +
                                                            adverts.Name + '</option>');

                        });
                    }
                    $("#AdvertId").trigger("chosen:updated");
                },
                error: function (jqXHR, exception) {
                    alert('Internal server error.Please try again.');
                }
            });
        }*@
        function dataTableSetup() {
            $('.dataTables-useradvert').DataTable({
                rowReorder: {
                    selector: 'td:nth-child(2)'
                },
                "responsive": true,
                "preDrawCallback": function (settings) {
                    $(".spiner-example").show();
                },
                "aaSorting": [],
                "info": false,
                bFilter: false,
                "searching": false,
                aoColumnDefs: [
                    {
                        bSortable: false,
                        aTargets: [2,4,5]
                    }
                ],
                "bLengthChange": false,
                "language": {
                    "infoEmpty": "No Record Found."
                },
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy', title: 'UserAdvertsDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 9, 10] } },//0, 1, 2, 3, 4, 7, 8
                    { extend: 'csv', title: 'UserAdvertsDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 9, 10] } },
                    { extend: 'excel', title: 'UserAdvertsDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 9, 10] } },
                    {
                        extend: 'pdf',
                        title: 'UserAdvertsDetails',
                        orientation: 'landscape',
                        pageSize: 'LEGAL',
                        exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 9, 10] }
                    },

                    {
                        extend: 'print',
                        exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 9, 10] },
                        title: 'UserAdvertsDetails',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],
                "drawCallback": function (settings) {
                    $(".spiner-example").hide();
                    $('.pagination > li').removeClass("paginate_button");
                },
                "fnInitComplete": function () {
                    $(".spiner-example").hide();
                    $('.pagination > li').removeClass("paginate_button");
                }	// Hide processingDiv when loading table is complete
            });
        }
        $(document).ready(function () {
            $('body').bind('keyup', function (event) {
                if (event.keyCode === 13) {
                    $('#form0').submit();
                }
            });
            $(".chosen-container").bind('keyup', function (e) {
                if (e.which === 13) {
                    $('#form0').submit();
                    // or your stuff here...
                }
            });
            $('#createdFrom').datetimepicker({ ignoreReadonly: true });

            $('#createdTo').datetimepicker({
                useCurrent: false, //Important! See issue #1075
                ignoreReadonly: true
            });

            $("#createdFrom").on("dp.change", function (e) {
                $('#createdTo').data("DateTimePicker").minDate(e.date);
            });

            $("#createdTo").on("dp.change", function (e) {
                $('#createdFrom').data("DateTimePicker").maxDate(e.date);
            });
            $('#fromdate').css({ "height": "34px" });
            $('#todate').css({ "height": "34px" });
            var user_Id = getParameterByName("userId");
            if (user_Id != '') {
                var userId = new Array();
                userId.push(user_Id);
                //getClientByUserId(userId);
            }
            $("#UserId").change(function () {
                var userId = new Array();
                $("select#UserId option:selected").each(function () {
                    userId.push($(this).val());
                });
                //getClientByUserId(userId);
            });
            //$("#ClientId").change(function () {
            //    var clientId = new Array();
            //    $("select#ClientId option:selected").each(function () {
            //        clientId.push($(this).val());
            //    });
            //    getAdvertByClientId(clientId);
            //});
            //$('#data_5 .input-daterange').datepicker({
            //    keyboardNavigation: false,
            //    forceParse: false,
            //    autoclose: true
            //});
            var config = {
                '.chosen-select': { width: "100%" },
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
                '.chosen-select-width': { width: "95%" }
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }
            $("#advertreset").click(function () {
                $(".spiner-example").show();
                $('#fromdate').val('');
                $('#todate').val('');
                $("#UserId").select2("val", "");
                //$("#ClientId").val('0');
                //$("#ClientId").trigger("chosen:updated");
                $("#AdvertId").val('0');
                $("#AdvertId").trigger("chosen:updated");
                $("#AdvertStatusId").val('0');
                $("#AdvertStatusId").trigger("chosen:updated");
                $("#Item2_Fromdate").val('');
                $("#Item2_Todate").val('');


                $.ajax({
                    data: null,
                    datatype: "text/plain",
                    type: "POST",
                    url: '@Url.Action("SearchAdverts", "UserAdvert",new {area="OperatorAdmin" })',
                    cache: false,
                    success: function (data) {
                        $(".spiner-example").hide();
                        $("#advertsList").html(data);
                        dataTableSetup();
                    }
                });
            });

            //var userId = new Array();
            //$("select#UserId option:selected").each(function () {
            //    userId.push($(this).val());
            //});
            //if (userId != null && userId != '') {
            //    getAdvertByUserId(userId);
            //}
            //else {
            //    getAdvertByUserId(null);
            //}

            $("#UserId").change(function () {
                var userId = new Array();
                $("select#UserId option:selected").each(function () {
                    userId.push($(this).val());
                });
                if (userId != null && userId != '') {
                    getAdvertByUserId(userId);
                }
                else {
                    getAdvertByUserId();
                }
            });

            $('.dataTables-useradvert').DataTable({
                rowReorder: {
                    selector: 'td:nth-child(2)'
                },
                "responsive": true,
                "preDrawCallback": function (settings) {
                    $(".spiner-example").show();
                },
                "aaSorting": [],
                "info": false,
                bFilter: false,
                "searching": false,
                "bLengthChange": false,
                "serverSide": true, // for process on server side
                "language": {
                    "infoEmpty": "No Record Found."
                },
                aoColumnDefs: [
                    {
                        bSortable: false,
                        aTargets: [2,4,5]
                    }
                ],
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy', title: 'UserAdvertsDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 9, 10] } },
                    { extend: 'csv', title: 'UserAdvertsDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 9, 10] } },
                    { extend: 'excel', title: 'UserAdvertsDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 9, 10] } },
                    {
                        extend: 'pdf',
                        title: 'UserAdvertsDetails',
                        orientation: 'landscape',
                        pageSize: 'LEGAL',
                        exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 9, 10] }
                    },

                    {
                        extend: 'print',
                        exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 9, 10] },
                        title: 'UserDetails',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],
                "ajax": {
                    "url": "/OperatorAdmin/UserAdvert/LoadData",
                    "type": "POST",
                    "datatype": "json"
                },
                "aoColumns": [
                    { "data": "UserName", "name": "UserName", "autoWidth": false },//index-1
                    {
                        "data": "Name", "name": "Name", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            return '<td><a href="javascript:;;">' + row.Name + '</a></td>';
                        }
                    },//index-3
                    {
                        "data": "MediaFileLocation", "name": "MediaFileLocation", "autoWidth": false, "sWidth": "18%",
                        "mRender": function (data, type, row) {
                            return '<td><audio class="audio-small" controlsList="nodownload" controls id="' + row.Name + '" src="' + row.MediaFileLocation + '"></audio></td>';
                        }
                    },//index-8
                    {
                        "data": "status", "name": "status", "autoWidth": false, "sWidth": "8%",
                        "mRender": function (data, type, row) {
                            //return '<td>' + row.fstatus + '</td>';
                            if (row.status == 1) {
                                return '<td><label class="label label-primary">Live</label></td>';
                            }
                            else if (row.status == 2) {
                                return '<td><label class="label label-success">Suspended</label></td>';
                            }
                            else if (row.status == 3) {
                                return '<td><label class="label label-danger">Archived</label></td>';
                            }
                            else if (row.status == 4) {
                                return '<td><label class="label label-default">Waitingforapproval</label></td>';
                            }
                            else if (row.status == 8) {
                                return '<td><label class="label label-danger">Campaign Paused Due To Insufficient Funds</label></td>';
                            }
                            else if (row.status == 9) {
                                return '<td><label class="label label-warning">Pending</label></td>';
                            }
                            else {
                                return '<td><label class="label label-danger">Rejected</label></td>';
                            }
                        }
                    },//index-9
                    {
                        "data": "Action", "name": "Action", "autoWidth": false, "sWidth": "8%",
                        "mRender": function (data, type, row) {
                            if (row.status == 1) {
                                return '<td><a class="btn btn-success btn-xs" onclick="updatestatus(' + row.AdvertId + ',2,' + row.status + ')">Suspend</a></td>'
                                //+ " " + '<a class="btn btn-danger btn-xs" onclick="updatestatus(' + row.AdvertId + ',3,' + row.status + ')">Archive</a></td>';//Suspended    //Archived
                            }
                            else if (row.status == 3) {
                                return '<td><a class="btn btn-blue btn-xs" onclick="updatestatus(' + row.AdvertId + ',1,' + row.status + ')">Live</a></td>';
                            }
                            else if (row.status == 4) {
                                return '<td><a class="btn btn-blue btn-xs" onclick="updatestatus(' + row.AdvertId + ',1,' + row.status + ')">Live</a>' + " " + '<a class="btn btn-danger btn-xs" onclick="showModal(' + row.AdvertId + ')">Reject</a></td>';//Rejected
                            }
                            else if (row.status == 5) {
                                return '<td><a class="btn btn-blue btn-xs" onclick="updatestatus(' + row.AdvertId + ',1,' + row.status + ')">Live</a></td>';
                            }
                            else if (row.status == 9 && row.UpdatedBy != row.UserAdvertUpdatedById) {
                                return '<td><a class="btn btn-blue btn-xs" onclick="updatestatus(' + row.AdvertId + ',1,' + row.status + ')">Live</a>' + " " + '<a class="btn btn-danger btn-xs" onclick="showModal(' + row.AdvertId + ')">Reject</a></td>';//Rejected
                            }
                            else {
                                return '<td>-</td>';
                            }
                        }
                    },//index-11
                    {
                        "data": "Scripts", "name": "Scripts", "autoWidth": false, "sWidth": "5%",
                        "mRender": function (data, type, row) {
                            if (row.Scripts != null && row.Scripts != "") {
                                return '<td><a title="' + row.Scripts + '" onclick="getscripts(this);">View</a></td>';
                            }
                            else {
                                if (row.ScriptsPath != null && row.ScriptsPath != "") {
                                    //return '<td><a href="' + row.ScriptsPath + '" download="' + row.ScriptsPath + '" target="_blank">Download</a></td>';
                                    return '<td>-</td>';
                                }
                                else {
                                    return '<td>-</td>';
                                }
                            }
                        }
                    },//index-7
                    { "data": "SMSbody", "name": "SMSbody", "autoWidth": false },//index-5
                    { "data": "ClientName", "name": "ClientName", "autoWidth": false },//index-2
                    //index-6
                    { "data": "Brand", "name": "Brand", "autoWidth": false },//index-4
                    {
                        "data": "Emailbody", "name": "Emailbody", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            return '<td>' + row.Emailbody + '</td>';
                        }
                    },
                    {
                        "data": "Email", "name": "Email", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            return '<td><a href="javascript:;;">' + row.Email + '</a></td>';
                        }
                    },//index-0

                    { "data": "CreatedDate", "name": "CreatedDate", "autoWidth": false, "sWidth": "6%" },//index-10
                ],
                "drawCallback": function (settings) {
                    $(".spiner-example").hide();
                    $('.pagination > li').removeClass("paginate_button");
                },
                "fnInitComplete": function () {
                    $(".spiner-example").hide();
                    $('.pagination > li').removeClass("paginate_button");
                }
            });
        });

        function getAdvertByUserId(userId) {
                $.ajax({
                    traditional: true,
                    url: '@Url.Action("GetUsersAdvert", "UserAdvert", new {area="OperatorAdmin" })',
                    type: "POST",
                    data: { userId: userId },
                    success: function (data) {
                        $("#AdvertId").empty();
                        if (data == "nodata" || data == "error") {

                        }
                        else {
                            $.each(data, function (i, adverts) {
                                $("#AdvertId").append('<option value="' + adverts.Id + '">' +
                                    adverts.Name + '</option>');

                            });
                        }
                        $("#AdvertId").trigger("chosen:updated");
                    },
                    error: function (jqXHR, exception) {
                        alert('Internal server error.Please try again.');
                    }
                });
            }

    </script>
}
