@using EFMVC.Web.Areas.Admin.SearchClass;
@using EFMVC.Web.Areas.Admin.Models;
@model Tuple<List<InvoiceResult>, InvoiceFilter>
<div class="row">
    <div class="col-lg-12">
        <div class="ibox">
            <div class="row">
                @*@if (TempData["success"] != null)
                {*@
                <div class="alert alert-success alert-dismissable" style="display:none;">
                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                    Email sent successfully.
                </div>
                @*}*@
            </div>

            <div class="ibox-title">
                <h5>Invoice Management</h5>
            </div>

            @using (Ajax.BeginForm("SearchInvoice", "Invoice",
  null,
  new AjaxOptions() { HttpMethod = "post", InsertionMode = InsertionMode.Replace, OnSuccess = "getresultbilling", OnBegin = "progressbar" },
  null))
            {
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-md-6 col-lg-4 ibox-field">
                            <label class="col-md-12 col-lg-2 control-label">Users</label>
                            <div class="col-md-12 col-lg-10">
                                <div class="form-group">
                                    <select id="UserId" name="UserId" multiple="multiple" class="col-xs-5"></select>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-4 ibox-field">
                            <label class="col-md-12 col-lg-2 control-label">Clients</label>
                            <div class="col-md-12 col-lg-10">
                                <div class="form-group">
                                    @Html.DropDownList("InvoiceClientId", (MultiSelectList)ViewBag.client, new { @class = "chosen-select", multiple = "multiple", @data_placeholder = "All Clients" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-4 ibox-field">
                            <label class="col-md-12 col-lg-2 control-label">Status</label>
                            <div class="col-md-12 col-lg-10">
                                <div class="form-group">
                                    @Html.DropDownList("InvoicestatusId", (MultiSelectList)ViewBag.billingStatus, new { @class = "chosen-select", multiple = "multiple", @data_placeholder = "All Billing Status" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-4 ibox-field">
                            <label class="col-md-12 col-lg-2 control-label">Method of Payments</label>
                            <div class="col-md-12 col-lg-10">
                                <div class="form-group">
                                    @Html.DropDownList("InvoicemethodId", (MultiSelectList)ViewBag.paymentMethod, new { @class = "chosen-select", multiple = "multiple", @data_placeholder = "All Method of Payments" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-4 ibox-field">
                            <label class="col-md-12 col-lg-2 control-label">Invoice Number</label>
                            <div class="col-md-12 col-lg-10">
                                <div class="form-group">
                                    @Html.TextBoxFor(Model2 => Model2.Item2.InvoiceNO, new { @class = "form-control", @placeholder = "Invoice Number" })

                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-4 ibox-field">
                            <label class="col-md-12 col-lg-2 control-label">PO Number</label>
                            <div class="col-md-12 col-lg-10">
                                <div class="form-group">
                                    @Html.TextBoxFor(Model2 => Model2.Item2.PONumber, new { @class = "form-control", @placeholder = "PO Number" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-4 ibox-field">
                            <label class="col-md-12 col-lg-2 control-label">Invoice Date</label>
                            <div class="col-md-12 col-lg-10">
                                <div class="form-group">
                                    <div class="input-daterange input-group clsendit">
                                        <div class='input-group' id='createdFrom'>
                                            @Html.TextBoxFor(Model1 => Model1.Item2.Fromdate, new { @class = "input-sm form-control", @id = "fromdate", @Value = "", @data_date_format = "DD/MM/YYYY", @readonly = "readonly", style = "cursor:inherit !important" })
                                            <span class="input-group-addon calendar-icon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                        <span class="input-group-addon" style="background-color: #eeeeee;">to</span>
                                        <div class='input-group' id='createdTo'>
                                            @Html.TextBoxFor(Model1 => Model1.Item2.Todate, new { @class = "input-sm form-control", @id = "todate", @Value = "", @data_date_format = "DD/MM/YYYY", @readonly = "readonly", style = "cursor:inherit !important" })
                                            <span class="input-group-addon calendar-icon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-4 ibox-field">
                            <label class="col-md-12 col-lg-2 control-label">Settled Date</label>
                            <div class="col-md-12 col-lg-10">
                                <div class="form-group">
                                    <div class="input-daterange input-group clsendit">
                                        <div class='input-group' id='createdSettedFromdate'>
                                            @Html.TextBoxFor(Model1 => Model1.Item2.SettedFromdate, new { @class = "input-sm form-control", @id = "SettedFromdate", @Value = "", @data_date_format = "DD/MM/YYYY", @readonly = "readonly", style = "cursor:inherit !important" })
                                            <span class="input-group-addon calendar-icon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                        <span class="input-group-addon" style="background-color: #eeeeee;">to</span>
                                        <div class='input-group' id='createdSettedTodate'>
                                            @Html.TextBoxFor(Model1 => Model1.Item2.SettedTodate, new { @class = "input-sm form-control", @id = "SettedTodate", @Value = "", @data_date_format = "DD/MM/YYYY", @readonly = "readonly", style = "cursor:inherit !important" })
                                            <span class="input-group-addon calendar-icon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-4 ibox-field">
                            <label class="col-md-12 col-lg-2 control-label">Invoice Total</label>
                            <div class="col-md-12 col-lg-10">
                                <div class="form-group">
                                    <div class="input-daterange input-group clsendit">
                                        @Html.TextBoxFor(Model2 => Model2.Item2.InvoiceFromTotal, new { @class = "form-control" })
                                        <span class="input-group-addon">to</span>
                                        @Html.TextBoxFor(Model2 => Model2.Item2.InvoiceToTotal, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group col-md-12 col-lg-12">
                            <div class="col-sm-12 center">
                                <button class="btn btn-blue" type="submit">Filter</button>
                                <button class="btn btn-white" type="button" id="invoicereset">Reset</button>
                            </div>
                        </div>
                    </div>

                    <div id="invoiceList">
                        @{ Html.RenderPartial("_InvoiceList", Model.Item1);}
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script type="text/javascript">

    var progressbar = function (data) {
        $(".loader").show();
    };

    var getresultbilling = function (data) {
        var status = '@User.Identity.IsAuthenticated';
        if (status.toLowerCase() == "true") {


            if (data != "notauthorise") {
                $('.dataTables-invoice').remove();
                $("#invoiceList").html(data);
                dataTableSetup();
            }
            else {
                window.location.href = '@Url.Action("Index","Landing")';
            }
        }
        else {
            window.location.href = '@Url.Action("Index","Landing")';
        }
        $(".loader").hide();
    };
    function dataTableSetup() {
        $('.dataTables-invoice').DataTable({
            "preDrawCallback": function (settings) {
                $(".loader").show();
            },
            "info": false,
            bFilter: false,
            "searching": false,
            "bLengthChange": false,
            "language": {
                "infoEmpty": "No Record Found."
            },
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                {
                    extend: 'copy',
                    title: 'Invoice',
                    exportOptions: {
                        columns: ':not(:last-child)',
                    }
                },
                {
                    extend: 'csv',
                    title: 'Invoice',
                    exportOptions: {
                        columns: ':not(:last-child)',
                    }
                },
                {
                    extend: 'excel',
                    title: 'Invoice',
                    exportOptions: {
                        columns: ':not(:last-child)',
                    }
                },
                {
                    extend: 'pdf',
                    orientation: 'landscape',
                    pageSize: 'LEGAL',
                    title: 'Invoice',
                    exportOptions: {
                        columns: ':not(:last-child)',
                    }
                },

                {
                    extend: 'print',
                    title: 'Invoice',
                    exportOptions: {
                        columns: ':not(:last-child)',
                    },
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }
            ],
            "drawCallback": function (settings) {
                $(".loader").hide();
            },
            "fnInitComplete": function () { $(".loader").hide(); }	// Hide processingDiv when loading table is complete
        });
    }
</script>
