@model EFMVC.Web.Areas.Admin.ViewModel.UserCreditPaymentFormModel

@{
    ViewBag.Title = "Receive Payment";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<head>
    <link href="~/Content/Common.css" rel="stylesheet" />
</head>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="spiner-example loader" style="display:none;">
        <div class="sk-spinner sk-spinner-three-bounce">
            <div class="sk-bounce1"></div>
            <div class="sk-bounce2"></div>
            <div class="sk-bounce3"></div>
        </div>
    </div>
    <div class="col-sm-4">
        <h2>Receive User Credit Payment</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "UserPayment",new {area="Admin" })">Dashboard</a>
            </li>
            <li class="active">
                <strong>Receive User Credit Payment</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Receive User Credit Payment</h5>

                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("ReceivePayment", "UserPayment", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
                    {
                        if (TempData["Error"] != null)
                        {
                            <div class="alert alert-danger alert-dismissable">
                                <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                                @TempData["Error"]
                            </div>
                        }
                        <div class="form-group">
                            <label class="col-lg-2 control-label">User <label class="lbldanger">*</label></label>

                            <div class="col-lg-4">
                                @Html.DropDownListFor(Model => Model.UserId, ViewBag.userdetails as IEnumerable<SelectListItem>, "--Select User--", new { @class = "form-control input-s-sm inline" })
                                @Html.ValidationMessageFor(Model => Model.UserId, null, new { @class = "btn-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-lg-2 control-label">Campaign <label class="lbldanger">*</label></label>

                            <div class="col-lg-4">
                                @Html.DropDownListFor(Model => Model.CampaignProfileId, ViewBag.CampaignDetails as IEnumerable<SelectListItem>, new { @class = "form-control input-s-sm inline" })
                                @Html.ValidationMessageFor(Model => Model.CampaignProfileId, null, new { @class = "btn-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-lg-2 control-label">Invoice <label class="lbldanger">*</label></label>
                            <div class="col-lg-4">

                                @Html.DropDownListFor(Model => Model.BillingId, ViewBag.billingdetails as IEnumerable<SelectListItem>, new { @class = "form-control input-s-sm inline" })
                                @Html.ValidationMessageFor(Model => Model.BillingId, null, new { @class = "btn-danger" })


                            </div>
                        </div>
                        <div class="form-group" id="remamount" style="display:none;">
                            <label class="col-lg-2 control-label">Outstanding Total Amount</label>
                            <div class="col-lg-4">
                                <label class="control-label"><span id="lblTotalamount"></span></label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Amount</label>
                            <div class="col-lg-4">
                                @Html.TextBoxFor(Model => Model.Amount, new { @class = "form-control trimmed", @placeholder = "Amount" })
                                @Html.ValidationMessageFor(Model => Model.Amount, null, new { @class = "btn-danger" })
                                <span class="btn-danger" id="fundamounterror"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Description <label class="lbldanger">*</label></label>
                            <div class="col-lg-4">
                                @Html.TextAreaFor(Model => Model.Description, new { @class = "form-control trimmed", @placeholder = "Description" })
                                @Html.ValidationMessageFor(Model => Model.Description, null, new { @class = "btn-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-offset-2 col-lg-10">
                                <button class="btn btn-sm btn-blue" type="submit" id="btnreceivepayment">Submit</button>
                                <button class="btn btn-sm btn-white" type="button" onclick="window.location.href='@Url.Action("Index","UserPayment",new {area="Admin" })'">Cancel</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    
    <script type="text/javascript">
        $("#Amount").val('');
        $("#UserId").change(function () {
            $(".loader").show();
            $("#CampaignProfileId").empty();
            $.post('@Url.Action("GetCampaignDetails", "UserPayment",new {area="Admin" })', { userId: $("#UserId").val() }, function (campaigns) {

                $.each(campaigns, function (i, camp) {
                    $("#CampaignProfileId").append('<option value="' + camp.Value + '">' +
                        camp.Text + '</option>');
                    $(".loader").hide();
                });
            });
            $("#Amount").keypress(function (event) {

                $(this).val($(this).val().replace(/[^1-9\.]/g, ''));
                if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                    event.preventDefault();
                    return false;
                }
                var fundAmount = $(this).val();
                if ((fundAmount.indexOf('.') != -1) &&
                    (fundAmount.substring(fundAmount.indexOf('.')).length > 5) &&
                    (event.which != 0 && event.which != 8) &&
                    ($(this)[0].selectionStart >= fundAmount.length - 2)) {
                    event.preventDefault();
                    return false;
                }

            });
            @*$("#BillingId").empty();
            $.post('@Url.Action("GetInvoiceDetails", "UserPayment",new {area="Admin" })', { userId: $("#UserId").val() }, function (billings) {

                $.each(billings, function (i, billing) {
                    $("#BillingId").append('<option value="' + billing.Value + '">' +
                        billing.Text + '</option>');
                    $(".loader").hide();
                });
            });*@
        });

        $("#CampaignProfileId").change(function () {
            $("#BillingId").empty();
            $.post('@Url.Action("GetInvoiceDetails", "UserPayment",new {area="Admin" })', { CampaignProfileId: $("#CampaignProfileId").val() }, function (billings) {

                $.each(billings, function (i, billing) {
                    $("#BillingId").append('<option value="' + billing.Value + '">' +
                        billing.Text + '</option>');
                    $(".loader").hide();
                });
            });
        });

        $("#BillingId").change(function () {
            $(".loader").show();
            $.post('@Url.Action("GetInvoiceAmount", "UserPayment",new {area="Admin" })', { CampaignProfileId: $("#CampaignProfileId").val() }, function (billingsamount) {
                //$("#remamount").show();
                //$("#lblTotalamount").html(billingsamount);
                //$(".loader").hide();

                //Add 08-02-2018
                if (billingsamount == 0) {
                    $("#remamount").hide();
                    $("#lblTotalamount").html("");
                    $(".loader").hide();
                }
                else {
                    $("#remamount").show();
                    $("#lblTotalamount").html(billingsamount);
                    $(".loader").hide();
                }
            });
        });

        $(document).ready(function () {
            trimmed();
        });

        function trimmed() {
            $(".trimmed").on('blur', function () {
                // the following function will be executed every half second
                if ($(this).val() != null) {
                    $(this).val($(this).val().toString().trim());
                }
                var s = $(this).val().replace(/\</g, '');
                s = s.replace(/\>/g, '');
                $(this).val(s);
            });
        }

        $("#Amount").change(function () {
            var totalamount = $("#lblTotalamount")[0].innerHTML;
            var amount = $(this).val();
            if (parseInt(amount) > parseInt(totalamount)) {
                $("#Amount")[0].nextElementSibling.innerHTML = "Amount must be less than Outstanding Total Amount.";
            }
        });

        function validation() {
            var returnvalue = true;
            var totalamount = $("#lblTotalamount")[0].innerHTML;
            var amount = $("#Amount").val();
            if (parseInt(amount) > parseInt(totalamount)) {
                $("#Amount")[0].nextElementSibling.innerHTML = "Amount must be less than Outstanding Total Amount.";
                returnvalue = false;
            }
            return returnvalue;
        }

        $("#btnreceivepayment").click(function () {
            var valida = validation();
            if (valida == true) {
                return true;
            }
            else {
                return false;
            }
        });

    </script>
}
