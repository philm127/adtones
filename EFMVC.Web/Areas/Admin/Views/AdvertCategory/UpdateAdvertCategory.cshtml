@model EFMVC.Web.ViewModels.AdvertCategoryFormModel
@{
    ViewBag.Title = "UpdateAdvertCategory";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Advert Category Details</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "AdvertCategory",new {area="Admin" })">Dashboard</a>
            </li>
            <li class="active">
                <strong>@ViewBag.name</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Update Advert Category</h5>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("UpdateAdvertCategory", "AdvertCategory", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        if (TempData["Error"] != null)
                        {
                            <div class="alert alert-danger alert-dismissable">
                                <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                                @TempData["Error"]
                            </div>
                        }
                        @Html.HiddenFor(Model => Model.AdvertCategoryId)
                        @Html.HiddenFor(Model => Model.CreatedDate)
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Country <label class="lbldanger">*</label></label>
                            <div class="col-lg-4">
                                @Html.DropDownListFor(Model => Model.CountryId, ViewBag.countrydetails as IEnumerable<SelectListItem>, "--Select Country--", new { @class = "form-control input-s-sm inline" })
                                @Html.ValidationMessageFor(Model => Model.CountryId, null, new { @class = "btn-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Name <label class="lbldanger">*</label></label>
                            <div class="col-lg-4">
                                @Html.TextBoxFor(Model => Model.Name, new { @class = "form-control trimmed", @placeholder = "Name" })
                                @Html.ValidationMessageFor(Model => Model.Name, null, new { @class = "btn-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-offset-2 col-lg-10">
                                <button class="btn btn-sm btn-blue" type="submit">Submit</button>
                                <button class="btn btn-sm btn-white" type="button" onclick="window.location.href='@Url.Action("Index", "AdvertCategory", new { area = "Admin" })'">Cancel</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    <script type="text/javascript">

        $(document).ready(function () {
            trimmed();
        });

        function trimmed() {
            $(".trimmed").on('blur', function () {
                // the following function will be executed every half second
                if ($(this).val() != null) {
                    $(this).val($(this).val().toString().trim());
                }
                var s = $(this).val().replace(/\</g, '');
                s = s.replace(/\>/g, '');
                $(this).val(s);
            });
        }

    </script>
}