@using EFMVC.Web.Areas.Admin.SearchClass;
@using EFMVC.Web.Areas.Admin.Models;
@using EFMVC.Web.Common;
@model Tuple<List<CampaignAdminResult>, CampaignAdminFilter>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="wrapper wrapper-content animated fadeIn">
    <div class="spiner-example" style="display:none;">
        <div class="sk-spinner sk-spinner-three-bounce">
            <div class="sk-bounce1"></div>
            <div class="sk-bounce2"></div>
            <div class="sk-bounce3"></div>
        </div>
    </div>
    <div class="p-w-md m-t-sm">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-content">
                        @Html.Partial("_UserCampaignManagement", Tuple.Create<List<CampaignAdminResult>, CampaignAdminFilter>(Model.Item1, Model.Item2))
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @*@Styles.Render("~/plugins/dateRangeStyles")*@
    @Styles.Render("~/Content/plugins/iCheck/custom")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @*@Styles.Render("~/plugins/dataPickerStyles")*@
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/daterangepickerNewStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/sparkLine")
    @Scripts.Render("~/plugins/flot")
    @Scripts.Render("~/plugins/iCheck")
    @*@Scripts.Render("~/plugins/dataPicker")*@
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @*@Scripts.Render("~/plugins/dateRange")*@
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/daterangepickerNew")
    <script type="text/javascript">
        $(window).load(function () {
            $("#UserId").select2({
                placeholder: "All Users",
                containerCssClass: "userdrp",
                allowClear: true,
                ajax: {
                    //url: "https://api.github.com/search/repositories",
                    //dataType: 'json',
                    traditional: true,
                    url: '@Url.Action("FillUserDropdownAJAX", "Campaign", new { area = "Admin" })',
                    type: "POST",
                    delay: 250,
                    data: function (params) {
                        var cId = $("#CountryId").val();
                        var countryId = new Array();
                        if (cId == null)
                            cId = 0;
                        $.each(cId, function (i, cId) {
                            countryId.push(parseInt(cId));
                        });
                        var oId = $("#OperatorId").val();
                        var operatorId = new Array();
                        if (oId == null)
                            oId = 0;
                        $.each(oId, function (i, oId) {
                            operatorId.push(parseInt(oId));
                        });
                        return {
                            UserName: params.term, // search term
                            page: params.page,
                            countryId: countryId,
                            operatorId: operatorId
                        };
                    },
                    processResults: function (data, params) {
                        // parse the results into the format expected by Select2
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data, except to indicate that infinite
                        // scrolling can be used

                        return {
                            results: data
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) {
                    return markup;
                }, // let our custom formatter work
                minimumInputLength: 1,
                templateResult: formatRepo, // omitted for brevity, see the source of this page
                templateSelection: formatRepoSelection, // omitted for brevity, see the source of this page
                width: '100%'
            });
            function formatRepo(repo) {
                if (repo.loading) {

                    return repo.text
                };

                var markup =
                    '<div class="avatar">' +
                    '<div class="info">' +

                    '<div class="col-sm-16">' + repo.name + '</div>';

                markup += '</div></div> ';

                return markup;
            }
            function formatRepoSelection(repo) {
                return repo.name || repo.text;
            }
        });


        function updateCampaignStatus(campaignId, campaignStatus) {
            $(".spiner-example").show();
            var campaignObject = new Object();
            campaignObject.id = campaignId;
            campaignObject.status = campaignStatus.value;
            $.post('@Url.Action("UpdateStatus", "Campaign",new {@area="Admin" })', campaignObject, function (data) {
                if (data.success == "success") {
                    $(".spiner-example").hide();
                    //window.location.href = '@Url.Action("Index", "Campaign", new { area = "Admin" })';
                    loadData();
                    //var msg = "Campaign status successfully changed to " + data.value + ".";
                    var msg = data.value1 + " status successfully changed to " + data.value;
                    $("#succesdivcampaignmsg").html(msg);
                    $("#succesdivcampaign").show();
                    $("#errordivcampaignmsg").html();
                    $("#errordivcampaign").hide();
                }
                else {
                    $(".spiner-example").hide();
                    $('.dataTables-usercampaign').destroy();
                    loadData();
                    $("#succesdivcampaignmsg").html();
                    $("#succesdivcampaign").hide();
                    $("#errordivcampaignmsg").html(data.value);
                    $("#errordivcampaign").show();
                }
            });

        }

        function updateCampaignStatusLive(campaignId, campaignStatus) {
            $(".spiner-example").show();
            var campaignObject = new Object();
            campaignObject.id = campaignId;
            campaignObject.status = campaignStatus;
            $.post('@Url.Action("UpdateStatus", "Campaign",new {@area="Admin" })', campaignObject, function (data) {
                if (data == "success") {
                    $(".spiner-example").hide();
                    window.location.href = '@Url.Action("Index", "Campaign", new { area = "Admin" })';
                }
            });

        }
        function getscripts(current) {
            $("#pscripts").html($(current).attr('title'));
            $("#myModal6").modal();
        }
        function updatestatus(id, status) {
            $(".spiner-example").show();
            var userObject = new Object();
            userObject.id = id;
            userObject.status = status;
            $.post('@Url.Action("ApproveORRejectCampaign", "Campaign")', userObject, function (data) {

                if (data == "success") {
                    $(".spiner-example").hide();
                    window.location.href = '@Url.Action("Index", "Campaign", new { area = "Admin" })';
                }
            });
        }
        function getParameterByName(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)", "i"),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }
        function getClientByUserId(userId) {
            $.ajax({
                traditional: true,
                url: '@Url.Action("GetClientsUser", "Campaign", new {area="Admin" })',
                type: "POST",
                data: { userId: userId },
                success: function (data) {
                    $("#ClientId").empty();
                    if (data == "nodata" || data == "error") {

                    }
                    else {
                        $.each(data, function (i, client) {
                            $("#ClientId").append('<option value="' + client.Id + '">' +
                                                            client.Name + '</option>');

                        });
                    }
                    $("#ClientId").trigger("chosen:updated");
                },
                error: function (jqXHR, exception) {
                    alert('Internal server error.Please try again.');
                }
            });

        }
        function getAdvertByClientId(clientId) {
            $.ajax({
                traditional: true,
                url: '@Url.Action("GetClientsAdvert", "Campaign", new {area="Admin" })',
                type: "POST",
                data: { clientId: clientId },
                success: function (data) {
                    $("#AdvertId").empty();
                    if (data == "nodata" || data == "error") {

                    }
                    else {
                        $.each(data, function (i, adverts) {
                            $("#AdvertId").append('<option value="' + adverts.Id + '">' +
                                                            adverts.Name + '</option>');

                        });
                    }
                    $("#AdvertId").trigger("chosen:updated");
                },
                error: function (jqXHR, exception) {
                    alert('Internal server error.Please try again.');
                }
            });

        }
        function getCampaignByClientId(clientId, userId) {
            $.ajax({
                traditional: true,
                url: '@Url.Action("GetClientsCampaign", "Campaign", new {area="Admin" })',
                type: "POST",
                data: { clientId: clientId, userId: userId },
                success: function (data) {
                    $("#CampaignId").empty();
                    if (data == "nodata" || data == "error") {

                    }
                    else {
                        $.each(data, function (i, campaigns) {
                            $("#CampaignId").append('<option value="' + campaigns.Id + '">' +
                                                            campaigns.Name + '</option>');

                        });
                    }
                    $("#CampaignId").trigger("chosen:updated");
                },
                error: function (jqXHR, exception) {
                    alert('Internal server error.Please try again.');
                }
            });

        }
        function getAdvertByCampaignId(campaignId) {
             $.ajax({
                traditional: true,
                url: '@Url.Action("GetCampaignAdvert", "Campaign", new {area="Admin" })',
                type: "POST",
                data: { campaignId: campaignId },
                success: function (data) {
                    $("#AdvertId").empty();
                    if (data == "nodata" || data == "error") {

                    }
                    else {
                        $.each(data, function (i, adverts) {
                            $("#AdvertId").append('<option value="' + adverts.Id + '">' +
                                                            adverts.Name + '</option>');

                        });
                    }
                    $("#AdvertId").trigger("chosen:updated");
                },
                error: function (jqXHR, exception) {
                    alert('Internal server error.Please try again.');
                }
            });

        }
        function getCampaignByUserId(userId) {
            $.ajax({
                traditional: true,
                url: '@Url.Action("GetUsersCampaign", "Campaign", new {area="Admin" })',
                type: "POST",
                data: { userId: userId },
                success: function (data) {
                    $("#CampaignId").empty();
                    if (data == "nodata" || data == "error") {

                    }
                    else {
                        $.each(data, function (i, campaigns) {
                            $("#CampaignId").append('<option value="' + campaigns.Id + '">' +
                                                            campaigns.Name + '</option>');

                        });
                    }
                    $("#CampaignId").trigger("chosen:updated");
                },
                error: function (jqXHR, exception) {
                    alert('Internal server error.Please try again.');
                }
            });

        }


        function dataTableSetup() {
            $('.dataTables-usercampaign').DataTable({
                "aaSorting": [],
                "info": false,
                bFilter: false,
                aoColumnDefs: [
                {
                    bSortable: false,
                    aTargets: [-1]
                }
                ],
                "bLengthChange": false,
                "language": {
                    "infoEmpty": "No Record Found."
                },
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                { extend: 'copy', title: 'UserCampaignDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 6] } },
                { extend: 'csv', title: 'UserCampaignDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 6] } },
                { extend: 'excel', title: 'UserCampaignDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 6] } },
                { extend: 'pdf', title: 'UserCampaignDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 6] } },

                {
                    extend: 'print',
                    exportOptions: { columns: [0, 1, 2, 3, 4, 6] },
                    title: 'UserCampaignDetails',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                        .addClass('compact')
                        .css('font-size', 'inherit');
                    }
                }
                ]
            });
        }

        $(window).on('load', function () {
            filluserdropdown();
        });
        function filluserdropdown() {
            var userId = "";
            var url = window.location.href;
            if (url.indexOf("userId") != -1) {
                var id1 = url.split("?");
                var id2 = id1[1].split("=");
                userId = id2[1];
            }
            $("#UserId").val(userId);
            $("#UserId").trigger("change");
        }

        $(document).ready(function () {
            
            $('body').bind('keyup', function (event) {
                if (event.keyCode === 13) {
                    $('#form0').submit();
                }
            });
            $(".chosen-container").bind('keyup', function (e) {
                if (e.which === 13) {
                    $('#form0').submit();
                    // or your stuff here...
                }
            });
            $('#createdFrom').datetimepicker({ ignoreReadonly: true });

            $('#createdTo').datetimepicker({
                useCurrent: false, //Important! See issue #1075
                ignoreReadonly: true
            });

            $("#createdFrom").on("dp.change", function (e) {
                $('#createdTo').data("DateTimePicker").minDate(e.date);
            });

            $("#createdTo").on("dp.change", function (e) {
                $('#createdFrom').data("DateTimePicker").maxDate(e.date);
            });
            $('#fromdate').css({ "height": "34px" });
            $('#todate').css({ "height": "34px" });
            $("#btnSearch").click(function () {
                $(".spiner-example").show();
                oTable.columns(0).search($('#UserId').val());
                oTable.columns(1).search($('#ClientId').val());
                oTable.columns(2).search($('#CampaignId').val());
                oTable.columns(3).search($('#AdvertId').val());
                oTable.columns(4).search($('#CampaignStatusId').val());
                if ($("#fromdate").val() != '') {
                    oTable.columns(5).search($("#fromdate").val() + ',' + $("#todate").val());
                }
                else {
                    oTable.columns(5).search(null);
                }

                //hit search on server
                oTable.draw();
                //$(".spiner-example").hide();
                setTimeout(function () { $(".spiner-example").hide(); }, 10000);
            });
            //var user_Id = getParameterByName("userId");
            //if (user_Id != '') {
            //    var userId = new Array();
            //    userId.push(user_Id);
            //    getClientByUserId(userId);
            //    getCampaignByUserId(userId);
            //}
            $("#UserId").change(function () {
                var userId = new Array();
                $("select#UserId option:selected").each(function () {
                    userId.push($(this).val());
                });
                getClientByUserId(userId);
                getCampaignByUserId(userId);
            });
            $("#CampaignId").change(function () {
                var campaignId = new Array();
                $("select#CampaignId option:selected").each(function () {
                    campaignId.push($(this).val());
                });
                getAdvertByCampaignId(campaignId);
            });
            $("#ClientId").change(function () {
                var clientId = new Array();
                $("select#ClientId option:selected").each(function () {
                    clientId.push($(this).val());
                });
                var userId = new Array();
                $("select#UserId option:selected").each(function () {
                    userId.push($(this).val());
                });
                getAdvertByClientId(clientId);
                getCampaignByClientId(clientId, userId);
            });
            //$('#data_5 .input-daterange').datepicker({
            //    keyboardNavigation: false,
            //    forceParse: false,
            //    autoclose: true
            //});
            var config = {
                '.chosen-select': { width: "100%" },
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
                '.chosen-select-width': { width: "95%" }
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }

            $("#campaignreset").click(function () {
                $(".spiner-example").show();

                $('#fromdate').val('');
                $('#todate').val('');
               // $('#UserId').select2("refresh");
                $("#UserId").select2("val", "");
                //$("#UserId").select2();
                $("#ClientId").val('0');
                $("#ClientId").trigger("chosen:updated");
                $("#CampaignId").val('0');
                $("#CampaignId").trigger("chosen:updated");
                $("#AdvertId").val('0');
                $("#AdvertId").trigger("chosen:updated");
                $("#CampaignStatusId").val('0');
                $("#CampaignStatusId").trigger("chosen:updated");
                $("#CountryId").val('0');
                $("#CountryId").trigger("chosen:updated");
                $("#OperatorId").val('0');
                $("#OperatorId").trigger("chosen:updated");
                $("#Item2_Fromdate").val('');
                $("#Item2_Todate").val('');

                oTable.columns(0).search(null);
                oTable.columns(1).search(null);
                oTable.columns(2).search(null);
                oTable.columns(3).search(null);
                oTable.columns(4).search(null);
                oTable.columns(5).search(null);

                //hit search on server
                oTable.draw();
                setTimeout(function () { $(".spiner-example").hide(); }, 4000);
                getAdvertByCampaignId(null);
                //$(".spiner-example").hide();

                @*$.ajax({
                    data: null,
                    datatype: "text/plain",
                    type: "POST",
                    url: '@Url.Action("SearchCampaigns", "Campaign",new {area="Admin" })',
                    cache: false,
                    success: function (data) {
                        $(".spiner-example").hide();
                        $("#campaignList").html(data);
                        dataTableSetup();
                    }
                });*@

                //oTable.columns(0).search(null);
                //oTable.columns(1).search(null);
                //oTable.columns(2).search(null);
                //oTable.columns(3).search(null);
                ////Apply search for Status // DataTable column index 3
                //oTable.columns(4).search(null);
                ////hit search on server
                //oTable.draw();
                //$(".spiner-example").hide();

            });
            loadData();

            //$('.dataTables-usercampaign').DataTable({

            //    "info": false,
            //    "pageLength": 10,
            //    //bFilter: false,
            //    "aaSorting": [],
            //    "bLengthChange": false,
            //    //"processing": true, // for show processing bar
            //    "serverSide": true, // for process on server side
            //    "orderMulti": false, // for disable multi column order
            //    //"dom": '<"top"i>rt<"bottom"lp><"clear">', // for hide default global search box // little confusion? don't worry I explained in the tutorial website
            //    //dom: '<"html5buttons"B>lTfgitp',
            //    //dom: 'Bfrtip',
            //    dom: '<"floatRight"B><"clear">frtip',
            //    buttons: [
            //        {
            //            extend: 'copyHtml5', title: 'UserCampaignDetails',
            //            exportOptions: {
            //                columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
            //                format: {
            //                    body: function (data, row, column, node) {
            //                        if (row == 0) {
            //                            return $(data)[0].innerText;
            //                        }
            //                        else if (row == 1) {
            //                            if ($(data)[0].className == "label1") {
            //                                return $(data)[0].innerText;
            //                            }
            //                            else {
            //                                return $(data)[0].innerText;
            //                            }
            //                        }
            //                        else if (row == 2) {
            //                            return data;
            //                        }
            //                        else if (row == 3) {
            //                            return data;
            //                        }
            //                        else if (row == 4) {
            //                            return data;
            //                        }
            //                        else if (row == 5) {
            //                            return data;
            //                        }
            //                        else if (row == 6) {
            //                            return data;
            //                        }
            //                        else if (row == 7) {
            //                            return data;
            //                        }
            //                        else if (row == 8) {
            //                            return data;
            //                        }
            //                        else if (row == 9) {
            //                            return data;
            //                        }
            //                        else if (row == 10) {
            //                            return data;
            //                        }
            //                        else if (row == 11) {
            //                            return $(data).children("option:selected").text();
            //                        }
            //                        else if (row == 12) {
            //                            return data;
            //                        }
            //                    }
            //                }
            //            }
            //        },
            //        {
            //            extend: 'csvHtml5', title: 'UserCampaignDetails',
            //            exportOptions: {
            //                columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
            //                format: {
            //                    body: function (data, row, column, node) {
            //                        if (row == 0) {
            //                            return $(data)[0].innerText;
            //                        }
            //                        else if (row == 1) {
            //                            return data;
            //                        }
            //                        else if (row == 2) {
            //                            if (data == "-") {
            //                                return data;
            //                            }
            //                            else {
            //                                return $(data)[0].innerText;
            //                            }
            //                        }
            //                        else if (row == 3) {
            //                            return data;
            //                        }
            //                        else if (row == 4) {
            //                            if (data == "-") {
            //                                return data;
            //                            }
            //                            else {
            //                                return $(data)[0].innerText;
            //                            }
            //                        }
            //                        else if (row == 5) {
            //                            return data;
            //                        }
            //                        else if (row == 6) {
            //                            return data;
            //                        }
            //                        else if (row == 7) {
            //                            return data;
            //                        }
            //                        else if (row == 8) {
            //                            return data;
            //                        }
            //                        else if (row == 9) {
            //                            return data;
            //                        }
            //                        else if (row == 10) {
            //                            return data;
            //                        }
            //                        else if (row == 11) {
            //                            return $(data).children("option:selected").text();
            //                        }
            //                        else if (row == 12) {
            //                            return data;
            //                        }
            //                    }
            //                }
            //            }
            //        },
            //        {
            //            extend: 'excelHtml5', title: 'UserCampaignDetails',
            //            exportOptions: {
            //                columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
            //                format: {
            //                    body: function (data, row, column, node) {
            //                        if (row == 0) {
            //                            return $(data)[0].innerText;
            //                        }
            //                        else if (row == 1) {
            //                            return data;
            //                        }
            //                        else if (row == 2) {
            //                            if (data == "-") {
            //                                return data;
            //                            }
            //                            else {
            //                                return $(data)[0].innerText;
            //                            }
            //                        }
            //                        else if (row == 3) {
            //                            return data;
            //                        }
            //                        else if (row == 4) {
            //                            if (data == "-") {
            //                                return data;
            //                            }
            //                            else {
            //                                return $(data)[0].innerText;
            //                            }
            //                        }
            //                        else if (row == 5) {
            //                            return data;
            //                        }
            //                        else if (row == 6) {
            //                            return data;
            //                        }
            //                        else if (row == 7) {
            //                            return data;
            //                        }
            //                        else if (row == 8) {
            //                            return data;
            //                        }
            //                        else if (row == 9) {
            //                            return data;
            //                        }
            //                        else if (row == 10) {
            //                            return data;
            //                        }
            //                        else if (row == 11) {
            //                            return $(data).children("option:selected").text();
            //                        }
            //                        else if (row == 12) {
            //                            return data;
            //                        }
            //                    }
            //                }
            //            }
            //        },
            //        {
            //            extend: 'pdfHtml5', title: 'UserCampaignDetails',
            //            orientation: 'landscape',
            //            pageSize: 'LEGAL',
            //            exportOptions: {
            //                columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
            //                format: {
            //                    body: function (data, row, column, node) {
            //                        if (row == 0) {
            //                            return $(data)[0].innerText;
            //                        }
            //                        else if (row == 1) {
            //                            return data;
            //                        }
            //                        else if (row == 2) {
            //                            if (data == "-") {
            //                                return data;
            //                            }
            //                            else {
            //                                return $(data)[0].innerText;
            //                            }
            //                        }
            //                        else if (row == 3) {
            //                            return data;
            //                        }
            //                        else if (row == 4) {
            //                            if (data == "-") {
            //                                return data;
            //                            }
            //                            else {
            //                                return $(data)[0].innerText;
            //                            }
            //                        }
            //                        else if (row == 5) {
            //                            return data;
            //                        }
            //                        else if (row == 6) {
            //                            return data;
            //                        }
            //                        else if (row == 7) {
            //                            return data;
            //                        }
            //                        else if (row == 8) {
            //                            return data;
            //                        }
            //                        else if (row == 9) {
            //                            return data;
            //                        }
            //                        else if (row == 10) {
            //                            return data;
            //                        }
            //                        else if (row == 11) {
            //                            return $(data).children("option:selected").text();
            //                        }
            //                        else if (row == 12) {
            //                            return data;
            //                        }
            //                    }
            //                }
            //            }
            //        },

            //        {
            //            extend: 'print',
            //            exportOptions: {
            //                columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
            //                format: {
            //                    body: function (data, row, column, node) {
            //                        if (row == 0) {
            //                            return $(data)[0].innerText;
            //                        }
            //                        else if (row == 1) {
            //                            return data;
            //                        }
            //                        else if (row == 2) {
            //                            if (data == "-") {
            //                                return data;
            //                            }
            //                            else {
            //                                return $(data)[0].innerText;
            //                            }
            //                        }
            //                        else if (row == 3) {
            //                            return data;
            //                        }
            //                        else if (row == 4) {
            //                            if (data == "-") {
            //                                return data;
            //                            }
            //                            else {
            //                                return $(data)[0].innerText;
            //                            }
            //                        }
            //                        else if (row == 5) {
            //                            return data;
            //                        }
            //                        else if (row == 6) {
            //                            return data;
            //                        }
            //                        else if (row == 7) {
            //                            return data;
            //                        }
            //                        else if (row == 8) {
            //                            return data;
            //                        }
            //                        else if (row == 9) {
            //                            return data;
            //                        }
            //                        else if (row == 10) {
            //                            return data;
            //                        }
            //                        else if (row == 11) {
            //                            return $(data).children("option:selected").text();
            //                        }
            //                        else if (row == 12) {
            //                            return data;
            //                        }
            //                    }
            //                }
            //            },
            //            title: 'UserCampaignDetails',
            //            customize: function (win) {
            //                $(win.document.body).addClass('white-bg');
            //                $(win.document.body).css('font-size', '10px');

            //                $(win.document.body).find('table')
            //                    .addClass('compact')
            //                    .css('font-size', 'inherit');
            //            }
            //        }
            //    ],
            //    "ajax": {
            //        "url": "/Campaign/LoadData",
            //        "type": "POST",
            //        "datatype": "json"
            //    },
            //    "aoColumns": [

            //        {
            //            "data": "Email", "name": "Email", "bSortable": true, "autoWidth": true,
            //            "mRender": function (data, type, row) {
            //                if (row.Status != 3) {
            //                    return '<td><a href=/Admin/UserManagement/UserDetails?id=' + row.UserId + '>' + row.Email + '</a></td>';
            //                }
            //                else {
            //                    return '<td>' + row.Email + '</td>';
            //                }
            //            }
            //        },
            //        { "data": "UserName", "name": "UserName", "bSortable": true, "autoWidth": true }, //index 1
            //        //{
            //        //    "data": "ClientName", "name": "ClientName", "bSortable": true, "autoWidth": true,
            //        //    "mRender": function (data, type, row) {
            //        //        return '<td><a href=/Admin/AdminClient/ClientDetails?id=' + row.ClientId + '>' + row.ClientName + '</a></td>';
            //        //    }

            //        //}, //index 1
            //        {
            //            "data": "ClientName", "name": "ClientName", "bSortable": true, "autoWidth": true,
            //            "mRender": function (data, type, row) {
            //                if (row.ClientName != "-") {
            //                    return '<a href=/Admin/AdminClient/ClientDetails?id=' + row.ClientId + '>' + row.ClientName + '</a>';
            //                }
            //                else {
            //                    return row.ClientName;
            //                }
            //            }

            //        }, //index 1
            //        {
            //            "data": "CampaignName", "name": "CampaignName", "bSortable": true, "autoWidth": true,
            //            "mRender": function (data, type, row) {
            //                if (row.Status == 5) {
            //                    return row.CampaignName;
            //                }
            //                else {
            //                    //return '<a href=/Admin/CampaignAdvertDetails/Index?id=' + row.CampaignProfileId + '>' + row.CampaignName + '</a>';
            //                    return row.CampaignName;
            //                }
            //            }

            //        }, //index 2
            //        {
            //            "data": "AdvertName", "name": "AdvertName", "bSortable": true, "autoWidth": true,
            //            "mRender": function (data, type, row) {
            //                if (row.AdvertName == "-") {
            //                    return '-';
            //                }
            //                else {
            //                    return '<a href=/Admin/UserAdvert/Index?id=' + row.AdvertId + '>' + row.AdvertName + '</a>';
            //                }
            //            }

            //        }, //index 3
            //        { "data": "finaltotalplays", "name": "finaltotalplays", "bSortable": true, "autoWidth": true },
            //        {
            //            "data": "TotalBudget", "name": "TotalBudget", "bSortable": true, "autoWidth": true,
            //            "mRender": function (data, type, row) {
            //                return parseFloat(row.TotalBudget).toFixed(2);
            //            }
            //        },
            //        {
            //            "data": "totalspend", "name": "totalspend", "bSortable": true, "autoWidth": true,
            //            "mRender": function (data, type, row) {
            //                return parseFloat(row.totalspend).toFixed(2);
            //            }
            //        },
            //        {
            //            "data": "FundsAvailable", "name": "FundsAvailable", "bSortable": true, "autoWidth": true,
            //            "mRender": function (data, type, row) {
            //                return parseFloat(row.FundsAvailable).toFixed(2);
            //            }
            //        },
            //        {
            //            "data": "totalaveragebid", "name": "totalaveragebid", "bSortable": true, "autoWidth": true,
            //            "mRender": function (data, type, row) {
            //                return parseFloat(row.totalaveragebid).toFixed(2);
            //            }
            //        },
            //        { "data": "DisplayCreatedDateTime", "name": "CreatedDateTime", "bSortable": true, "autoWidth": true },
            //        {
            //            "data": "Status", "name": "Status", "bSortable": false, "autoWidth": true,
            //            "mRender": function (data, type, row) {
            //                if (row.IsAdminApproval == true && row.Status == 8) {
            //                    return '<label class="label label-danger">Campaign Paused Due To Insufficient Funds</label>';
            //                }
            //                else if (row.Status == 8) {
            //                    return '<label class="label label-danger">Campaign Paused Due To Insufficient Funds</label>';
            //                }
            //                else if (row.Status != 6) {
            //                    var dd = '<select class=form-control input-s-sm inline onchange="updateCampaignStatus(' + row.CampaignProfileId + ',this);">'
            //                    //var dd = '<td><select class=form-control input-s-sm inline>'
            //                    if (row.Status == 1) {

            //                        var s1 = '<option value=1 selected=selected>Planned</option>' +
            //                            '<option value=2>Play</option>' +
            //                            '<option value=3>Pause</option>' +
            //                            '<option value=4>Stop</option>' +
            //                            '<option value=5>Archive</option>';

            //                        dd = dd + s1;
            //                    }
            //                    else if (row.Status == 2) {

            //                        var s2 = '<option value=1 >Planned</option>' +
            //                            '<option value=2 selected=selected>Play</option>' +
            //                            '<option value=3>Pause</option>' +
            //                            '<option value=4>Stop</option>' +
            //                            '<option value=5>Archive</option>';
            //                        dd = dd + s2;
            //                    }
            //                    else if (row.Status == 3) {
            //                        var s3 = '<option value=1 >Planned</option>' +
            //                            '<option value=2 >Play</option>' +
            //                            '<option value=3 selected=selected>Pause</option>' +
            //                            '<option value=4>Stop</option>' +
            //                            '<option value=5>Archive</option>';

            //                        dd = dd + s3;
            //                    }
            //                    else if (row.Status == 4) {

            //                        var s4 = '<option value=1 >Planned</option>' +
            //                            '<option value=2 >Play</option>' +
            //                            '<option value=3 >Pause</option>' +
            //                            '<option value=4 selected=selected>Stop</option>' +
            //                            '<option value=5>Archive</option>';
            //                        dd = dd + s4;
            //                    }
            //                    else {
            //                        var s5 = '<option value=1 >Planned</option>' +
            //                            '<option value=2 >Play</option>' +
            //                            '<option value=3 >Pause</option>' +
            //                            '<option value=4 >Stop</option>' +
            //                            '<option value=5 selected=selected>Archive</option>';
            //                        dd = dd + s5;
            //                    }
            //                    '</select>'

            //                    return dd;
            //                }
            //                else {
            //                    return '<label class=label label-primary>Waitingforadapproval</label>';
            //                    //return '<td><a class="btn btn-blue btn-xs" onclick="updateCampaignStatus(' + row.CampaignProfileId + ',2);">Play</a></td>';

            //                }
            //            }
            //        },
            //        { "data": "TicketCount", "name": "TicketCount", "bSortable": true, "autoWidth": true },
            //        {
            //            "data": "Action", "name": "Action", "bSortable": false, "autoWidth": true,
            //            "mRender": function (data, type, row) {
            //                if (row.Status != 6) {
            //                    return '<td>-</td>'
            //                }
            //                else {
            //                    //return '<td><a class="btn btn-blue btn-xs" onclick="updateCampaignStatusLive(' + row.CampaignProfileId + ',2);">Play</a></td>';
            //                    return '<td><a class="btn btn-blue btn-xs" onclick="updateCampaignStatusLive(' + row.CampaignProfileId + ',8);">Play</a></td>';
            //                }
            //            }

            //        },
            //    ],
            //    "fnInitComplete": function () {
            //        $(".spiner-example").hide();
            //        $(".dataTables_filter").css("display", "none");
            //        $(".floatRight").css('float', 'right');
            //        $(".floatRight").css('padding-bottom', '12px');
            //        $(".floatRight .btn").css('font-size', '12px');
            //        $(".floatRight .btn").css('font-size', '12px');
            //        $(".floatRight .btn").css('font-size', '12px');
            //        $(".floatRight .btn").css('font-size', '12px');
            //        $(".floatRight .btn").css('font-size', '12px');
            //        //$(".dt-buttons btn-group").css('float', 'right');
            //        //$(".dt-buttons btn-group").css("padding-bottom", "12px");
            //    }
            //});
            //oTable = $('.dataTables-usercampaign').DataTable();

            //$('.dataTables-usercampaign').DataTable({
            //    "aaSorting": [],
            //    "info": false,
            //    bFilter: false,
            //    "bLengthChange": false,
            //    "language": {
            //        "infoEmpty": "No Record Found."
            //    },



            //    aoColumnDefs: [
            //    {
            //        bSortable: false,
            //        aTargets: [-1]
            //    }
            //    ],
            //    dom: '<"html5buttons"B>lTfgitp',
            //    buttons: [
            //    { extend: 'copy', title: 'UserAdvertsDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 6] } },
            //    { extend: 'csv', title: 'UserAdvertsDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 6] } },
            //    { extend: 'excel', title: 'UserAdvertsDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 6] } },
            //    { extend: 'pdf', title: 'UserAdvertsDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 6] } },

            //    {
            //        extend: 'print',
            //        exportOptions: { columns: [0, 1, 2, 3, 4, 6] },
            //        title: 'UserDetails',
            //        customize: function (win) {
            //            $(win.document.body).addClass('white-bg');
            //            $(win.document.body).css('font-size', '10px');

            //            $(win.document.body).find('table')
            //            .addClass('compact')
            //            .css('font-size', 'inherit');
            //        }
            //    }
            //    ]
            //});
        });

        function loadData() {
            $('.dataTables-usercampaign').DataTable({
                "preDrawCallback": function (settings) {
                    $(".spiner-example").show();
                },
                "destroy": true,
                "info": false,
                "pageLength": 10,
                //bFilter: false,
                "aaSorting": [],
                "bLengthChange": false,
                //"processing": true, // for show processing bar
                "serverSide": true, // for process on server side
                "orderMulti": false, // for disable multi column order
                //"dom": '<"top"i>rt<"bottom"lp><"clear">', // for hide default global search box // little confusion? don't worry I explained in the tutorial website
                //dom: '<"html5buttons"B>lTfgitp',
                //dom: 'Bfrtip',
                dom: '<"floatRight"B><"clear">frtip',
                buttons: [
                    {
                        extend: 'copyHtml5', title: 'UserCampaignDetails',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                            format: {
                                body: function (data, row, column, node) {
                                    if (row == 0) {
                                        return $(data)[0].innerText;
                                    }
                                    else if (row == 1) {
                                        if ($(data)[0].className == "label1") {
                                            return $(data)[0].innerText;
                                        }
                                        else {
                                            return $(data)[0].innerText;
                                        }
                                    }
                                    else if (row == 2) {
                                        return data;
                                    }
                                    else if (row == 3) {
                                        return data;
                                    }
                                    else if (row == 4) {
                                        return data;
                                    }
                                    else if (row == 5) {
                                        return data;
                                    }
                                    else if (row == 6) {
                                        return data;
                                    }
                                    else if (row == 7) {
                                        return data;
                                    }
                                    else if (row == 8) {
                                        return data;
                                    }
                                    else if (row == 9) {
                                        return data;
                                    }
                                    else if (row == 10) {
                                        return data;
                                    }
                                    else if (row == 11) {
                                        return $(data).children("option:selected").text();
                                    }
                                    else if (row == 12) {
                                        return data;
                                    }
                                }
                            }
                        }
                    },
                    {
                        extend: 'csvHtml5', title: 'UserCampaignDetails',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                            format: {
                                body: function (data, row, column, node) {
                                    if (row == 0) {
                                        return $(data)[0].innerText;
                                    }
                                    else if (row == 1) {
                                        return data;
                                    }
                                    else if (row == 2) {
                                        if (data == "-") {
                                            return data;
                                        }
                                        else {
                                            return $(data)[0].innerText;
                                        }
                                    }
                                    else if (row == 3) {
                                        return data;
                                    }
                                    else if (row == 4) {
                                        if (data == "-") {
                                            return data;
                                        }
                                        else {
                                            return $(data)[0].innerText;
                                        }
                                    }
                                    else if (row == 5) {
                                        return data;
                                    }
                                    else if (row == 6) {
                                        return data;
                                    }
                                    else if (row == 7) {
                                        return data;
                                    }
                                    else if (row == 8) {
                                        return data;
                                    }
                                    else if (row == 9) {
                                        return data;
                                    }
                                    else if (row == 10) {
                                        return data;
                                    }
                                    else if (row == 11) {
                                        return $(data).children("option:selected").text();
                                    }
                                    else if (row == 12) {
                                        return data;
                                    }
                                }
                            }
                        }
                    },
                    {
                        extend: 'excelHtml5', title: 'UserCampaignDetails',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                            format: {
                                body: function (data, row, column, node) {
                                    if (row == 0) {
                                        return $(data)[0].innerText;
                                    }
                                    else if (row == 1) {
                                        return data;
                                    }
                                    else if (row == 2) {
                                        if (data == "-") {
                                            return data;
                                        }
                                        else {
                                            return $(data)[0].innerText;
                                        }
                                    }
                                    else if (row == 3) {
                                        return data;
                                    }
                                    else if (row == 4) {
                                        if (data == "-") {
                                            return data;
                                        }
                                        else {
                                            return $(data)[0].innerText;
                                        }
                                    }
                                    else if (row == 5) {
                                        return data;
                                    }
                                    else if (row == 6) {
                                        return data;
                                    }
                                    else if (row == 7) {
                                        return data;
                                    }
                                    else if (row == 8) {
                                        return data;
                                    }
                                    else if (row == 9) {
                                        return data;
                                    }
                                    else if (row == 10) {
                                        return data;
                                    }
                                    else if (row == 11) {
                                        return $(data).children("option:selected").text();
                                    }
                                    else if (row == 12) {
                                        return data;
                                    }
                                }
                            }
                        }
                    },
                    {
                        extend: 'pdfHtml5', title: 'UserCampaignDetails',
                        orientation: 'landscape',
                        pageSize: 'LEGAL',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                            format: {
                                body: function (data, row, column, node) {
                                    if (row == 0) {
                                        return $(data)[0].innerText;
                                    }
                                    else if (row == 1) {
                                        return data;
                                    }
                                    else if (row == 2) {
                                        if (data == "-") {
                                            return data;
                                        }
                                        else {
                                            return $(data)[0].innerText;
                                        }
                                    }
                                    else if (row == 3) {
                                        return data;
                                    }
                                    else if (row == 4) {
                                        if (data == "-") {
                                            return data;
                                        }
                                        else {
                                            return $(data)[0].innerText;
                                        }
                                    }
                                    else if (row == 5) {
                                        return data;
                                    }
                                    else if (row == 6) {
                                        return data;
                                    }
                                    else if (row == 7) {
                                        return data;
                                    }
                                    else if (row == 8) {
                                        return data;
                                    }
                                    else if (row == 9) {
                                        return data;
                                    }
                                    else if (row == 10) {
                                        return data;
                                    }
                                    else if (row == 11) {
                                        return $(data).children("option:selected").text();
                                    }
                                    else if (row == 12) {
                                        return data;
                                    }
                                }
                            }
                        }
                    },

                    {
                        extend: 'print',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                            format: {
                                body: function (data, row, column, node) {
                                    if (row == 0) {
                                        return $(data)[0].innerText;
                                    }
                                    else if (row == 1) {
                                        return data;
                                    }
                                    else if (row == 2) {
                                        if (data == "-") {
                                            return data;
                                        }
                                        else {
                                            return $(data)[0].innerText;
                                        }
                                    }
                                    else if (row == 3) {
                                        return data;
                                    }
                                    else if (row == 4) {
                                        if (data == "-") {
                                            return data;
                                        }
                                        else {
                                            return $(data)[0].innerText;
                                        }
                                    }
                                    else if (row == 5) {
                                        return data;
                                    }
                                    else if (row == 6) {
                                        return data;
                                    }
                                    else if (row == 7) {
                                        return data;
                                    }
                                    else if (row == 8) {
                                        return data;
                                    }
                                    else if (row == 9) {
                                        return data;
                                    }
                                    else if (row == 10) {
                                        return data;
                                    }
                                    else if (row == 11) {
                                        return $(data).children("option:selected").text();
                                    }
                                    else if (row == 12) {
                                        return data;
                                    }
                                }
                            }
                        },
                        title: 'UserCampaignDetails',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],
                "ajax": {
                    "url": "/Campaign/LoadData",
                    "type": "POST",
                    "datatype": "json"
                },
                "aoColumns": [

                    {
                        "data": "Email", "name": "Email", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.Status != 3) {
                                return '<td><a href=/Admin/UserManagement/UserDetails?id=' + row.UserId + '>' + row.Email + '</a></td>';
                            }
                            else {
                                return '<td>' + row.Email + '</td>';
                            }
                        }
                    },
                    { "data": "UserName", "name": "UserName", "bSortable": true, "autoWidth": true }, //index 1
                    //{
                    //    "data": "ClientName", "name": "ClientName", "bSortable": true, "autoWidth": true,
                    //    "mRender": function (data, type, row) {
                    //        return '<td><a href=/Admin/AdminClient/ClientDetails?id=' + row.ClientId + '>' + row.ClientName + '</a></td>';
                    //    }

                    //}, //index 1
                    {
                        "data": "ClientName", "name": "ClientName", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.ClientName != "-") {
                                return '<a href=/Admin/AdminClient/ClientDetails?id=' + row.ClientId + '>' + row.ClientName + '</a>';
                            }
                            else {
                                return row.ClientName;
                            }
                        }

                    }, //index 1
                    {
                        "data": "CampaignName", "name": "CampaignName", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.Status == 5) {
                                return row.CampaignName;
                            }
                            else {
                                //return '<a href=/Admin/CampaignAdvertDetails/Index?id=' + row.CampaignProfileId + '>' + row.CampaignName + '</a>';
                                return row.CampaignName;
                            }
                        }

                    }, //index 2
                    {
                        "data": "AdvertName", "name": "AdvertName", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.AdvertName == "-") {
                                return '-';
                            }
                            else {
                                return '<a href=/Admin/UserAdvert/Index?id=' + row.AdvertId + '>' + row.AdvertName + '</a>';
                            }
                        }

                    }, //index 3
                    { "data": "finaltotalplays", "name": "finaltotalplays", "bSortable": true, "autoWidth": true },
                    {
                        "data": "TotalBudget", "name": "TotalBudget", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            return parseFloat(row.TotalBudget).toFixed(2);
                        }
                    },
                    {
                        "data": "totalspend", "name": "totalspend", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            return parseFloat(row.totalspend).toFixed(2);
                        }
                    },
                    {
                        "data": "FundsAvailable", "name": "FundsAvailable", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            return parseFloat(row.FundsAvailable).toFixed(2);
                        }
                    },
                    {
                        "data": "totalaveragebid", "name": "totalaveragebid", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            return parseFloat(row.totalaveragebid).toFixed(2);
                        }
                    },
                    { "data": "DisplayCreatedDateTime", "name": "CreatedDateTime", "bSortable": true, "autoWidth": true },
                    {
                        "data": "Status", "name": "Status", "bSortable": false, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.IsAdminApproval == true && row.Status == 8) {
                                return '<label class="label label-danger">Campaign Paused Due To Insufficient Funds</label>';
                            }
                            else if (row.Status == 7) {
                                return '<label class="label label-primary">InProgress</label>';
                            }
                            else if (row.Status == 8) {
                                return '<label class="label label-danger">Campaign Paused Due To Insufficient Funds</label>';
                            }
                            else if (row.Status != 6) {
                                var dd = '<select class=form-control input-s-sm inline onchange="updateCampaignStatus(' + row.CampaignProfileId + ',this);">'
                                //var dd = '<td><select class=form-control input-s-sm inline>'
                                if (row.Status == 1) {

                                    var s1 = '<option value=1 selected=selected>Planned</option>' +
                                        '<option value=2>Play</option>' +
                                        '<option value=3>Pause</option>' +
                                        '<option value=4>Stop</option>' +
                                        '<option value=5>Archive</option>';

                                    dd = dd + s1;
                                }
                                else if (row.Status == 2) {

                                    var s2 = '<option value=1 >Planned</option>' +
                                        '<option value=2 selected=selected>Play</option>' +
                                        '<option value=3>Pause</option>' +
                                        '<option value=4>Stop</option>' +
                                        '<option value=5>Archive</option>';
                                    dd = dd + s2;
                                }
                                else if (row.Status == 3) {
                                    var s3 = '<option value=1 >Planned</option>' +
                                        '<option value=2 >Play</option>' +
                                        '<option value=3 selected=selected>Pause</option>' +
                                        '<option value=4>Stop</option>' +
                                        '<option value=5>Archive</option>';

                                    dd = dd + s3;
                                }
                                else if (row.Status == 4) {

                                    var s4 = '<option value=1 >Planned</option>' +
                                        '<option value=2 >Play</option>' +
                                        '<option value=3 >Pause</option>' +
                                        '<option value=4 selected=selected>Stop</option>' +
                                        '<option value=5>Archive</option>';
                                    dd = dd + s4;
                                }
                                else {
                                    var s5 = '<option value=1 >Planned</option>' +
                                        '<option value=2 >Play</option>' +
                                        '<option value=3 >Pause</option>' +
                                        '<option value=4 >Stop</option>' +
                                        '<option value=5 selected=selected>Archive</option>';
                                    dd = dd + s5;
                                }
                                '</select>'

                                return dd;
                            }
                            else {
                                return '<label class=label label-primary>Waiting for approval</label>';
                                //return '<td><a class="btn btn-blue btn-xs" onclick="updateCampaignStatus(' + row.CampaignProfileId + ',2);">Play</a></td>';

                            }
                        }
                    },
                    { "data": "TicketCount", "name": "TicketCount", "bSortable": true, "autoWidth": true },
                    {
                        "data": "Action", "name": "Action", "bSortable": false, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.Status != 6) {
                                return '<td>-</td>'
                            }
                            else {
                                //return '<td><a class="btn btn-blue btn-xs" onclick="updateCampaignStatusLive(' + row.CampaignProfileId + ',2);">Play</a></td>';
                                return '<td><a class="btn btn-blue btn-xs" onclick="updateCampaignStatusLive(' + row.CampaignProfileId + ',8);">Play</a></td>';
                            }
                        }

                    },
                ],
                "drawCallback": function (settings) {
                    $(".spiner-example").hide();
                },
                "fnInitComplete": function () {
                    $(".spiner-example").hide();
                    $(".dataTables_filter").css("display", "none");
                    $(".floatRight").css('float', 'right');
                    $(".floatRight").css('padding-bottom', '12px');
                    $(".floatRight .btn").css('font-size', '12px');
                    $(".floatRight .btn").css('font-size', '12px');
                    $(".floatRight .btn").css('font-size', '12px');
                    $(".floatRight .btn").css('font-size', '12px');
                    $(".floatRight .btn").css('font-size', '12px');
                    //$(".dt-buttons btn-group").css('float', 'right');
                    //$(".dt-buttons btn-group").css("padding-bottom", "12px");
                }
            });
            oTable = $('.dataTables-usercampaign').DataTable();
        }

        $("#CountryId").change(function () {
            $(".loader").show();
            $("#OperatorId").empty(); //remove all child nodes
            $("#OperatorId").trigger("chosen:updated");
            var id = $("#CountryId").val();
            var countryId = new Array();
            if (id == null)
                id = 0;
            $.each(id, function (i, id) {
                countryId.push(parseInt(id));
            });

            $.ajax({
                type: "POST",
                url: '@Url.Action("FillOperator", "Campaign", new { area = "Admin" })',
                data: { countryId: countryId },
                success: function (data) {
                    if (data.length == 0) {
                        $("#OperatorId").empty(); //remove all child nodes
                        $("#OperatorId").trigger("chosen:updated");
                    }
                    else {
                        $.each(data, function (i, data) {
                            $("#OperatorId").append('<option value="' + data.Value + '">' +
                                data.Text + '</option>');
                        });
                        $("#OperatorId").trigger("chosen:updated");
                    }
                    $(".loader").hide();
                }
            });
            getClientByCountryId(countryId);
            getCampaignByCountryId(countryId);
            getAdvertByCountryId(countryId, null);
        });

        $("#OperatorId").change(function () {
            $(".loader").show();
            var oid = $("#OperatorId").val();
            var cid = $("#CountryId").val();
            var countryId = new Array();
            if (cid == null)
                cid = 0;
            $.each(cid, function (i, cid) {
                countryId.push(parseInt(cid));
            });
            var operatorId = new Array();
            if (oid == null)
                oid = 0;
            $.each(oid, function (i, oid) {
                operatorId.push(parseInt(oid));
            });

            if (oid == 0) {
                getAdvertByCountryId(countryId, null);
            }
            else {
                getAdvertByCountryId(countryId, operatorId);
            }
        });

        function getClientByCountryId(countryId) {
            $.ajax({
                traditional: true,
                url: '@Url.Action("GetClientByCountryId", "Campaign", new {area="Admin" })',
                type: "POST",
                data: { countryId: countryId },
                success: function (data) {
                    $("#ClientId").empty();
                    if (data == "nodata" || data == "error") { }
                    else {
                        $.each(data, function (i, clients) {
                            $("#ClientId").append('<option value="' + clients.Id + '">' + clients.Name + '</option>');
                        });
                    }
                    $("#ClientId").trigger("chosen:updated");
                },
                error: function (jqXHR, exception) {
                    alert('Internal server error.Please try again.');
                }
            });
        }

        function getCampaignByCountryId(countryId) {
            $.ajax({
                traditional: true,
                url: '@Url.Action("GetCampaignByCountryId", "Campaign", new {area="Admin" })',
                type: "POST",
                data: { countryId: countryId },
                success: function (data) {
                    $("#CampaignId").empty();
                    if (data == "nodata" || data == "error") { }
                    else {
                        $.each(data, function (i, campaigns) {
                            $("#CampaignId").append('<option value="' + campaigns.Id + '">' + campaigns.Name + '</option>');
                        });
                    }
                    $("#CampaignId").trigger("chosen:updated");
                },
                error: function (jqXHR, exception) {
                    alert('Internal server error.Please try again.');
                }
            });
        }

        function getAdvertByCountryId(countryId, operatorId) {
            $.ajax({
                traditional: true,
                url: '@Url.Action("GetAdvertByCountryId", "Campaign", new {area="Admin" })',
                type: "POST",
                data: { countryId: countryId, operatorId: operatorId },
                success: function (data) {
                    $("#AdvertId").empty();
                    if (data == "nodata" || data == "error") { }
                    else {
                        $.each(data, function (i, adverts) {
                            $("#AdvertId").append('<option value="' + adverts.Id + '">' + adverts.Name + '</option>');
                        });
                    }
                    $("#AdvertId").trigger("chosen:updated");
                },
                error: function (jqXHR, exception) {
                    alert('Internal server error.Please try again.');
                }
            });
        }
    </script>
}


