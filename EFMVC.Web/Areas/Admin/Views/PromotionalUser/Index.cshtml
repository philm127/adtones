@using EFMVC.Web.Areas.Admin.ViewModel
@model  PromotionalUserFormModel
@{
    ViewBag.Title = "Import Promotional User";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="wrapper wrapper-content animated fadeIn">
    <div class="p-w-md m-t-sm">
        <div class="row" style="background-color:white">
            @if (TempData["success"] != null)
            {
                <div class="alert alert-success alert-dismissable">
                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                    @TempData["success"]
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissable">
                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                    @TempData["Error"]
                </div>
            }
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-title" style="border-style:none;">
                        <h5>Import Promotional Users</h5>
                    </div>
                    <div class="ibox-content">
                        @using (Html.BeginForm("SavePromotionalUser", "PromotionalUser", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form1" }))
                        {
                            <div class="row">
                                <div class="form-group">
                                    <label class="col-lg-2 control-label">Country <label class="lbldanger">*</label></label>
                                    <div class="col-lg-4">
                                        @Html.DropDownListFor(Model => Model.CountryId, ViewBag.countrydetails as IEnumerable<SelectListItem>, "--Select Country--", new { @class = "form-control input-s-sm inline" })
                                        @Html.ValidationMessageFor(Model => Model.CountryId, null, new { @class = "btn-danger" })
                                    </div>
                                </div>
                            </div>
                            <div>&nbsp;</div>
                            <div class="row">
                                <div class="form-group">
                                    <label class="col-lg-2 control-label">Operator <label class="lbldanger">*</label></label>
                                    <div class="col-lg-4">
                                        @Html.DropDownListFor(Model => Model.OperatorId, ViewBag.operatordetails as IEnumerable<SelectListItem>, "--Select Operator--", new { @class = "form-control input-s-sm inline" })
                                        @Html.ValidationMessageFor(Model => Model.OperatorId, null, new { @class = "btn-danger" })
                                    </div>
                                </div>
                            </div>
                            <div>&nbsp;</div>
                            <div class="row">
                                <div class="form-group">
                                    <label class="col-lg-2 control-label">Batch ID <label class="lbldanger">*</label></label>
                                    <div class="col-lg-4">
                                        @Html.TextBoxFor(Model => Model.BatchID, new { @class = "form-control trimmed", @onkeypress = "return isNumber(event)", @placeholder = "Batch ID" })
                                        @Html.ValidationMessageFor(Model => Model.BatchID, null, new { @class = "btn-danger" })
                                    </div>
                                </div>
                            </div>
                            <div>&nbsp;</div>
                            <div class="row">
                                <div>
                                    <label class="col-lg-2 control-label" style="word-wrap:break-word;">Upload File <label class="lbldanger">*</label></label>
                                    <div class="col-lg-4">
                                        <div class="form-group">
                                            <input type="file" name="file" id="file" class="form-control" required />
                                            <span id="errmsgfile" class="field-validation-valid btn-danger" data-valmsg-for="File" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        <div class="col-lg-3">
                                            <a href="~/PromotionalUserCSV/SampleData.xlsx">View Sample</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div>
                                    <div class="col-lg-2"></div>
                                    <div class="form-group">
                                        <div class="col-sm-4">
                                            <input class="btn btn-blue" id="btnSubmit" type="submit" name="Submit" value="Upload" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <br />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/iCheck/custom")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")

}
@section Scripts {
    @Scripts.Render("~/plugins/sparkLine")
    @Scripts.Render("~/plugins/flot")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/dataTables")

    <script type="text/javascript">

        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }

        function trimmed() {
            $(".trimmed").on('blur', function () {
                // the following function will be executed every half second
                if ($(this).val() != null) {
                    $(this).val($(this).val().toString().trim());
                }
                var s = $(this).val().replace(/\</g, '');
                s = s.replace(/\>/g, '');
                $(this).val(s);
            });
        }

        function validation() {
            var returnval = true;
            var countryId = $("#CountryId").val();
            var operatorId = $("#OperatorId").val();
            var batchId = $("#BatchID").val();
            var ext = $('#file').val().split('.').pop().toLowerCase();
            if (countryId == "" || countryId == "0") {
                $("#CountryId")[0].nextElementSibling.innerHTML = "The Country Field is required.";
                returnval = false;
            }
            if (operatorId == "" || operatorId == "0") {
                $("#OperatorId")[0].nextElementSibling.innerHTML = "The Opertor Field is required.";
                returnval = false;
            }
            if (batchId == "") {
                $("#BatchID")[0].nextElementSibling.innerHTML = "The Batch ID Field is required.";
                returnval = false;
            }
            if (ext == "") {
                $("#errmsgfile")[0].innerHTML = "Please choose file.";
                returnval = false;
            }
            else if ($.inArray(ext, ['csv']) == -1 && $.inArray(ext, ['xls']) == -1 && $.inArray(ext, ['xlsx']) == -1) {
                $("#errmsgfile")[0].innerHTML = "Please upload only csv, xls or xlsx file.";
                returnval = false;
            }
            return returnval;
        }

        $(document).ready(function () {
            $("#btnSubmit").click(function () {
                var valida = validation();
                if (valida == true) {
                    return true;
                }
                else {
                    return false;
                }
            });
        });

        $("#CountryId").change(function () {
            $(".loader").show();
            $("#OperatorId").empty(); //remove all child nodes
            $("#OperatorId").trigger("chosen:updated");
            var id = $("#CountryId").val();
            if (id == null)
                id = 0;
            $.ajax({
                type: "POST",
                url: '@Url.Action("FillOperator", "PromotionalUser", new { area = "Admin" })',
                data: { countryId: id },
                success: function (data) {
                    if (data.length == 0) {
                        $("#OperatorId").empty(); //remove all child nodes
                        $("#OperatorId").trigger("chosen:updated");
                        $("#OperatorId").append('<option value="' + 0 + '">' + '--Select Operator--' + '</option>');
                    }
                    else {
                        $("#OperatorId").append('<option value="' + 0 + '">' + '--Select Operator--' + '</option>');
                        $.each(data, function (i, data) {
                            $("#OperatorId").append('<option value="' + data.Value + '">' +
                                data.Text + '</option>');
                        });
                        $("#OperatorId").trigger("chosen:updated");
                    }
                    $(".loader").hide();
                }
            });
        });

    </script>
}
