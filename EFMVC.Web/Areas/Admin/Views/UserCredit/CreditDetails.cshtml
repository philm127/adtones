@using EFMVC.Model

@model EFMVC.Web.Areas.Admin.ViewModel.UserCreditFormModel
@{
    ViewBag.Title = "Advertiser Credit Details";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    List<UsersCreditPayment> _paymentdetails = new List<UsersCreditPayment>();
    if (ViewBag.usercreditPayment != null)
    {
        _paymentdetails = ViewBag.usercreditPayment;
    }

}
<head>
    <link href="~/Content/Common.css" rel="stylesheet" />
</head>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Advertiser Credit Details</h2>
        <ol class="breadcrumb">

            <li>
                <a href="@Url.Action("Index", "AdvertiserCredit",new {area="Admin" })">Dashboard</a>

            </li>
            <li class="active">
                <strong>@ViewBag.username</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Advertiser Credit details</h5>

                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("UpdateCredit", "AdvertiserCredit", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
                    {
                        @Html.HiddenFor(Model => Model.Id)
                        if (TempData["Error"] != null)
                        {
                            <div class="alert alert-danger alert-dismissable">
                                <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                                @TempData["Error"]
                            </div>
                        }
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Country</label>
                            <div class="col-lg-4">
                                @Html.DropDownList("CountryId", ViewBag.countrydetails as IEnumerable<SelectListItem>, "--Select Country--", new { @class = "form-control input-s-sm inline" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Advertiser <label class="lbldanger">*</label></label>

                            <div class="col-lg-4">
                                @Html.DropDownListFor(Model => Model.UserId, ViewBag.userdetails as IEnumerable<SelectListItem>, "--Select Advertiser--", new { @class = "form-control input-s-sm inline" })
                                @Html.ValidationMessageFor(Model => Model.UserId, null, new { @class = "btn-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-lg-2 control-label">Credit</label>

                            <div class="col-lg-4">
                                @Html.TextBoxFor(Model => Model.AssignCredit, new { @class = "form-control trimmed only-numeric", @placeholder = "Credit" })
                                @Html.ValidationMessageFor(Model => Model.AssignCredit, null, new { @class = "btn-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Currency <label class="lbldanger">*</label></label>
                            <div class="col-lg-4">
                                @Html.DropDownListFor(Model => Model.CurrencyId, ViewBag.currencyList as IEnumerable<SelectListItem>, "--Select Currency--", new { @class = "form-control input-s-sm inline", @readonly = "true", })
                                @Html.ValidationMessageFor(Model => Model.CurrencyId, null, new { @class = "btn-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-offset-2 col-lg-10">
                                <button class="btn btn-sm btn-blue" type="submit">Update</button>
                                <button class="btn btn-sm btn-white" type="button" onclick="window.location.href='@Url.Action("Index","UserCredit",new {area="Admin" })'">Cancel</button>
                            </div>
                        </div>

                    }
                </div>
                @if (_paymentdetails.Count > 0)
                {
                    <div class="ibox-content">
                        <h2>Advertiser Credit Payment Details</h2>
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered table-hover dataTables-usercredit">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Invoice No</th>
                                        <th>Amount</th>
                                        <th>Payment Date</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (UsersCreditPayment item in _paymentdetails)
                                    {
                                        var name = item.User.FirstName + " " + item.User.LastName;
                                        <tr class="gradeX">
                                            <td>@name</td>
                                            <td>@item.Billing.InvoiceNumber</td>
                                            <td>@item.Amount.ToString("F2")</td>
                                            <td>@item.CreatedDate.ToString("dd/MM/yyyy")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            $('#CurrencyId').val('@Model.CurrencyId');
            trimmed();
            $('#CurrencyId').on('mousedown', function (e) {
                e.preventDefault();
                this.blur();
                window.focus();
            });
            $("#CountryId").val('@Model.CountryId');
        });

        function trimmed() {
            $(".trimmed").on('blur', function () {
                // the following function will be executed every half second
                if ($(this).val() != null) {
                    $(this).val($(this).val().toString().trim());
                }
                var s = $(this).val().replace(/\</g, '');
                s = s.replace(/\>/g, '');
                $(this).val(s);
            });
        }

        $('#Currency').on('change', function () {
            $('#CurrencyId').val($('#Currency').val());
        });

        $("#CountryId").change(function () {
            $(".loader").show();
            $("#UserId").html("");
            var countryId = $(this).val();
            if (countryId == "")
                countryId = "0";
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetUserByCountry", "AdvertiserCredit", new { area = "Admin" })',
                data: { countryId: countryId },
                success: function (data) {
                    $.each(data, function (i, data) {
                        $("#UserId").append('<option value="' + data.Value + '">' +
                            data.Text + '</option>');
                        $(".loader").hide();
                    });
                }
            });
        });
    </script>
}