@using EFMVC.Web.Areas.Admin.SearchClass;
@using EFMVC.Web.Areas.Admin.Models;
@model Tuple<List<UserCreditResult>, UserCreditFilter>
@{
    ViewBag.Title = "Advertiser Credit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="wrapper wrapper-content animated fadeIn">
    <div class="spiner-example" style="display:none;">
        <div class="sk-spinner sk-spinner-three-bounce">
            <div class="sk-bounce1"></div>
            <div class="sk-bounce2"></div>
            <div class="sk-bounce3"></div>
        </div>
    </div>
    <div class="p-w-md m-t-sm">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-content">
                        @Html.Partial("_UserCreditManagement", Tuple.Create<List<UserCreditResult>, UserCreditFilter>(Model.Item1, Model.Item2))
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @*@Styles.Render("~/plugins/dateRangeStyles")*@
    @Styles.Render("~/Content/plugins/iCheck/custom")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @*@Styles.Render("~/plugins/dataPickerStyles")*@
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/daterangepickerNewStyles")

}
@section Scripts {
    @Scripts.Render("~/plugins/sparkLine")
    @Scripts.Render("~/plugins/flot")
    @Scripts.Render("~/plugins/iCheck")
    @*@Scripts.Render("~/plugins/dataPicker")*@
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @*@Scripts.Render("~/plugins/dateRange")*@
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/daterangepickerNew")
    <script type="text/javascript">
        $(window).load(function () {

            $("#UserId").select2({
                placeholder: "All Advertisers",
                containerCssClass: "userdrp",
                allowClear: true,
                ajax: {
                    //url: "https://api.github.com/search/repositories",
                    //dataType: 'json',

                    traditional: true,
                    url: '@Url.Action("FillUserDropdownAJAX", "Campaign", new { area = "Admin" })',
                    type: "POST",
                    delay: 250,
                    data: function (params) {
                        var cId = $("#CountryId").val();
                        var countryId = new Array();
                        if (cId == null)
                            cId = 0;
                        $.each(cId, function (i, cId) {
                            countryId.push(parseInt(cId));
                        });
                        return {
                            UserName: params.term, // search term
                            page: params.page,
                            countryId: countryId,
                            operatorId: null
                        };
                    },
                    //data: function (params) {
                    //    return {
                    //        UserName: params.term, // search term
                    //        page: params.page
                    //    };
                    //},
                    processResults: function (data, params) {
                        // parse the results into the format expected by Select2
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data, except to indicate that infinite
                        // scrolling can be used

                        return {
                            results: data
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) {
                    return markup;
                }, // let our custom formatter work
                minimumInputLength: 1,
                templateResult: formatRepo, // omitted for brevity, see the source of this page
                templateSelection: formatRepoSelection, // omitted for brevity, see the source of this page
                width: '100%'
            });

            function formatRepo(repo) {
                if (repo.loading) {

                    return repo.text
                };

                var markup =
                    '<div class="avatar">' +
                    '<div class="info">' +

                    '<div class="col-sm-16">' + repo.name + '</div>';

                markup += '</div></div> ';

                return markup;
            }

            function formatRepoSelection(repo) {
                return repo.name || repo.text;
            }
        });

        function dataTableSetup() {
            $('.dataTables-usercredit').DataTable({
                "preDrawCallback": function (settings) {
                    $(".spiner-example").show();
                },
                "aaSorting": [],
                "info": false,
                bFilter: false,
                "searching": false,
                aoColumnDefs: [
               {
                   bSortable: false,
                   aTargets: [-1]
               }
                ],
                "bLengthChange": false,
                "language": {
                    "infoEmpty": "No Record Found."
                },
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy', title: 'UserCreditDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },
                    { extend: 'csv', title: 'UserCreditDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },
                    { extend: 'excel', title: 'UserCreditDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },
                    { extend: 'pdf', title: 'UserCreditDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },

                    {
                        extend: 'print',
                        exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] },
                        title: 'UserDetails',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                "drawCallback": function (settings) {
                    $(".spiner-example").hide();
                },
                "fnInitComplete": function () { $(".spiner-example").hide(); }	// Hide processingDiv when loading table is complete
            });
        }
        $(document).ready(function () {
            $('body').bind('keyup', function (event) {
                if (event.keyCode === 13) {
                    $('#form0').submit();
                }
            });
            $(".chosen-container").bind('keyup', function (e) {
                if (e.which === 13) {
                    $('#form0').submit();
                    // or your stuff here...
                }
            });
            $('#createdFrom').datetimepicker({ ignoreReadonly: true });

            $('#createdTo').datetimepicker({
                useCurrent: false, //Important! See issue #1075
                ignoreReadonly: true
            });

            $("#createdFrom").on("dp.change", function (e) {
                $('#createdTo').data("DateTimePicker").minDate(e.date);
            });

            $("#createdTo").on("dp.change", function (e) {
                $('#createdFrom').data("DateTimePicker").maxDate(e.date);
            });
            $('#fromdate').css({ "height": "34px" });
            $('#todate').css({ "height": "34px" });
            //$('#data_5 .input-daterange').datepicker({
            //    keyboardNavigation: false,
            //    forceParse: false,
            //    autoclose: true
            //});

            $("#Item2_FromCredit").keypress(function (event) {
                return isNumber(event, this)
            });

            $("#Item2_ToCredit").keypress(function (event) {
                return isNumber(event, this)
            });

            var config = {
                '.chosen-select': { width: "100%" },
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
                '.chosen-select-width': { width: "95%" }
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }
            $("#usercreditreset").click(function () {
                $(".spiner-example").show();
                $('#fromdate').val('');
                $('#todate').val('');
                $("#Item2_Email").val('');

                $("#CountryId").val('');
                $("#CountryId").trigger("chosen:updated");
                $("#UserId").select2("val", "");
                $("#Item2_Fromdate").val('');
                $("#Item2_Todate").val('');
                $("#Item2_FromCredit").val('');
                $("#Item2_ToCredit").val('');

                $.ajax({
                    data: null,
                    datatype: "text/plain",
                    type: "POST",
                    url: '@Url.Action("SearchUsersCredit", "AdvertiserCredit")',
                    cache: false,
                    success: function (data) {
                        $(".spiner-example").hide();
                        $("#userList").html(data);
                        dataTableSetup();
                    }
                });
            });
            $('.dataTables-usercredit').DataTable({
                "preDrawCallback": function (settings) {
                    $(".spiner-example").show();
                },
                "aaSorting": [],
                "info": false,
                bFilter: false,
                "searching": false,
                "bLengthChange": false,
                "serverSide": true, // for process on server side
                "language": {
                    "infoEmpty": "No Record Found."
                },
                aoColumnDefs: [
                {
                bSortable: false,
                aTargets: [-1]
                }
                ],
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy', title: 'UserCreditDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },
                    { extend: 'csv', title: 'UserCreditDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },
                    { extend: 'excel', title: 'UserCreditDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },
                    { extend: 'pdf', title: 'UserCreditDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },

                    {
                        extend: 'print',
                        exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] },
                        title: 'UserDetails',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                "ajax": {
                    "url": "/Admin/AdvertiserCredit/LoadData",
                    "type": "POST",
                    "datatype": "json"
                },
                "aoColumns": [

                    {
                        "data": "Email", "name": "Email", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            return '<td><a href="/Admin/UserManagement/UserDetails?id=' + row.UserId + '">' + row.Email + '</a></td>';
                        }
                    },//index-0
                    { "data": "Name", "name": "Name", "autoWidth": false },//index-1
                    {
                        "data": "Organisation", "name": "Organisation", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            if (row.Organisation == null) {
                                return '<td>-</td>';
                            }
                            else {
                                return '<td>' + row.Organisation + '</td>';
                            }
                        }
                    },//index-2
                    {
                        "data": "Credit", "name": "Credit", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            return '<td>' + parseFloat(row.Credit).toFixed(2) + '</td>';
                        }
                    },//index-3
                    {
                        "data": "AvailableCredit", "name": "AvailableCredit", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            return '<td>' + parseFloat(row.AvailableCredit).toFixed(2) + '</td>';
                        }
                    },//index-4
                    {
                        "data": "TotalUsed", "name": "TotalUsed", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            return '<td>' + parseFloat(row.TotalUsed).toFixed(2) + '</td>';
                        }
                    },//index-5
                    {
                        "data": "TotalPayed", "name": "TotalPayed", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            return '<td>' + parseFloat(row.TotalPayed).toFixed(2) + '</td>';
                        }
                    },//index-6
                    {
                        "data": "RemainingAmount", "name": "RemainingAmount", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            return '<td>' + parseFloat(row.RemainingAmount).toFixed(2) + '</td>';
                        }
                    },//index-7
                    //{ "data": "Credit", "name": "Credit", "autoWidth": false },//index-3
                    //{ "data": "AvailableCredit", "name": "AvailableCredit", "autoWidth": false },//index-4
                    //{ "data": "TotalUsed", "name": "TotalUsed", "autoWidth": false },//index-5
                    //{ "data": "TotalPayed", "name": "TotalPayed", "autoWidth": false },//index-6
                    //{ "data": "RemainingAmount", "name": "RemainingAmount", "autoWidth": false },//index-7
                    { "data": "CreatedDate", "name": "CreatedDate", "autoWidth": false },//index-8
                    {
                        "data": "Action", "name": "Action", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            return '<td><a class="btn btn-danger btn-xs" href="/Admin/AdvertiserCredit/CreditDetails?id=' + row.Id + '">Update</a></td>';
                        }
                    }//index-9
                ],
                "drawCallback": function (settings) {
                    $(".spiner-example").hide();
                },
                "fnInitComplete": function () { $(".spiner-example").hide(); }
            });
        });

    </script>
}