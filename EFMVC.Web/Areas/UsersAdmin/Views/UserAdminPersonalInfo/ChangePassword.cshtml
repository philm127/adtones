@model EFMVC.Web.ViewModels.ChangePasswordFormModel
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Areas/UsersAdmin/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Change User Password</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "UserAdminPersonalInfo",new {area="UsersAdmin" })">Dashboard</a>
            </li>
            <li class="active">
                <strong>@ViewBag.fullname</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="row">
                    @if (TempData["success"] != null)
                    {
                        <div class="alert alert-success alert-dismissable">
                            <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                            @TempData["success"]
                        </div>
                    }
                </div>
                <div class="ibox-title">
                    <h5>Change User Password</h5>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("ChangePassword", "UserAdminPersonalInfo", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
                    {
                        <input type="hidden" id="userid" name="userid" value='@ViewBag.UserId' />
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Current Password <label class="lbldanger">*</label></label>
                            <div class="col-lg-9">
                                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control trimmed", @placeholder = "Current Password" })
                                @Html.ValidationMessageFor(m => m.OldPassword, null, new { @class = "btn-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">New Password <label class="lbldanger">*</label></label>
                            <div class="col-lg-9">
                                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control trimmed", @placeholder = "New Password" })
                                @Html.ValidationMessageFor(m => m.NewPassword, null, new { @class = "btn-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Confirm New Password</label>
                            <div class="col-lg-9">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control trimmed", @placeholder = "Confirm New Password" })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "btn-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-offset-3 col-lg-9">
                                <button class="btn btn-sm btn-blue" type="submit">Update Password</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            trimmed();
        });

        function trimmed() {
            $(".trimmed").on('blur', function () {
                // the following function will be executed every half second
                if ($(this).val() != null) {
                    $(this).val($(this).val().toString().trim());
                }
                var s = $(this).val().replace(/\</g, '');
                s = s.replace(/\>/g, '');
                $(this).val(s);
            });
        }

    </script>
}