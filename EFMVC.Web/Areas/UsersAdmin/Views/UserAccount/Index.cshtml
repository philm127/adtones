@using System.Web.Optimization
@using EFMVC.Web.Areas.UsersAdmin.SearchClass;
@using EFMVC.Web.Areas.UsersAdmin.Models;
@model Tuple<List<UserResult>, UserFilter>
@{
    ViewBag.Title = "User Management";
    Layout = "~/Areas/UsersAdmin/Views/Shared/_Layout.cshtml";
}
<div class="wrapper wrapper-content animated fadeIn">
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissable">
            <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
            @TempData["Error"]
        </div>
    }
    @if (TempData["success"] != null)
    {
        <div class="alert alert-success alert-dismissable">
            <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
            @TempData["success"]
        </div>
    }
    @if (TempData["status"] != null)
    {
        <div class="alert alert-danger alert-dismissable">
            <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
            @TempData["status"]
        </div>
    }

    <div class="spiner-example" style="display:none;">
        <div class="sk-spinner sk-spinner-three-bounce">
            <div class="sk-bounce1"></div>
            <div class="sk-bounce2"></div>
            <div class="sk-bounce3"></div>
        </div>
    </div>
    <div class="p-w-md m-t-sm">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-content">
                        @Html.Partial("_UserManagement", Tuple.Create<List<UserResult>, UserFilter>(Model.Item1, Model.Item2))
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @*@Styles.Render("~/plugins/dateRangeStyles")*@
    @Styles.Render("~/Content/plugins/iCheck/custom")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @*@Styles.Render("~/plugins/dataPickerStyles")*@
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/daterangepickerNewStyles")

}
@section Scripts {
    @Scripts.Render("~/plugins/sparkLine")
    @Scripts.Render("~/plugins/flot")
    @Scripts.Render("~/plugins/iCheck")
    @*@Scripts.Render("~/plugins/dataPicker")*@
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @*@Scripts.Render("~/plugins/dateRange")*@
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/daterangepickerNew")
    <script type="text/javascript">
        $(window).load(function() {

            $("#UserId").select2({
                placeholder: "All Users",
                containerCssClass: "userdrp",
                allowClear: true,
                ajax: {
                    //url: "https://api.github.com/search/repositories",
                    //dataType: 'json',
                    traditional: true,
                    url: '@Url.Action("FillUserDropdownAJAX", "UserAccount", new {area = "UsersAdmin"})',
                    type: "POST",
                    delay: 250,
                    data: function(params) {
                        var cId = $("#CountryId").val();
                        var countryId = new Array();
                        if (cId == null)
                            cId = 0;
                        $.each(cId,
                            function(i, cId) {
                                countryId.push(parseInt(cId));
                            });
                        var oId = $("#OperatorId").val();
                        var operatorId = new Array();
                        if (oId == null)
                            oId = 0;
                        $.each(oId,
                            function(i, oId) {
                                operatorId.push(parseInt(oId));
                            });
                        return {
                            UserName: params.term, // search term
                            page: params.page,
                            countryId: countryId,
                            operatorId: operatorId
                        };
                    },
                    processResults: function(data, params) {
                        // parse the results into the format expected by Select2
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data, except to indicate that infinite
                        // scrolling can be used

                        return {
                            results: data
                        };
                    },
                    cache: true
                },
                escapeMarkup: function(markup) {
                    return markup;
                }, // let our custom formatter work
                minimumInputLength: 1,
                templateResult: formatRepo, // omitted for brevity, see the source of this page
                templateSelection: formatRepoSelection, // omitted for brevity, see the source of this page
                width: '100%'
            });

            function formatRepo(repo) {
                if (repo.loading) {

                    return repo.text
                };

                var markup =
                    '<div class="avatar">' +
                        '<div class="info">' +
                        '<div class="col-sm-16">' +
                        repo.name +
                        '</div>';

                markup += '</div></div> ';

                return markup;
            }

            function formatRepoSelection(repo) {
                return repo.name || repo.text;
            }
        });

        $("#useradminAccountOverview").hide();
        $("#useradminProfileManagement").hide();
        $("#useradminPersonalInfo").hide();
        $("#useradminBlockedNumber").hide();

        function activeprofile(userid) {
            $.post('@Url.Action("ActivateUserSection", "UserAccount", new {area = "UsersAdmin"})',
                { id: userid },
                function(data) {
                    $("#useradminAccountOverview").show();
                    $("#useradminProfileManagement").show();
                    $("#useradminPersonalInfo").show();
                    $("#useradminBlockedNumber").show();
                    if (data === "success") {
                        oTable.ajax.reload();
                        @*window.location.href =
                            '@Url.Action("Index", "UserAdminAccountOverview", new {area = "UsersAdmin"})';*@

                    }
                });
        }

        function updatestatus(id, status) {
            var userObject = new Object();
            userObject.id = id;
            userObject.status = status;
            $.post('@Url.Action("ApproveORSuspendUser", "UserAccount", new {area = "UsersAdmin"})',
                userObject,
                function(data) {

                    if (data === "success") {
                        window.location.href = '@Url.Action("Index", "UserAccount", new {area = "UsersAdmin"})';

                    }
                });
        }

        $(document).ready(function() {

            
            $('body').bind('keyup',
                function(event) {
                    if (event.keyCode === 13) {
                        oTable.ajax.reload();
                    }
                });
            $(".chosen-container").bind('keyup',
                function(e) {
                    if (e.which === 13) {
                        oTable.ajax.reload();
                        // or your stuff here...
                    }
                });
            $('#createdFrom').datetimepicker({ ignoreReadonly: true });

            $('#createdTo').datetimepicker({
                useCurrent: false, //Important! See issue #1075
                ignoreReadonly: true
            });

            $("#createdFrom").on("dp.change",
                function(e) {
                    $('#createdTo').data("DateTimePicker").minDate(e.date);
                });

            $("#createdTo").on("dp.change",
                function(e) {
                    $('#createdFrom').data("DateTimePicker").maxDate(e.date);
                });
            var config = {
                '.chosen-select': { width: "100%" },
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
                '.chosen-select-width': { width: "95%" }
            }
            $('#fromdate').css({ "height": "34px" });
            $('#todate').css({ "height": "34px" });
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }
            
            $("#btnSearch").click(function() {
                oTable.ajax.reload();
                
            });
            $("#userreset").click(function() {
                $(".spiner-example").show();
                $('#fromdate').val('');
                $('#todate').val('');
                $("#OperatorId").val('');
                $("#OperatorId").trigger("chosen:updated");
                $("#CountryId").val('');
                $("#CountryId").trigger("chosen:updated");
                $("#UserId").select2("val", "");
                $("#Item2_Email").val('');
                $("#Item2_MSISDN").val('');
                $("#UserId").val('0');
                $("#UserId").trigger("chosen:updated");
                $("#Item2_Fromdate").val('');
                $("#Item2_Todate").val('');
                $("#UserStatusId").val('');
                $("#UserStatusId").trigger("chosen:updated");

                oTable.ajax.reload();
            });
            $(".spiner-example").show();
            oTable = $('.dataTables-usermanagement').DataTable({
                "preDrawCallback": function(settings) {
                    $(".spiner-example").show();
                },
                "info": false,
                "order": [ 4, "desc" ],
                //"pageLength": 50,
                "pageLength": 10,
                "bLengthChange": true,
                // "processing": true, // for show processing bar
                "searching": true,
                "serverSide": true, // for process on server side
                "orderMulti": false, // for disable multi column order
                //"dom": '<"top"i>rt<"bottom"lp><"clear">', // for hide default global search box // little confusion? don't worry I explained in the tutorial website
                //dom: 'Bfrtip',
                dom: '<"floatRight"B><"clear">frtip',
                buttons: [
                    { extend: 'copy', title: 'UserDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5] } },
                    { extend: 'csv', title: 'UserDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5] } },
                    { extend: 'excel', title: 'UserDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5] } },
                    { extend: 'pdf', title: 'UserDetails', exportOptions: { columns: [0, 1, 2, 3, 4, 5] } },
                    {
                        extend: 'print',
                        exportOptions: { columns: [0, 1, 2, 3, 4, 5] },
                        title: 'UserDetails',
                        customize: function(win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],

                "ajax": function(data, callback, settings) {
                    data.ExtendedParameters = {
                        Countries: $('#CountryId').val(),
                        Statuses: $('#UserStatusId').val(),
                        Operators: $('#OperatorId').val(),
                        DateFrom: $('#fromdate').val(),
                        DateTo: $('#todate').val(),
                        MSISDN: $('#Item2_MSISDN').val(),
                        Email: $('#Item2_Email').val()
                    };
                    $.ajax({
                        type: "POST",
                        url: "/UsersAdmin/UserAccount/LoadData",
                        data: data,
                        success: function(ajaxResult) {
                            callback(ajaxResult);
                        },
                        dataType: "json"
                    });
                },


                "aoColumns": [
                    {
                        "mData": "Email",
                        "name": "Email",
                        "bSortable": true,
                        "autoWidth": true,
                        "mRender": function(data, type, row) {
                            if (row.Email != null) {
                                if (row.Activated != 3) {
                                    return '<td><a onclick="activeprofile(' + row.Id + ');">' + row.Email + '</a></td>';
                                } else {
                                    return '<td>' + row.Email + '</td>';
                                }
                            } else {
                                return '<td>-</td>';
                            }
                        }
                    }, //index 0
                    { "data": "MSISDN", "name": "MSISDN", "bSortable": true, "autoWidth": true }, //index 1
                    { "data": "Name", "name": "Name", "bSortable": true, "autoWidth": true }, //index 2
                    {
                        "mData": "RoleId",
                        "name": "RoleId",
                        "bSortable": true,
                        "autoWidth": true,
                        "mRender": function(data, type, row) {
                            if (row.RoleId == 1) {
                                return '<td>Admin</td>';
                            } else if (row.RoleId == 2) {
                                return '<td>User</td>';
                            } else {
                                return '<td>Advertiser</td>';
                            }
                        }
                    }, //index 4
                    { "data": "CreatedDate", "name": "CreatedDate", "bSortable": true, "autoWidth": true }, //index 4
                    //{
                    //    "data": "CreatedDate", "name": "CreatedDate", "bSortable": true, "autoWidth": true,
                    //    "mRender": function (data, type, row) {
                    //        return moment(row.CreatedDate).format("DD/MM/YYYY");
                    //    }
                    //}, //index 2
                    { "data": "Status", "name": "Status", "bSortable": true, "autoWidth": true }, //index 5
                    {
                        "mData": "Activated",
                        "bSearchable": false,
                        "bSortable": false,
                        "autoWidth": true,
                        "mRender": function(data, type, row) {
                            if (row.Activated == 1) {
                                return '  <a class="btn btn-danger btn-xs" onclick="updatestatus(' +
                                    row.Id +
                                    ',2)">Suspend</a>';
                            } else if (row.Activated == 2 || row.Activated == 3) {
                                return '  <a class="btn btn-blue btn-xs" onclick="updatestatus(' +
                                    row.Id +
                                    ',1)">Approve</a>';
                            } else if (row.Activated == 0) {
                                return '<a class="btn btn-blue btn-xs" onclick="updatestatus(' +
                                    row.Id +
                                    ',1)">Approve</a> &nbsp;  <a class="btn btn-danger btn-xs" onclick="updatestatus(' +
                                    row.Id +
                                    ',2)">Suspend</a>';

                            } else {
                                return '<td>-</td>';
                            }
                        }
                    } //index 6
                ],
                "drawCallback": function(settings) {
                    $(".spiner-example").hide();
                },
                "fnInitComplete": function() {
                    $(".spiner-example").hide();
                    $(".dataTables_filter").css("display", "none");
                    $(".floatRight").css('float', 'right');
                    $(".floatRight").css('padding-bottom', '12px');
                    $(".floatRight .btn").css('font-size', '12px');
                    $(".floatRight .btn").css('font-size', '12px');
                    $(".floatRight .btn").css('font-size', '12px');
                    $(".floatRight .btn").css('font-size', '12px');
                    $(".floatRight .btn").css('font-size', '12px');
                } // Hide processingDiv when loading table is complete

            });

        });

        $("#CountryId").change(function() {
            $(".loader").show();
            $("#OperatorId").empty(); //remove all child nodes
            $("#OperatorId").trigger("chosen:updated");
            var id = $("#CountryId").val();
            var countryId = new Array();
            if (id == null)
                id = 0;
            $.each(id,
                function(i, id) {
                    countryId.push(parseInt(id));
                });

            $.ajax({
                type: "POST",
                url: '@Url.Action("FillOperator", "UserAccount", new {area = "UsersAdmin"})',
                data: { countryId: countryId },
                success: function(data) {
                    if (data.length == 0) {
                        $("#OperatorId").empty(); //remove all child nodes
                        $("#OperatorId").trigger("chosen:updated");
                    } else {
                        $.each(data,
                            function(i, data) {
                                $("#OperatorId").append('<option value="' +
                                    data.Value +
                                    '">' +
                                    data.Text +
                                    '</option>');
                            });
                        $("#OperatorId").trigger("chosen:updated");
                    }
                    $(".loader").hide();
                }
            });
        });

    </script>
}