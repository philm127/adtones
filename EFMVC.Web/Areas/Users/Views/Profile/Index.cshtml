@using System.Web.Optimization;
@using EFMVC.Web.Areas.Users.Models;
@model UserProfileResult
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Users/Views/Shared/_Layout.cshtml";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>User Profile Setup</h2>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeIn">

    <div class="spiner-example" style="display:none;">
        <div class="sk-spinner sk-spinner-three-bounce">
            <div class="sk-bounce1"></div>
            <div class="sk-bounce2"></div>
            <div class="sk-bounce3"></div>
        </div>
    </div>
    <div class="p-w-md m-t-sm">
        <div class="row">
            <div class="col-lg-12" id="profile">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Profile Management</h5>

                    </div>
                    <div class="ibox-content">
                        <button class="accordion">Ad Types</button>
                        <div class="panel" id="AdvertPanel">

                            @*<button class="Nestedaccordion">Advert</button>
            <div class="panel" id="AdvertPanel">*@
                            @Html.Partial("_CreateOrEditAdvert", Model.UserProfileAdvertFormModel)
                            @*</div>
            <button class="Nestedaccordion">Attitude</button>
            <div class="panel" id="AttitudePanel">
                @Html.Partial("_CreateOrEditAttitude", Model.UserProfileAttitudeFormModel)
            </div>



            <button class="Nestedaccordion">Cinema</button>
            <div class="panel" id="CinemaPanel">
                @Html.Partial("_CreateOrEditCinema", Model.UserProfileCinemaFormModel)
            </div>
            <button class="Nestedaccordion">Internet</button>
            <div class="panel" id="InternetPanel">
                @Html.Partial("_CreateOrEditInternet", Model.UserProfileInternetFormModel)
            </div>
            <button class="Nestedaccordion">Press</button>
            <div class="panel" id="PressPanel">
                @Html.Partial("_CreateOrEditPress", Model.UserProfilePressFormModel)
            </div>
            <button class="Nestedaccordion">Products & Services</button>
            <div class="panel" id="PrdSrcPanel">
                @Html.Partial("_CreateOrEditProductsServices", Model.UserProfileProductsServiceFormModel)
            </div>
            <button class="Nestedaccordion">Radio</button>
            <div class="panel" id="RadioPanel">
                @Html.Partial("_CreateOrEditRadio", Model.UserProfileRadioFormModel)
            </div>
            <button class="Nestedaccordion">TV</button>
            <div class="panel" id="TVPanel">
                @Html.Partial("_CreateOrEditTv", Model.UserProfileTvFormModel)
            </div>*@
                        </div>

                        @*<button class="accordion">Usage</button>
        <div class="panel" id="UsagePanel">
            <button class="NestedaccordionUsage">Mobile</button>
            <div class="panel" id="MobilePanel">
                @Html.Partial("_CreateOrEditMobile", Model.UserProfileMobileFormModel)
            </div>
            <button class="NestedaccordionUsage">Time Settings</button>
            <div class="panel" id="TimeSettingsPanel">
                @Html.Partial("_CreateOrEditTimeSettings", Model.UserProfileTimeSettingFormModel)
            </div>
        </div>*@

                        @*<button class="accordion">Time Settings</button>*@
                        <button class="accordion">Time Bands</button>
                        <div class="panel" id="TimeSettingsPanel">
                            <div class="row" style="margin-top: 15px;">
                                <h3 class="col-lg-12 col-lg-wth">
                                    When would you prefer to listen to adverts?
                                </h3>
                            </div>
                            @Html.Partial("_CreateOrEditTimeSettings", Model.UserProfileTimeSettingFormModel)
                        </div>
                        @if (ViewBag.isQuestionnaire == true)
                        {
                            <button class="accordion">Questionnaire</button>
                            <div class="panel" id="SkizaProfilePanel">
                                @*<button class="NestedaccordionUsage">Mobile</button><button class="NestedaccordionUsage"></button>*@
                                @Html.Partial("_CreateOrEditSkizaProfile", Model.SkizaProfileFormModel)
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>

    @section Styles {
        @Styles.Render("~/plugins/awesomeCheckboxStyles")
        @Styles.Render("~/plugins/clockpickerStyles")
        @Styles.Render("~/plugins/dateRangeStyles")
        @Styles.Render("~/Content/plugins/chosen/chosenStyles")
        @Styles.Render("~/plugins/switcheryStyles")
        @Styles.Render("~/plugins/jasnyBootstrapStyles")
        @Styles.Render("~/plugins/nouiSliderStyles")
        @Styles.Render("~/plugins/dataPickerStyles")
        @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
        @Styles.Render("~/plugins/imagecropperStyles")
        @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
        @Styles.Render("~/plugins/select2Styles")
        @Styles.Render("~/plugins/touchSpinStyles")
        @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
        @Styles.Render("~/Content/accordion")
        @Styles.Render("~/Content/plugins/iCheck/custom")
    }
    @section Scripts {
        @Scripts.Render("~/plugins/sparkLine")
        @Scripts.Render("~/plugins/flot")
        @Scripts.Render("~/plugins/dataPicker")
        @Scripts.Render("~/plugins/ionRange")
        @Scripts.Render("~/plugins/nouiSlider")
        @Scripts.Render("~/plugins/jasnyBootstrap")
        @Scripts.Render("~/plugins/switchery")
        @Scripts.Render("~/plugins/chosen")
        @Scripts.Render("~/plugins/knob")
        @Scripts.Render("~/plugins/imagecropper")
        @Scripts.Render("~/plugins/colorpicker")
        @Scripts.Render("~/plugins/clockpicker")
        @Scripts.Render("~/plugins/dateRange")
        @Scripts.Render("~/plugins/select2")
        @Scripts.Render("~/plugins/touchSpin")
        @Scripts.Render("~/plugins/jeditable")
        @Scripts.Render("~/plugins/dataTables")
        @Scripts.Render("~/plugins/iCheck")
        <script type="text/javascript">
            $(document).ready(function () {

                $('.i-checks').iCheck({
                    checkboxClass: 'icheckbox_square-green',
                    radioClass: 'iradio_square-green',
                });

            });

            $("#selectalltime").click(function () {
                $("#timesettingdiv input:checkbox").iCheck('check');
                $('#timesettingdiv input:checkbox').iCheck('update');

            });
            $("#deselectalltime").click(function () {
                $("#timesettingdiv input:checkbox").iCheck('uncheck');
                $('#timesettingdiv input:checkbox').iCheck('update');
            });
            var acc = document.getElementsByClassName("accordion");
            var i;

            for (i = 0; i < acc.length; i++) {
                var items;
                acc[i].onclick = function () {

                    var currentpanel = $('#profile').find(".panel");
                    var current = this.nextElementSibling;
                    for (var j = 0; j < currentpanel.length; j++) {
                        if ($(currentpanel[j]).attr("id") == $(current).attr("id")) {
                            this.classList.toggle("active");
                            this.nextElementSibling.classList.toggle("show");
                        }
                        else {
                            $(currentpanel[j]).removeClass("show");
                            var prevelement = $(currentpanel[j]).prev();
                            $(prevelement).removeClass("active");
                        }
                    }
                }
            }
            var accNested = document.getElementsByClassName("Nestedaccordion");
            var ii;
            for (ii = 0; ii < accNested.length; ii++) {
                var items;
                accNested[ii].onclick = function () {

                    var currentpanel = $('#profile #BehaviourPanel').find(".panel");
                    var current = this.nextElementSibling;
                    for (var jj = 0; jj < currentpanel.length; jj++) {
                        if ($(currentpanel[jj]).attr("id") == $(current).attr("id")) {
                            this.classList.toggle("active");
                            this.nextElementSibling.classList.toggle("show");
                        }
                        else {
                            $(currentpanel[jj]).removeClass("show");
                            var prevelement = $(currentpanel[jj]).prev();
                            $(prevelement).removeClass("active");
                        }
                    }
                }
            }
            var accNestedUsage = document.getElementsByClassName("NestedaccordionUsage");
            var ii;

            for (ii = 0; ii < accNestedUsage.length; ii++) {
                var items;
                accNestedUsage[ii].onclick = function () {

                    var currentpanel = $('#profile #UsagePanel').find(".panel");
                    var current = this.nextElementSibling;
                    for (var jj = 0; jj < currentpanel.length; jj++) {
                        if ($(currentpanel[jj]).attr("id") == $(current).attr("id")) {
                            this.classList.toggle("active");
                            this.nextElementSibling.classList.toggle("show");
                        }
                        else {
                            $(currentpanel[jj]).removeClass("show");
                            var prevelement = $(currentpanel[jj]).prev();
                            $(prevelement).removeClass("active");
                        }
                    }
                }
            }


            var accadvertheader = document.getElementsByClassName("accordion_advertheader");
            var accadvertiheader;

            for (accadvertiheader = 0; accadvertiheader < accadvertheader.length; accadvertiheader++) {
                accadvertheader[accadvertiheader].onclick = function () {
                    this.classList.toggle("active");

                    this.nextElementSibling.classList.toggle("show");
                }
            }

            $(document).ready(function () {
                $('#data_5 .input-daterange').datepicker({
                    keyboardNavigation: false,
                    forceParse: false,
                    autoclose: true
                });
                $('#data_1 .input-group.date').datepicker({
                    todayBtn: "linked",
                    keyboardNavigation: false,
                    forceParse: false,
                    calendarWeeks: true,
                    autoclose: true
                });
                var config = {
                    '.chosen-select': { width: "100%" },
                    '.chosen-select-deselect': { allow_single_deselect: true },
                    '.chosen-select-no-single': { disable_search_threshold: 10 },
                    '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
                    '.chosen-select-width': { width: "95%" }
                }
                for (var selector in config) {
                    $(selector).chosen(config[selector]);
                }

                $('.dataTables-accountOverview').DataTable({
                    "aaSorting": [],
                    "info": false,
                    bFilter: false,
                    "searching": false,
                    aoColumnDefs: [
                        {
                            bSortable: false,
                            aTargets: [-1]
                        }
                    ],
                    "bLengthChange": false,
                    "language": {
                        "infoEmpty": "No Record Found."
                    },
                    dom: '<"html5buttons"B>lTfgitp',
                    buttons: [
                        { extend: 'copy', title: 'AccountOverviewDetails' },
                        { extend: 'csv', title: 'AccountOverviewDetails' },
                        { extend: 'excel', title: 'AccountOverviewDetails' },
                        { extend: 'pdf', title: 'AccountOverviewDetails' },

                        {
                            extend: 'print',
                            title: 'AccountOverviewDetails',
                            customize: function (win) {
                                $(win.document.body).addClass('white-bg');
                                $(win.document.body).css('font-size', '10px');

                                $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                            }
                        }
                    ]
                });
            });

        </script>
    }
