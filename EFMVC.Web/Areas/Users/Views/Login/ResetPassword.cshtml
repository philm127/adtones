@model EFMVC.Web.ViewModels.ForgotPasswordConfirmation
@{
    ViewBag.Title = "Reset Password";
    Layout = null;
}


<!DOCTYPE html>
<html>
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>adtones | Reset Password</title>

    <link href="~/Content/bootstrap.min.css" rel="stylesheet">
    <link href="~/Fonts/font-awesome/css/font-awesome.css" rel="stylesheet">

    <link href="~/Content/animate.css" rel="stylesheet">
    <link href="~/Content/style_campaign.css" rel="stylesheet">

    @*Add 10-06-2019*@
    <link href="~/Content/Common.css" rel="stylesheet" />
    <style>
        .form-control-box {
            background-color: #FFFFFF;
            background-image: none;
            border: 1px solid #e5e6e7;
            border-radius: 1px;
            color: inherit;
            display: inline-block;
            padding: 6px 12px;
            transition: border-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s;
            width: 95%;
            font-size: 14px;
        }
    </style>

</head>

<body class="gray-bg">

    <div class="middle-box text-center loginscreen   animated fadeInDown">
        <div>
            @if (TempData["resetPassword"] == null)
            {

                <h3>Reset Password</h3>
                <p>Reset your password</p>
                using (Html.BeginForm("ResetPassword", "Login", new { @class = "m-t" }))
                {

                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control-box", @placeholder = "Email" })
                        <label class="lbldanger">*</label>
                        @Html.ValidationMessageFor(m => m.Email, null, new { @class = "btn-danger" })
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control-box", @placeholder = "Password" })
                        <label class="lbldanger">*</label>
                        @Html.ValidationMessageFor(m => m.NewPassword, null, new { @class = "btn-danger" })
                    </div>
                    <div class="form-group">
                        <div class="large-12 columns">


                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control-box", @placeholder = "Confirm Password" })
                            <label class="lbldanger"></label>
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "btn-danger" })
                        </div>
                    </div>
                    <input type="submit" class="btn btn-blue block full-width m-b" value="Submit" />
                }
            }
            else
            {
                <h3>Reset password confirmation</h3>
                <p>Your password has been reset succesfully. Plese click below button for login.</p>
                <a class="btn btn-sm btn-white btn-block" href="@Url.Action("Index", "Login", new { area = "Admin" })">Login</a>
            }
            <p class="m-t"> <small>adtones &copy; @DateTime.Now.Year</small> </p>
        </div>
    </div>
</body>
@Scripts.Render("~/bundles/jquery")
<script src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
@Scripts.Render("~/plugins/unobtrusive")
@Scripts.Render("~/plugins/validate")
@Scripts.Render("~/bundles/validateunobtrusive")
</html>