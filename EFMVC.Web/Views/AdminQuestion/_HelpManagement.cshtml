@using EFMVC.Web.SearchClass
@using EFMVC.Web.Models;
@model Tuple<List<HelpAdminResult>, HelpAdminFilter>
<div class="row">
    <div class="col-lg-12">
        <div class="ibox">
            <div class="ibox-title" style="border-style:none;">
                <h5>Help Management</h5>
               
            </div>

            @using (Ajax.BeginForm("SearchQuestion", "AdminQuestion",
  null,
  new AjaxOptions() { HttpMethod = "post", InsertionMode = InsertionMode.Replace, OnSuccess = "getquestionresult" },
  null))
            {

                <div class="ibox-content">
                    <div class="row">
                        <div>
                            <label class="col-lg-1 control-label">ID</label>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    @Html.TextBoxFor(Model2 => Model2.Item2.ID, new { @class = "form-control", placeholder = "ID" })

                                </div>
                            </div>
                        </div>
                        <div>
                            <label class="col-lg-1 control-label">User</label>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    @Html.DropDownListFor(Model2 => Model2.Item2.UserId, ViewBag.user as IEnumerable<SelectListItem>, new { @class = "form-control input-s-sm inline" })
                                </div>
                            </div>
                        </div>
                        <div>
                            <label class="col-lg-1 control-label">Client</label>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    @Html.DropDownListFor(Model2 => Model2.Item2.ClientId, ViewBag.client as IEnumerable<SelectListItem>, new { @class = "form-control input-s-sm inline" })
                                </div>
                            </div>
                        </div>
                        


                    </div>
                    <div class="row">
                        <div>
                            <label class="col-lg-1 control-label">Created date</label>

                            <div class="col-lg-3">
                                <div class="form-group" id="data_5">
                                    <div class="input-daterange input-group" id="datepicker">
                                        @Html.TextBoxFor(Model2 => Model2.Item2.Fromdate, new { @class = "input-sm form-control" })
                                        <span class="input-group-addon">to</span>
                                        @Html.TextBoxFor(Model2 => Model2.Item2.Todate, new { @class = "input-sm form-control" })

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div>
                            <label class="col-lg-1 control-label">Last response date</label>

                            <div class="col-lg-3">
                                <div class="form-group" id="data_5">
                                    <div class="input-daterange input-group" id="datepicker">
                                        @Html.TextBoxFor(Model2 => Model2.Item2.LastResponseFromdate, new { @class = "input-sm form-control" })
                                        <span class="input-group-addon">to</span>
                                        @Html.TextBoxFor(Model2 => Model2.Item2.LastResponseTodate, new { @class = "input-sm form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div>
                            <label class="col-lg-1 control-label">Subject</label>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    @Html.DropDownListFor(Model2 => Model2.Item2.SubjectId, ViewBag.Qsubject as IEnumerable<SelectListItem>, new { @class = "form-control input-s-sm inline" })

                                </div>
                            </div>
                        </div>
                       

                    </div>
                    <div class="row">
                        <div>
                            <label class="col-lg-1 control-label">Status</label>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    @Html.DropDownListFor(Model2 => Model2.Item2.Status, ViewBag.questionstatus as IEnumerable<SelectListItem>, new { @class = "form-control input-s-sm inline" })
                                </div>
                            </div>
                        </div>
                        <div>
                            <label class="col-lg-1 control-label">Method of payment</label>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    @Html.DropDownListFor(Model2 => Model2.Item2.PaymentMethodId, ViewBag.paymentMethod as IEnumerable<SelectListItem>, new { @class = "form-control input-s-sm inline" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-4">
                                <button class="btn btn-blue" type="submit">Search</button>
                                <button class="btn btn-white" type="button" id="helpreset">Reset</button>
                            </div>
                        </div>
                    </div>
                    <div id="questionList">
                        @{ Html.RenderPartial("_HelpList", Model.Item1);}
                    </div>

                </div>
                            }
        </div>
    </div>

</div>
<script type="text/javascript">
    var getquestionresult = function (data) {
            if(data!="notauthorise")
            {
                $('.dataTables-adverts').remove();
                $("#questionList").html(data);
                dataTableSetup();
            }
            else
            {
                window.location.href='@Url.Action("Index","Landing")';
            }
    };
    function deleteQuestion(id) {
        $.post('@Url.Action("DeleteQuestion", "AdminQuestion")', { questionId: id }, function (data) {

            if (data == "success") {
                window.location.href = '@Url.Action("Index", "AdminQuestion")';

            }
        });

    }
    function dataTableSetup() {
        $('.dataTables-question').DataTable({
            "info": false,
            bFilter: false,
            "bLengthChange": false,
            "language": {
                "infoEmpty": "No Record Found."
            },
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                { extend: 'copy', title: 'Question'},
                { extend: 'csv', title: 'Question' },
                { extend: 'excel', title: 'Question' },
                { extend: 'pdf', title: 'Question' },

                {
                    extend: 'print',
                    title: 'Question',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                    }
                }
            ]
        });
    }
</script>