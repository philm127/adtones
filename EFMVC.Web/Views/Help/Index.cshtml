@using EFMVC.Web.SearchClass
@using EFMVC.Web.Models;
@model Tuple<List<HelpResult>, HelpFilter>

@{
    ViewBag.Title = "Help";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<div class="row wrapper border-bottom white-bg page-heading">*@
<div class="spiner-example loader" style="display:none;">
    <div class="sk-spinner sk-spinner-three-bounce">
        <div class="sk-bounce1"></div>
        <div class="sk-bounce2"></div>
        <div class="sk-bounce3"></div>
    </div>
</div>
@*</div>*@

<div class="wrapper wrapper-content animated fadeIn">

    <div class="p-w-md m-t-sm">
        @*<div class="row">

                <div class="col-sm-4">
                    <h1 class="m-b-xs">
                        26,900
                    </h1>
                    <small>
                        Sales in current month
                    </small>
                    <div id="sparkline1" class="m-b-sm"></div>
                    <div class="row">
                        <div class="col-xs-4">
                            <small class="stats-label">Pages / Visit</small>
                            <h4>236 321.80</h4>
                        </div>

                        <div class="col-xs-4">
                            <small class="stats-label">% New Visits</small>
                            <h4>46.11%</h4>
                        </div>
                        <div class="col-xs-4">
                            <small class="stats-label">Last week</small>
                            <h4>432.021</h4>
                        </div>
                    </div>

                </div>
                <div class="col-sm-4">
                    <h1 class="m-b-xs">
                        98,100
                    </h1>
                    <small>
                        Sales in last 24h
                    </small>
                    <div id="sparkline2" class="m-b-sm"></div>
                    <div class="row">
                        <div class="col-xs-4">
                            <small class="stats-label">Pages / Visit</small>
                            <h4>166 781.80</h4>
                        </div>

                        <div class="col-xs-4">
                            <small class="stats-label">% New Visits</small>
                            <h4>22.45%</h4>
                        </div>
                        <div class="col-xs-4">
                            <small class="stats-label">Last week</small>
                            <h4>862.044</h4>
                        </div>
                    </div>


                </div>
                <div class="col-sm-4">

                    <div class="row m-t-xs">
                        <div class="col-xs-6">
                            <h5 class="m-b-xs">Income last month</h5>
                            <h1 class="no-margins">160,000</h1>
                            <div class="font-bold text-navy">98% <i class="fa fa-bolt"></i></div>
                        </div>
                        <div class="col-xs-6">
                            <h5 class="m-b-xs">Sales current year</h5>
                            <h1 class="no-margins">42,120</h1>
                            <div class="font-bold text-navy">98% <i class="fa fa-bolt"></i></div>
                        </div>
                    </div>


                    <table class="table small m-t-sm">
                        <tbody>
                            <tr>
                                <td>
                                    <strong>142</strong> Projects

                                </td>
                                <td>
                                    <strong>22</strong> Messages
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <strong>61</strong> Comments
                                </td>
                                <td>
                                    <strong>54</strong> Articles
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <strong>154</strong> Companies
                                </td>
                                <td>
                                    <strong>32</strong> Clients
                                </td>
                            </tr>
                        </tbody>
                    </table>



                </div>

            </div>*@

        @*<div class="row">
                <div class="col-lg-12">
                    <div class="small pull-left col-md-3 m-l-lg m-t-md">
                        <strong>Sales char</strong> have evolved over the years sometimes.
                    </div>
                    <div class="small pull-right col-md-3 m-t-md text-right">
                        <strong>There are many</strong> variations of passages of Lorem Ipsum available, but the majority have suffered.
                    </div>
                    <div class="flot-chart m-b-xl">
                        <div class="flot-chart-content" id="flot-dashboard5-chart"></div>
                    </div>
                </div>
            </div>*@


        @Html.Partial("_HelpManagement", Tuple.Create<List<HelpResult>, HelpFilter>(Model.Item1, Model.Item2))
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @*@Styles.Render("~/plugins/dateRangeStyles")*@
    @Styles.Render("~/Content/plugins/iCheck/custom")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @*@Styles.Render("~/plugins/dataPickerStyles")*@
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/daterangepickerNewStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/sparkLine")
    @Scripts.Render("~/plugins/flot")
    @Scripts.Render("~/plugins/iCheck")
    @*@Scripts.Render("~/plugins/dataPicker")*@
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @*@Scripts.Render("~/plugins/dateRange")*@
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/daterangepickerNew")

<script type="text/javascript">
    $(document).ready(function () {
        $('body').bind('keyup', function (event) {
            if (event.keyCode === 13) {
                $('#form0').submit();
            }
        });
        $(".chosen-container").bind('keyup', function (e) {
            if (e.which === 13) {
                $('#form0').submit();
                // or your stuff here...
            }
        });
        $('#createdFrom').datetimepicker({ ignoreReadonly: true });

        $('#createdTo').datetimepicker({
            useCurrent: false, //Important! See issue #1075
            ignoreReadonly: true
        });

        $("#createdFrom").on("dp.change", function (e) {
            $('#createdTo').data("DateTimePicker").minDate(e.date);
        });

        $("#createdTo").on("dp.change", function (e) {
            $('#createdFrom').data("DateTimePicker").maxDate(e.date);
        });

        // -----

        $('#createdLastResponseFromdate').datetimepicker({ ignoreReadonly: true });

        $('#createdLastResponseTodate').datetimepicker({
            useCurrent: false, //Important! See issue #1075
            ignoreReadonly: true
        });

        $("#createdLastResponseFromdate").on("dp.change", function (e) {
            $('#createdLastResponseTodate').data("DateTimePicker").minDate(e.date);
        });

        $("#createdLastResponseTodate").on("dp.change", function (e) {
            $('#createdLastResponseFromdate').data("DateTimePicker").maxDate(e.date);
        });

        $('#fromdate').css({ "height": "34px" });
        $('#todate').css({ "height": "34px" });
        $('#LastResponseFromdate').css({ "height": "34px" });
        $('#LastResponseTodate').css({ "height": "34px" });
        var sparklineCharts = function () {
            $("#sparkline1").sparkline([34, 43, 43, 35, 44, 32, 44, 52], {
                type: 'line',
                width: '100%',
                height: '50',
                lineColor: '#1e90ff',
                fillColor: "transparent"
            });

            $("#sparkline2").sparkline([32, 11, 25, 37, 41, 32, 34, 42], {
                type: 'line',
                width: '100%',
                height: '50',
                lineColor: '#1e90ff',
                fillColor: "transparent"
            });

            $("#sparkline3").sparkline([34, 22, 24, 41, 10, 18, 16, 8], {
                type: 'line',
                width: '100%',
                height: '50',
                lineColor: '#1e90ff',
                fillColor: "transparent"
            });
        };

        var sparkResize;

        $(window).resize(function (e) {
            clearTimeout(sparkResize);
            sparkResize = setTimeout(sparklineCharts, 500);
        });

        sparklineCharts();




        var data1 = [
            [0, 4], [1, 8], [2, 5], [3, 10], [4, 4], [5, 16], [6, 5], [7, 11], [8, 6], [9, 11], [10, 20], [11, 10], [12, 13], [13, 4], [14, 7], [15, 8], [16, 12]
        ];
        var data2 = [
            [0, 0], [1, 2], [2, 7], [3, 4], [4, 11], [5, 4], [6, 2], [7, 5], [8, 11], [9, 5], [10, 4], [11, 1], [12, 5], [13, 2], [14, 5], [15, 2], [16, 0]
        ];
        $("#flot-dashboard5-chart").length && $.plot($("#flot-dashboard5-chart"), [
            data1, data2
        ],
            {
                series: {
                    lines: {
                        show: false,
                        fill: true
                    },
                    splines: {
                        show: true,
                        tension: 0.4,
                        lineWidth: 1,
                        fill: 0.4
                    },
                    points: {
                        radius: 0,
                        show: true
                    },
                    shadowSize: 2
                },
                grid: {
                    hoverable: true,
                    clickable: true,

                    borderWidth: 2,
                    color: 'transparent'
                },
                colors: ["#1e90ff", "#1e90ff"],
                xaxis: {
                },
                yaxis: {
                },
                tooltip: false
            }
        );


    });
</script>
<script type="text/javascript">
        function dataTableSetup() {
            $('.dataTables-question').DataTable({
                "preDrawCallback": function (settings) {
                    $(".loader").show();
                },
                "aaSorting": [],
                "info": false,
                bFilter: false,
                "searching": false,
                "bLengthChange": false,
                "language": {
                    "infoEmpty": "No Record Found."
                },
                aoColumnDefs: [
                    {
                        bSortable: false,
                        aTargets: [-1]
                    }
                ],
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    {
                        extend: 'copy',
                        title: 'Tickets',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        }
                    },//Question
                    {
                        extend: 'csv',
                        title: 'Tickets',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        }
                    },
                    {
                        extend: 'excel',
                        title: 'Tickets',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Tickets',
                        orientation: 'landscape',
                        pageSize: 'LEGAL',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        }
                    },

                    {
                        extend: 'print',
                        title: 'Tickets',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        },
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],
                "drawCallback": function (settings) {
                    $(".loader").hide();
                },
                "fnInitComplete": function () { $(".loader").hide(); }	// Hide processingDiv when loading table is complete
                //"ajax": {
                //    "url": "/Help/LoadData",
                //    "type": "POST",
                //    "datatype": "json"
                //},
                //"aoColumns": [

                //    {
                //        "data": "QANumber", "name": "QANumber", "autoWidth": false,
                //        "mRender": function (data, type, row) {
                //            return '<td><a href=/Help/QuestionDetails/' + row.Id + '">' + row.QANumber + '</a></td>';
                //        }
                //    },//index-0
                //    {
                //        "data": "ClientId", "name": "ClientId", "autoWidth": false,
                //        "mRender": function (data, type, row) {
                //            if (row.ClientId == 0) {
                //                return '<td>-</td>';
                //            }
                //            else {
                //                return '<td><a href=/Client/EditClient/' + row.ClientId + '">' + row.ClientName + '</a></td>';
                //            }
                //        }
                //    },//index-1
                //    {
                //        "data": "CampaignProfileId", "name": "CampaignProfileId", "autoWidth": false,
                //        "mRender": function (data, type, row) {
                //            if (row.ClientId == 0) {
                //                return '<td>-</td>';
                //            }
                //            else {
                //                return '<td><a href=/Dashboard/Campaign/' + row.CampaignProfileId + '">' + row.CampaignName + '</a></td>';
                //            }
                //        }
                //    },//index-2
                //    { "data": "QuestionDateTime", "name": "QuestionDateTime", "autoWidth": false },//index-3
                //    { "data": "QuestionTitle", "name": "QuestionTitle", "autoWidth": false },//index-4
                //    { "data": "QuestionSubject", "name": "QuestionSubject", "autoWidth": false },//index-5
                //    {
                //        "data": "Status", "name": "Status", "autoWidth": false,
                //        "mRender": function (data, type, row) {
                //            if (row.Status == 3 || row.Status == 4) {
                //                return '<label class="label label-danger">' + row.fStatus + '</label>';
                //            }
                //            else {
                //                return '<label class="label label-primary">' + row.fStatus + '</label>';
                //            }
                //        }
                //    },//index-6
                //    {
                //        "data": "LastResponseDatetime", "name": "LastResponseDatetime", "autoWidth": false,
                //        "mRender": function (data, type, row) {
                //            if (row.LastResponseDatetime == null) {
                //                return '<td>-</td>';
                //            }
                //            else {
                //                return '<td>' + row.LastResponseDatetime + '</td>';
                //            }
                //        }
                //    },//index-7
                //    {
                //        "data": "Action", "name": "Action", "autoWidth": false,
                //        "mRender": function (data, type, row) {
                //            if (row.Status == 3) {
                //                return '<a class="btn btn-danger btn-xs" onclick="deleteQuestion(' + row.Id + ')">Archive</a>';
                //            }
                //            else {
                //                return '<td>-</td>';
                //            }
                //        }
                //    }//index-8
                //],
                //"fnInitComplete": function () { $(".spiner-example").hide(); }
            });
        }
        $(document).ready(function () {

            var config = {
                '.chosen-select': { width: "100%" },
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
                '.chosen-select-width': { width: "95%" }
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }

            $("#helpreset").click(function () {
                $('#createdFrom').val('');
                $('#createdTo').val('');
                $('#LastResponseFromdate').val('');
                $('#LastResponseTodate').val('');
                $(".loader").show();
                $("#Item2_ID").val('');
                $('#fromdate').val('');
                $('#todate').val('');
                //$("#Item2_ClientId").val('0');
                $("#ClientId").val('0');
                $("#ClientId").trigger("chosen:updated");
                $("#Item2_Fromdate").val('');
                $("#Item2_Todate").val('');
                $("#Item2_LastResponseFromdate").val('');
                $("#Item2_LastResponseTodate").val('');
                //$("#Item2_SubjectId").val('0');
                $("#SubjectId").val('0');
                $("#SubjectId").trigger("chosen:updated");
                //$("#Item2_Status").val('0');
                $("#StatusId").val('0');
                $("#StatusId").trigger("chosen:updated");
                //$("#Item2_PaymentMethodId").val("0");
                $("#PaymentMethodId").val("0");
                $("#PaymentMethodId").trigger("chosen:updated");
                $.ajax({
                    data: null,
                    datatype: "text/plain",
                    type: "POST",
                    url: '@Url.Action("SearchQuestion", "Help")',
                    cache: false,
                    success: function (data) {
                        $("#questionList").html(data);
                        dataTableSetup();
                        $(".loader").hide();
                    }
                });
            });
            $('.dataTables-question').DataTable({
                "preDrawCallback": function (settings) {
                    $(".spiner-example").show();
                },
                "aaSorting": [],
                "info": false,
                bFilter: false,
                "searching": false,
                "bLengthChange": false,
                "serverSide": true, // for process on server side
                "language": {
                    "infoEmpty": "No Record Found."
                },
                aoColumnDefs: [
                    {
                        bSortable: false,
                        aTargets: [-1]
                    }
                ],
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    {
                        extend: 'copy',
                        title: 'Tickets',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Tickets',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        }
                    },
                    {
                        extend: 'excel',
                        title: 'Tickets',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Tickets',
                        orientation: 'landscape',
                        pageSize: 'LEGAL',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        }
                    },

                    {
                        extend: 'print',
                        title: 'Tickets',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        },
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],
                "ajax": {
                    "url": "/Help/LoadData",
                    "type": "POST",
                    "datatype": "json"
                },
                "aoColumns": [

                    {
                        "data": "QANumber", "name": "QANumber", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            if (row.QANumber == null) {
                                return '<td>-</td>';
                            }
                            else {
                                return '<td><a href="/Help/QuestionDetails/' + row.Id + '">' + row.QANumber + '</a></td>';
                            }
                        }
                    },//index-0
                    {
                        "data": "ClientId", "name": "ClientId", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            if (row.ClientId == 0) {
                                return '<td>-</td>';
                            }
                            else {
                                return '<td><a href="/Client/EditClient/' + row.ClientId + '">' + row.ClientName + '</a></td>';
                            }
                        }
                    },//index-1
                    {
                        "data": "CampaignProfileId", "name": "CampaignProfileId", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            if (row.CampaignProfileId == 0) {
                                return '<td>-</td>';
                            }
                            else {
                                return '<td><a href="/Dashboard/Campaign/' + row.CampaignProfileId + '">' + row.CampaignName + '</a></td>';
                            }
                        }
                    },//index-2
                    { "data": "QuestionDateTime", "name": "QuestionDateTime", "autoWidth": false },//index-3
                    { "data": "QuestionTitle", "name": "QuestionTitle", "autoWidth": false },//index-4
                    { "data": "QuestionSubject", "name": "QuestionSubject", "autoWidth": false },//index-5
                    {
                        "data": "PaymentMethodId", "name": "PaymentMethodId", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            if (row.PaymentMethodId == 1) {
                                return '<td>Credit</td>';
                            }
                            else if (row.PaymentMethodId == 2) {
                                return '<td>Card</td>';
                            }
                            else if (row.PaymentMethodId == 3) {
                                return '<td>Paypal</td>';
                            }
                            else if (row.PaymentMethodId == 5) {
                                return '<td>CoinBase</td>';
                            }
                            else if (row.PaymentMethodId == 6) {
                                return '<td>Mpesa</td>';
                            }
                            else {
                                return '<td>-</td>';
                            }
                        }
                    },
                    {
                        "data": "Status", "name": "Status", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            if (row.Status == 3 || row.Status == 4) {
                                return '<td><label class="label label-danger">' + row.fStatus + '</label></td>';
                            }
                            else {
                                return '<td><label class="label label-primary">' + row.fStatus + '</label></td>';
                            }
                        }
                    },//index-6
                    {
                        "data": "LastResponseDatetime", "name": "LastResponseDatetime", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            if (row.LastResponseDatetime == null) {
                                return '<td>-</td>';
                            }
                            else {
                                return '<td>' + row.LastResponseDatetime + '</td>';
                            }
                        }
                    },//index-7
                    {
                        "data": "Action", "name": "Action", "autoWidth": false,
                        "mRender": function (data, type, row) {
                            if (row.Status == 3) {
                                return '<td><a class="btn btn-danger btn-xs" onclick="deleteQuestion(' + row.Id + ')">Archive</a></td>';
                            }
                            else {
                                return '<td>-</td>';
                            }
                        }
                    }//index-8
                ],
                "drawCallback": function (settings) {
                    $(".spiner-example").hide();
                },
                "fnInitComplete": function () { $(".spiner-example").hide(); }
            });

            var $image = $(".image-crop > img")
            $($image).cropper({
                aspectRatio: 1.618,
                preview: ".img-preview",
                done: function (data) {
                    // Output the result data for cropping image.
                }
            });


            //$('#data_5 .input-daterange').datepicker({
            //    keyboardNavigation: false,
            //    forceParse: false,
            //    autoclose: true
            //});



            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            $(".touchspin2").TouchSpin({
                min: 0,
                max: 100,
                step: 0.1,
                decimals: 2,
                boostat: 5,
                maxboostedstep: 10,
                postfix: '%',
                buttondown_class: 'btn btn-white',
                buttonup_class: 'btn btn-white'
            });

            $(".touchspin3").TouchSpin({
                verticalbuttons: true,
                buttondown_class: 'btn btn-white',
                buttonup_class: 'btn btn-white'
            });


        });


        var config = {
            '.chosen-select': {},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 10 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
            '.chosen-select-width': { width: "95%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }

        $("#ionrange_1").ionRangeSlider({
            min: 0,
            max: 5000,
            type: 'double',
            prefix: "$",
            maxPostfix: "+",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_2").ionRangeSlider({
            min: 0,
            max: 10,
            type: 'single',
            step: 0.1,
            postfix: " carats",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_3").ionRangeSlider({
            min: -50,
            max: 50,
            from: 0,
            postfix: "°",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_4").ionRangeSlider({
            values: [
                "January", "February", "March",
                "April", "May", "June",
                "July", "August", "September",
                "October", "November", "December"
            ],
            type: 'single',
            hasGrid: true
        });

        $("#ionrange_5").ionRangeSlider({
            min: 10000,
            max: 100000,
            step: 100,
            postfix: " km",
            from: 55000,
            hideMinMax: true,
            hideFromTo: false
        });

</script>
}