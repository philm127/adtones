@using EFMVC.Web.Common;
@using EFMVC.Web.Models;
@using EFMVC.Web.ViewModels;
@model Tuple<EFMVC.Web.ViewModels.CampaignProfileFormModel, CampaignProfileMapping>

<div class="row wrapper border-bottom white-bg page-heading" style="padding-left:55px;">
    <div class="spiner-example" style="display:none;">
        <div class="sk-spinner sk-spinner-three-bounce">
            <div class="sk-bounce1"></div>
            <div class="sk-bounce2"></div>
            <div class="sk-bounce3"></div>
        </div>
    </div>
    
</div>
<div class="wrapper wrapper-content animated fadeIn" style="padding-top:0px;">

    <div class="p-w-md m-t-sm">
        @*<div class="row">
                <h5>Campaign Setup</h5>
            </div>*@
        <div class="step-content">
            <div>

            </div>
        </div>
        <div class="row">
            <div id="wizard" class="campaignstep">               
                <div class="step-content campaingactive">
                    <div>
                        @Html.Partial("_AddTargetSetup", Model)
                    </div>
                </div>
            </div>


        </div>

    </div>
</div>


@section Scripts {
  

    <script type="text/javascript">
        function getParameterByName(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)", "i"),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }
        function GetURLParameter() {
            var sPageURL = window.location.href;
            var indexOfLastSlash = sPageURL.lastIndexOf("/");

            if (indexOfLastSlash > 0 && sPageURL.length - 1 != indexOfLastSlash)
                return sPageURL.substring(indexOfLastSlash + 1);
            else
                return 0;
        }
        //$(function() {
        //    $("#StartDate2").datepicker({ Format: "MM-dd-yyyy" }).val()
        //});

        $(document).ready(function () {
            //$('.input-daterange').datepicker({
            //    keyboardNavigation: false,
            //    forceParse: false,
            //    autoclose: true

            //});

            //$("#StartDate").datepicker({
            //    //dateFormat: 'yy-mm-dd'
            //});

            $('#StartDate').datepicker({ });
            $('#EndDate').datepicker({ });
            $("#selectall").click(function()
            {
                $("#timesetting input:checkbox").iCheck('check');
                $('#timesetting input:checkbox').iCheck('update');

            });
            $("#deselectall").click(function()
            {
                $("#timesetting input:checkbox").iCheck('uncheck');
                $('#timesetting input:checkbox').iCheck('update');
            });

            $("#selectalldemographic").click(function()
            {
                $("#demographicsdiv input:checkbox").iCheck('check');
                $('#demographicsdiv input:checkbox').iCheck('update');

            });
            $("#deselectalldemographic").click(function()
            {
                $("#demographicsdiv input:checkbox").iCheck('uncheck');
                $('#demographicsdiv input:checkbox').iCheck('update');
            });

            $("#selectalladvert").click(function()
            {
                $("#advertsdiv input:checkbox").iCheck('check');
                $('#advertsdiv input:checkbox').iCheck('update');

            });
            $("#deselectalladvert").click(function()
            {
                $("#advertsdiv input:checkbox").iCheck('uncheck');
                $('#advertsdiv input:checkbox').iCheck('update');
            });

            $("#selectallattitude").click(function()
            {
                $("#atitudediv input:checkbox").iCheck('check');
                $('#atitudediv input:checkbox').iCheck('update');

            });
            $("#deselectallattitude").click(function()
            {
                $("#atitudediv input:checkbox").iCheck('uncheck');
                $('#atitudediv input:checkbox').iCheck('update');
            });

            $("#selectallcinema").click(function()
            {
                $("#cinemadiv input:checkbox").iCheck('check');
                $('#cinemadiv input:checkbox').iCheck('update');

            });
            $("#deselectallcinema").click(function()
            {
                $("#cinemadiv input:checkbox").iCheck('uncheck');
                $('#cinemadiv input:checkbox').iCheck('update');
            });

            $("#selectallinternet").click(function()
            {
                $("#internetdiv input:checkbox").iCheck('check');
                $('#internetdiv input:checkbox').iCheck('update');

            });
            $("#deselectallinternet").click(function()
            {
                $("#internetdiv input:checkbox").iCheck('uncheck');
                $('#internetdiv input:checkbox').iCheck('update');
            });

            $("#selectallpress").click(function()
            {
                $("#pressdiv input:checkbox").iCheck('check');
                $('#pressdiv input:checkbox').iCheck('update');

            });
            $("#deselectallpress").click(function()
            {
                $("#pressdiv input:checkbox").iCheck('uncheck');
                $('#pressdiv input:checkbox').iCheck('update');
            });

            $("#selectallprodservice").click(function()
            {
                $("#prodservice input:checkbox").iCheck('check');
                $('#prodservice input:checkbox').iCheck('update');

            });
            $("#deselectallprodservice").click(function()
            {
                $("#prodservice input:checkbox").iCheck('uncheck');
                $('#prodservice input:checkbox').iCheck('update');
            });

            $("#selectallradio").click(function()
            {
                $("#radiodiv input:checkbox").iCheck('check');
                $('#radiodiv input:checkbox').iCheck('update');

            });
            $("#deselectallradio").click(function()
            {
                $("#radiodiv input:checkbox").iCheck('uncheck');
                $('#radiodiv input:checkbox').iCheck('update');
            });

            $("#selectalltv").click(function()
            {
                $("#tvdiv input:checkbox").iCheck('check');
                $('#tvdiv input:checkbox').iCheck('update');

            });
            $("#deselectalltv").click(function()
            {
                $("#tvdiv input:checkbox").iCheck('uncheck');
                $('#tvdiv input:checkbox').iCheck('update');
            });


            $("#selectallmobile").click(function()
            {
                $("#mobilediv input:checkbox").iCheck('check');
                $('#mobilediv input:checkbox').iCheck('update');

            });
            $("#deselectallmobile").click(function()
            {
                $("#mobilediv input:checkbox").iCheck('uncheck');
                $('#mobilediv input:checkbox').iCheck('update');
            });

            $('#data_1 .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
            });
            var plays = getParameterByName('plays');
            if (plays != '') {
                if (plays == "True") {
                    Pace.on("done", function () {
                        $('html, body').animate({
                            scrollTop: $(".dataTables-audit").offset().top
                        });
                    });
                }
            }
            var avgbid = getParameterByName('avgbid');
            if (avgbid != '') {
                if (avgbid == "True") {
                    wizardt1();
                    Pace.on("done", function () {
                        $('html, body').animate({
                            scrollTop: $("#budgetInfo").offset().top
                        });
                    });
                }
            }



        });
    </script>
    <script type="text/javascript">
        function goToByScroll(id){
            // Remove "link" from the ID
            id = id.replace("link", "");
            // Scroll
            $('html,body').animate({
                scrollTop: $("#"+id).offset().top},
                'slow');
        }
        function navigate(obj)
        {
            $("#wizard-t-1").click();
            if(obj==1)
            {
                goToByScroll('campaignInfo');

            }
            else if(obj==2)
            {
                goToByScroll('budgetInfo');

            }
            else if(obj==3)
            {
                goToByScroll('smsInfo');

            }
            else
            {
                goToByScroll('profile');

            }


        }
        function get_filename(obj) {

            var file = obj.value;
            var array = file.split('\\');
            $("#filename").html(array[array.length - 1]);
        }
        function get_filecouponname(obj) {

            var file = obj.value;
            var array = file.split('\\');
            $("#filecouponname").html(array[array.length - 1]);
        }
        $(document).ready(function () {

            var campcommdata = '@ViewBag.commusuccess';
            if (campcommdata != '') {
                wizardt1();
            }
            var campcommerror = '@ViewBag.commuerror';
            if (campcommerror != '') {
                wizardt1();
            }
            var campaingId = '@TempData["campaignId"]';
            if (campaingId != '') {
                wizardt1();
                $("#wizard1-t-0").parent().removeClass("first current");
                $("#wizard1-t-0").parent().addClass("disabled");


            }
            var campaignStatus = '@ViewData["status"]';
            if (campaignStatus != '') {
                if (campaignStatus.toLocaleLowerCase() == '@CampaignStatus.Planned.ToString().ToLower()') {
                    wizardt1();
                    $("#wizard1-t-0").parent().removeClass("first current");
                    $("#wizard1-t-0").parent().addClass("disabled");
                }
            }

            $("#resetaudit").click(function () {
                $("#Item2_PlayID").val('');
                $("#Item2_UserID").val('');
                $("#Item2_FromPlayLength").val('');
                $("#Item2_ToPlayLength").val('');
                $("#Item2_Status").val('0');
                $("#Item2.FromPlayCost").val('');
                $("#Item2_ToPlayCost").val('');
                $("#Item2_Status").val('0');
                $("#Item2_FromTotalCost").val('');
                $("#Item2_ToTotalCost").val('');
                $("#StartDate").val('');
                $("#EndDate").val('');
                oTable.ajax.reload();
            });
            var $image = $(".image-crop > img")
            $($image).cropper({
                aspectRatio: 1.618,
                preview: ".img-preview",
                done: function (data) {
                    // Output the result data for cropping image.
                }
            });


            $('#data_5 .input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            });



            //$('.i-checks').iCheck({
            //    checkboxClass: 'icheckbox_square-green',
            //    radioClass: 'iradio_square-green',
            //});

            $(".touchspin2").TouchSpin({
                min: 0,
                max: 100,
                step: 0.1,
                decimals: 2,
                boostat: 5,
                maxboostedstep: 10,
                postfix: '%',
                buttondown_class: 'btn btn-white',
                buttonup_class: 'btn btn-white'
            });

            $(".touchspin3").TouchSpin({
                verticalbuttons: true,
                buttondown_class: 'btn btn-white',
                buttonup_class: 'btn btn-white'
            });





        });


        var config = {
            '.chosen-select': {},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 10 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
            '.chosen-select-width': { width: "95%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }

        $("#ionrange_1").ionRangeSlider({
            min: 0,
            max: 5000,
            type: 'double',
            prefix: "$",
            maxPostfix: "+",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_2").ionRangeSlider({
            min: 0,
            max: 10,
            type: 'single',
            step: 0.1,
            postfix: " carats",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_3").ionRangeSlider({
            min: -50,
            max: 50,
            from: 0,
            postfix: "°",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_4").ionRangeSlider({
            values: [
                "January", "February", "March",
                "April", "May", "June",
                "July", "August", "September",
                "October", "November", "December"
            ],
            type: 'single',
            hasGrid: true
        });

        $("#ionrange_5").ionRangeSlider({
            min: 10000,
            max: 100000,
            step: 100,
            postfix: " km",
            from: 55000,
            hideMinMax: true,
            hideFromTo: false
        });
        $("#wizard").steps();

        var chk = GetURLParameter();
        if (chk == "0") {
            wizardt1();

        }
        else {
            wizardt0();
        }
        $("#wizard-t-1").click(function () {
            wizardt1();
        });
        $("#wizard-t-0").click(function () {
            wizardt0();
        });
        function wizardt1() {
            $("#wizard-t-1").parent().removeClass("last");
            $("#wizard-t-1").parent().addClass("current");
            $("#wizard-t-0").parent().removeClass("current");
            $("#wizard-t-0").parent().addClass("disabled last");
            $("#wizard-p-1").show();
            $("#wizard-p-0").hide();
        }
        function wizardt0() {
            $("#wizard-t-0").parent().removeClass("disabled last");
            $("#wizard-t-0").parent().addClass("current");
            $("#wizard-t-1").parent().removeClass("current");
            $("#wizard-t-1").parent().addClass("disabled last");
            $("#wizard-p-0").show();
            $("#wizard-p-1").hide();

        }
        var updateOutput = function (e) {
            var list = e.length ? e : $(e.target),
                    output = list.data('output');
            if (window.JSON) {
                output.val(window.JSON.stringify(list.nestable('serialize')));//, null, 2));
            } else {
                output.val('JSON browser support required for this demo.');
            }
        };
        $('#nestable').nestable({
            group: 1
        }).on('change', updateOutput);

        function redirectadvetpage(current) {
            var advertid = $(current).attr("id");
            var url = '@Url.Action("AdvertDetails","Advert")';
            var link = $("<a></a>");
            link.attr("href", url + "/" + advertid);
            link.attr("target", "_blank");
            link[0].click();
        }
        //var acc = document.getElementsByClassName("accordion");
        //var i;

        //for (i = 0; i < acc.length; i++) {
        //    var items;
        //    acc[i].onclick = function () {

        //        var currentpanel = $('#profile').find(".panel");
        //        var current = this.nextElementSibling;
        //        for (var j = 0; j < currentpanel.length; j++) {
        //            if ($(currentpanel[j]).attr("id") == $(current).attr("id")) {
        //                this.classList.toggle("active");
        //                this.nextElementSibling.classList.toggle("show");
        //            }
        //            else {
        //                $(currentpanel[j]).removeClass("show");
        //                var prevelement = $(currentpanel[j]).prev();
        //                $(prevelement).removeClass("active");
        //            }
        //        }
        //    }
        //}

        //var accNested = document.getElementsByClassName("Nestedaccordion");
        //var ii;

        //for (ii = 0; ii < accNested.length; ii++) {
        //    var items;
        //    accNested[ii].onclick = function () {

        //        var currentpanel = $('#profile #BehaviourPanel').find(".panel");
        //        var current = this.nextElementSibling;
        //        for (var jj = 0; jj < currentpanel.length; jj++) {
        //            if ($(currentpanel[jj]).attr("id") == $(current).attr("id")) {
        //                this.classList.toggle("active");
        //                this.nextElementSibling.classList.toggle("show");
        //            }
        //            else {
        //                $(currentpanel[jj]).removeClass("show");
        //                var prevelement = $(currentpanel[jj]).prev();
        //                $(prevelement).removeClass("active");
        //            }
        //        }
        //    }
        //}

        //var accNestedUsage = document.getElementsByClassName("NestedaccordionUsage");
        //var ii;

        //for (ii = 0; ii < accNestedUsage.length; ii++) {
        //    var items;
        //    accNestedUsage[ii].onclick = function () {

        //        var currentpanel = $('#profile #UsagePanel').find(".panel");
        //        var current = this.nextElementSibling;
        //        for (var jj = 0; jj < currentpanel.length; jj++) {
        //            if ($(currentpanel[jj]).attr("id") == $(current).attr("id")) {
        //                this.classList.toggle("active");
        //                this.nextElementSibling.classList.toggle("show");
        //            }
        //            else {
        //                $(currentpanel[jj]).removeClass("show");
        //                var prevelement = $(currentpanel[jj]).prev();
        //                $(prevelement).removeClass("active");
        //            }
        //        }
        //    }
        //}
        //var accadvertheader = document.getElementsByClassName("accordion_advertheader");
        //var accadvertiheader;
        //alert(accadvertheader)
        //for (accadvertiheader = 0; accadvertiheader < accadvertheader.length; accadvertiheader++) {
        //    alert(accadvertiheader)
        //    accadvertheader[accadvertiheader].onclick = function () {
        //        this.classList.toggle("active");

        //        this.nextElementSibling.classList.toggle("show");
        //    }
        //}


        //var accadvert = document.getElementsByClassName("accordion_advert");
        //var accadverti;

        //for (accadverti = 0; accadverti < accadvert.length; accadverti++) {
        //    accadvert[accadverti].onclick = function () {
        //        $(".selectedadvert").html($(this).attr('title'));
        //        $(".selectedadvert").attr($(this).attr('id'));
        //        var currentpanel = $('#advertheadersub').find(".panel");
        //        var current = this.nextElementSibling;
        //        for (var jj = 0; jj < currentpanel.length; jj++) {
        //            if ($(currentpanel[jj]).attr("id") == $(current).attr("id")) {
        //                this.classList.toggle("active");
        //                this.nextElementSibling.classList.toggle("show");
        //                $(currentpanel[jj]).prev().removeClass("noneselectedadvertcolor");
        //                $(currentpanel[jj]).prev().addClass("seleadvertcolor");
        //            }
        //            else {
        //                $(currentpanel[jj]).removeClass("show");
        //                var prevelement = $(currentpanel[jj]).prev();
        //                $(prevelement).removeClass("active");
        //                $(currentpanel[jj]).prev().addClass("noneselectedadvertcolor");
        //                $(currentpanel[jj]).prev().removeClass("seleadvertcolor");
        //            }
        //        }
        //    }
        //}



       
        $(".number").remove();

        $("#wizard1").steps();
        $('#selectCountry').on('change', function () {
            var vmap = '<div id="world-map" style="height: 300px;">';
            var countryId=$(this).val();
            var mapData;
            if(countryId==1)
            {
                mapData = {
                    "GB": 400
                };
            }
            else if(countryId==2)
            {
                mapData = {
                    "AU": 400
                };
            }
            else if(countryId==3)
            {
                mapData = {
                    "KE": 400
                };
            }
            else if(countryId==4)
            {
                mapData = {
                    "SE": 400
                };
            }
            else if(countryId==5)
            {
                mapData = {
                    "NO": 400
                };
            }
            else if(countryId==6)
            {
                mapData = {
                    "IS": 400
                };
            }
            else if(countryId==7)
            {
                mapData = {
                    "DK": 400
                };
            }
            else
            {
                mapData = {
                    "GB": 498,
                    "AU": 200,
                    "KE": 1300,
                    "SE": 220,
                    "NO": 540,
                    "IS": 120,
                    "DK": 760
                };
            }
            $('#world-map').remove();
            $('#map_final').append(vmap);
            $('#world-map').vectorMap({
                map: 'world_mill_en',
                showTooltip: true,
                backgroundColor: "transparent",
                regionStyle: {
                    initial: {
                        fill: '#e4e4e4',
                        "fill-opacity": 1,
                        stroke: 'none',
                        "stroke-width": 0,
                        "stroke-opacity": 0
                    }
                },
                series: {
                    regions: [{
                        values: mapData,
                        scale: ["#1e90ff"],
                        normalizeFunction: 'polynomial'
                    }]
                },
            });
        });
        $(".accordion").click(function () {
            var vmap = '<div id="world-map" style="height: 300px;">';
            var svg = $('#world-map').find('svg')[0];
            if (svg == null) {
                var mapData = {
                    "GB": 498,
                    "AU": 200,
                    "KE": 1300,
                    "SE": 220,
                    "NO": 540,
                    "IS": 120,
                    "DK": 760
                };
                $('#world-map').remove();
                $('#map_final').append(vmap);
                $('#world-map').vectorMap({
                    map: 'world_mill_en',
                    showTooltip: true,
                    backgroundColor: "transparent",
                    regionStyle: {
                        initial: {
                            fill: '#e4e4e4',
                            "fill-opacity": 1,
                            stroke: 'none',
                            "stroke-width": 0,
                            "stroke-opacity": 0
                        }
                    },
                    series: {
                        regions: [{
                            values: mapData,
                            scale: ["#1e90ff"],
                            normalizeFunction: 'polynomial'
                        }]
                    },
                });
            }
        });
        $("#wizard1-t-0").click(function () {
            wizard1t0();
            $("#hdnstatus").val("2");
            var data = new Object();
            data.id = $("#hdncampaignid").val();
            data.status = $("#hdnstatus").val();
            data.NumberInBatch = $("#NumberInBatch").val();
            $.post('@Url.Action("UpdateStatus", "Dashboard")', data, function (data) {
                if (data == "success") {
                    $("#camstatus").html('@CampaignStatus.Play.ToString()');
                }
                if (data == "notauthorise") {
                    window.location.href = '@Url.Action("Index","Landing")';
                }
            });
        });
        $("#wizard1-t-1").click(function () {
            wizard1t1();
            $("#hdnstatus").val("3");
            var data = new Object();
            data.id = $("#hdncampaignid").val();
            data.status = $("#hdnstatus").val();
            data.NumberInBatch = $("#NumberInBatch").val();
            $.post('@Url.Action("UpdateStatus", "Dashboard")', data, function (data) {
                if (data == "success") {
                    $("#camstatus").html('@CampaignStatus.Pause.ToString()');
                }
                if (data == "notauthorise") {
                    window.location.href = '@Url.Action("Index","Landing")';
                }
            });
        });
        $("#wizard1-t-2").click(function () {
            wizard1t2();
            $("#hdnstatus").val("5");
            var data = new Object();
            data.id = $("#hdncampaignid").val();
            data.status = $("#hdnstatus").val();
            data.NumberInBatch = $("#NumberInBatch").val();
            $.post('@Url.Action("UpdateStatus", "Dashboard")', data, function (data) {
                if (data == "success") {
                    $("#camstatus").html('@CampaignStatus.Archive.ToString()');
                }
                if (data == "notauthorise") {
                    window.location.href = '@Url.Action("Index","Landing")';
                }
            });
        });
        function wizard1t1() {
            $("#wizard1-t-1").parent().removeClass("last");
            $("#wizard1-t-1").parent().addClass("current");
            $("#wizard1-t-0").parent().removeClass("current");
            $("#wizard1-t-0").parent().addClass("disabled last");
            $("#wizard1-t-2").parent().removeClass("current");
            $("#wizard1-t-2").parent().addClass("disabled last");

        }
        function wizard1t0() {
            $("#wizard1-t-0").parent().removeClass("disabled last");
            $("#wizard1-t-0").parent().addClass("current");
            $("#wizard1-t-1").parent().removeClass("current");
            $("#wizard1-t-1").parent().addClass("disabled last");
            $("#wizard1-t-2").parent().removeClass("current");
            $("#wizard1-t-2").parent().addClass("disabled last");

        }
        function wizard1t2() {
            $("#wizard1-t-2").parent().removeClass("disabled last");
            $("#wizard1-t-2").parent().addClass("current");
            $("#wizard1-t-1").parent().removeClass("current");
            $("#wizard1-t-1").parent().addClass("disabled last");
            $("#wizard1-t-0").parent().removeClass("current");
            $("#wizard1-t-0").parent().addClass("disabled last");
        }
        $("#wizard1 .content.clearfix").remove();
        $("#wizard1 .number").remove();

    </script>
    <script type="text/javascript">
        var doughnutData = [
    {
        value: 250,
        color: "#1e90ff",
        highlight: "#1e90ff",

    },

    {
        value: 150,
        color: "#b5b8cf",
        highlight: "#b5b8cf",

    }
        ];
        $(document).ready(function () {
            var doughnutFreePlaysData = [
        {
            value: @ViewBag.TotalPlayed,
            color: "#1e90ff",
            highlight: "#1e90ff",
            label:"Played"

        },

        {
            value: @ViewBag.FreePlays,
            color: "#b5b8cf",
            highlight: "#b5b8cf",
            label:"Free Play"
        }
            ];
            var doughnutChartbudgetData = [
       {
           value: @ViewBag.TotalSpend,
           color: "#1e90ff",
           highlight: "#1e90ff",
           label:"Spent"

       },

       {
           value: parseFloat(@ViewBag.TotalBudget - @ViewBag.TotalSpend),
           color: "#b5b8cf",
           highlight: "#b5b8cf",
           label:"Available"
       }
            ];
            var doughnutMaxBidData = [
    {
        value: @ViewBag.MaxBid,
        color: "#1e90ff",
        highlight: "#1e90ff",
        label:"MaxBid"

    },

    {
        value: @ViewBag.AvgMaxBid,
        color: "#b5b8cf",
        highlight: "#b5b8cf",
        label:"Average Bid"
    }
            ];

            var doughnutOptions = {
                segmentShowStroke: true,
                segmentStrokeColor: "#fff",
                segmentStrokeWidth: 2,
                percentageInnerCutout: 45, // This is 0 for Pie charts
                animationSteps: 100,
                animationEasing: "easeOutBounce",
                animateRotate: true,
                animateScale: false,
                responsive: true,
            };

            var ctx = document.getElementById("doughnutFreePlays").getContext("2d");
            var myNewChart = new Chart(ctx).Doughnut(doughnutFreePlaysData, {
                tooltipFontSize: 10,
                tooltipTemplate: "<%if (label){%><%=label%>: <%}%><%= value %>",
                percentageInnerCutout : 70
            });
            //var myNewChart = new Chart(ctx).Doughnut(doughnutFreePlaysData, doughnutOptions);

            var ctx = document.getElementById("doughnutChartbudget").getContext("2d");
            var myNewChart = new Chart(ctx).Doughnut(doughnutChartbudgetData, {
                tooltipFontSize: 10,
                tooltipTemplate: "<%if (label){%><%=label%>: <%}%><%= value %>",
                percentageInnerCutout : 70
            });
            //var myNewChart = new Chart(ctx).Doughnut(doughnutChartbudgetData, doughnutOptions);
            var ctx = document.getElementById("doughnutMaxBid").getContext("2d");
            var myNewChart = new Chart(ctx).Doughnut(doughnutMaxBidData, {
                tooltipFontSize: 10,
                tooltipTemplate: "<%if (label){%><%=label%>: <%}%><%= value %>",
                percentageInnerCutout : 70
            });
            //var myNewChart = new Chart(ctx).Doughnut(doughnutMaxBidData, doughnutOptions);

            var barchartData = @Html.Raw(Json.Encode(@ViewBag.getbarChartdata));
            if(barchartData!=null)
            {
                $("#sparkline8").sparkline(barchartData, {
                    type: 'bar',
                    barWidth: 5,
                    height: '75px',
                    barColor: '#1e90ff',
                    negBarColor: '#1e90ff'
                });
            }
            var sparkResize;
            var avgbid_plays = @Html.Raw(Json.Encode(@ViewBag.Campaignavgplayresult));
            if(avgbid_plays!=null)
            {

                var status=avgbid_plays[0].status;
                var ticks=[],dataset,options;
                var playresult=avgbid_plays[0]._playresult;
                var avgbidresult=avgbid_plays[0]._Avgresult;
                var _playarrayresult=[];
                var _avgbidarrayresult=[];
                var weeks=["Week1","Wek2","Week3","Week4","Week5","Week6","Week7","Week8","Week9","Week10","Week11","Week12","Week13","Week14","Week15",
                            "Week16","Week17","Week18","Week19","Week20","Week21","Week22","Week23","Week24","Week25","Week26","Week27","Week28","Week29",
                            "Week30","Week31","Week32","Week33","Week34","Week35","Week36","Week37","Week38","Week39","Week40","Week41","Week42","Week43",
                            "Week44","Week45","Week46","Week47","Week48","Week49","Week50","Week51","Week52"];
                for (var i = 0; i < playresult.length; i++) {
                    _playarrayresult[i]=[
                        playresult[i].name,playresult[i].value
                    ]
                    ticks[i]=[playresult[i].name,weeks[playresult[i].name-1]]
                }
                for (var i = 0; i < avgbidresult.length; i++) {
                    _avgbidarrayresult[i]=[
                        avgbidresult[i].name,avgbidresult[i].value
                    ]
                }
                var data2 = _playarrayresult;

                var data3 = _avgbidarrayresult;


                if(status==1)
                {
                    dataset = [
            {
                label: "Number of plays (in weeks)",
                data: data2,
                color: "#1e90ff",
                bars: {
                    show: true,
                }

            }, {
                label: "Average Bid (in weeks)",
                data: data3,
                yaxis: 2,
                color: "#464f88",
                lines: {
                    lineWidth: 1,
                    show: true,
                    fill: true,
                    fillColor: {
                        colors: [{
                            opacity: 0
                        }, {
                            opacity: 0
                        }]
                    }
                },
                splines: {
                    show: false,
                    tension: 0.6,
                    lineWidth: 1,
                    fill: 0.1
                },
            }
                    ];
                    options = {
                        xaxis: {
                            tickLength:0,
                            ticks: ticks,
                            axisLabelUseCanvas: true,
                            axisLabelFontSizePixels: 12,
                            axisLabelFontFamily: 'Arial',
                            axisLabelPadding: 10,
                            color: "#d5d5d5",
                            labelAngle: -90,
                        },
                        yaxes: [{
                            tickLength:0,
                            position: "left",
                            max: @ViewBag.NoofplayMaxCount,
                            color: "#d5d5d5",
                            axisLabelUseCanvas: true,
                            axisLabelFontSizePixels: 12,
                            axisLabelFontFamily: 'Arial',
                            axisLabelPadding: 3
                        }, {
                            max: @ViewBag.AvgbidMaxCount,
                            position: "right",
                            clolor: "#d5d5d5",
                            axisLabelUseCanvas: true,
                            axisLabelFontSizePixels: 12,
                            axisLabelFontFamily: ' Arial',
                            axisLabelPadding: 67
                        }
                        ],
                        legend: {
                            noColumns: 1,
                            labelBoxBorderColor: "#000000",
                            position: "nw"
                        },
                        grid: {
                            hoverable: false,
                            borderWidth: 0
                        },
                        bars: {
                            align: "center",
                            barWidth: 1
                        }
                    };
                }
                else if(status==2)
                {
                    ticks = [
        [0, "Sunday"],[1, "Monday"],[2, "Tuesday"],[3, "Wednesday"],[4, "Thursday"],[5, "Friday"],[6, "Saturday"]
                    ];
                    dataset = [
            {
                label: "Number of plays",
                data: data2,
                color: "#1e90ff",
                bars: {
                    show: true,
                }

            }, {
                label: "Average Bid",
                data: data3,
                yaxis: 2,
                color: "#464f88",
                lines: {
                    lineWidth: 1,
                    show: true,
                    fill: true,
                    fillColor: {
                        colors: [{
                            opacity: 0
                        }, {
                            opacity: 0
                        }]
                    }
                },
                splines: {
                    show: false,
                    tension: 0.6,
                    lineWidth: 1,
                    fill: 0.1
                },
            }
                    ];
                    options = {
                        xaxis: {
                            tickLength:0,
                            ticks: ticks,
                            axisLabelUseCanvas: true,
                            axisLabelFontSizePixels: 12,
                            axisLabelFontFamily: 'Arial',
                            axisLabelPadding: 10,
                            color: "#d5d5d5"
                        },
                        yaxes: [{
                            tickLength:0,
                            position: "left",
                            max: @ViewBag.NoofplayMaxCount,
                            color: "#d5d5d5",
                            axisLabelUseCanvas: true,
                            axisLabelFontSizePixels: 12,
                            axisLabelFontFamily: 'Arial',
                            axisLabelPadding: 3
                        }, {
                            max: @ViewBag.AvgbidMaxCount,
                            position: "right",
                            clolor: "#d5d5d5",
                            axisLabelUseCanvas: true,
                            axisLabelFontSizePixels: 12,
                            axisLabelFontFamily: ' Arial',
                            axisLabelPadding: 67
                        }
                        ],
                        legend: {
                            noColumns: 1,
                            labelBoxBorderColor: "#000000",
                            position: "nw"
                        },
                        grid: {
                            hoverable: false,
                            borderWidth: 0
                        },
                        bars: {
                            align: "center",
                            barWidth: 1
                        }
                    };
                }
                else
                {
                    var ticks = [
         [0, "00"],[1, "01"],[2, "02"],[3, "03"],[4, "04"],[5, "05"],[6, "06"],[7, "07"],[8, "08"],[9, "09"],[10, "10"],
         [11, "11"],[12, "12"],[13, "13"],[14, "14"],[15, "15"],[16, "16"],[17, "17"],[18, "18"],[19, "19"],[20, "20"],
         [21, "21"],[22, "22"],[23, "23"]
                    ];
                    dataset = [
            {
                label: "Number of plays (in hours)",
                data: data2,
                color: "#1e90ff",
                bars: {
                    show: true,
                }

            }, {
                label: "Average Bid (in hours)",
                data: data3,
                yaxis: 2,
                color: "#464f88",
                lines: {
                    lineWidth: 1,
                    show: true,
                    fill: true,
                    fillColor: {
                        colors: [{
                            opacity: 0
                        }, {
                            opacity: 0
                        }]
                    }
                },
                splines: {
                    show: false,
                    tension: 0.6,
                    lineWidth: 1,
                    fill: 0.1
                },
            }
                    ];
                    options = {
                        xaxis: {
                            tickLength:0,
                            ticks: ticks,
                            axisLabelUseCanvas: true,
                            axisLabelFontSizePixels: 12,
                            axisLabelFontFamily: 'Arial',
                            axisLabelPadding: 10,
                            color: "#d5d5d5"
                        },
                        yaxes: [{
                            tickLength:0,
                            position: "left",
                            max: @ViewBag.NoofplayMaxCount,
                            color: "#d5d5d5",
                            axisLabelUseCanvas: true,
                            axisLabelFontSizePixels: 12,
                            axisLabelFontFamily: 'Arial',
                            axisLabelPadding: 3
                        }, {
                            max: @ViewBag.AvgbidMaxCount,
                            position: "right",
                            clolor: "#d5d5d5",
                            axisLabelUseCanvas: true,
                            axisLabelFontSizePixels: 12,
                            axisLabelFontFamily: ' Arial',
                            axisLabelPadding: 67
                        }
                        ],
                        legend: {
                            noColumns: 1,
                            //labelBoxBorderColor: "#000000",
                            position: "nw"
                        },
                        grid: {
                            hoverable: false,
                            borderWidth: 0
                        },
                        bars: {
                            align: "center",
                            barWidth: 1
                        }
                    };
                }

                $.plot($("#flot-dashboard-chart"), dataset, options);
            }
        });
    </script>
}


