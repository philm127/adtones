@using EFMVC.Web.ViewModels
@model NewAdvertFormModel

<style>
    select.input-sm1 {
        height: 40px;
        line-height: 30px;
    }
</style>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Advert Information</h5>

                </div>
                <div class="ibox-content">
                    <div class="alert alert-success alert-dismissable" id="advertdvcaminfosuc" style="display:none;">
                        <button aria-hidden="true" data-dismiss="alert" class="close" id="advertclosesuccess" type="button">×</button>
                        @*<span id="advertcsuceess">Record updated successfully</span>*@
                        <span id="advertcsuceess"></span>
                    </div>
                    <div class="alert alert-danger alert-dismissable" id="advertdvcaminfoerror" style="display:none;">
                        <button aria-hidden="true" class="close" id="advertcloseerror" type="button">×</button>
                        <span id="advertcerrror"></span>
                    </div>

                    @using (Html.BeginForm("AddAdvertInfo", "Dashboard", FormMethod.Post, new { enctype = "multipart/form-data", @id = "testformid" }))
                    {
                        <div class="form-horizontal">
                            <div class="form-group">
                                <label class="col-lg-2 control-label">Advert ID</label>
                                <div class="col-lg-4">
                                    <label class="control-label" id="AdvertPhoneticAlphabet" data-toggle="tooltip3" title="@ViewBag.AdvertPhonetic">@ViewBag.AdvertPhoneticAlphabet</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">New Advert Name <label class="lbldanger">*</label></label>
                                @*<label class="col-lg-2 control-label">Advert Name <label class="lbldanger">*</label></label>*@
                                <div class="col-lg-6">
                                    @Html.TextBoxFor(model => model.AdvertName, new { @class = "form-control trimmed", @placeholder = "Advert Name" })
                                    @Html.ValidationMessageFor(model => model.AdvertName, null, new { @class = "btn-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">Select Advert</label>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(model => model.AdvertId, ViewBag.advertList as IEnumerable<SelectListItem>, "--Select Advert--", new { @class = "input-sm1 form-control input-s-sm inline" })
                                </div>
                                @*<div class="col-lg-4" style="padding-top: 7px; margin-bottom: 0;">
                                        <a href="/Advert/AddAdvert" target="_blank">Add Advert</a>
                                        <i class="fa fa-info-circle"
                                           data-toggle="tooltip4"
                                           title="user can add an advert later if required"
                                           id="adverttooltip"></i>
                                    </div>*@
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">Client <label class="lbldanger">*</label></label>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(model => model.AdvertClientId, ViewBag.allClientList as IEnumerable<SelectListItem>, new { @class = "form-control input-sm1 input-s-sm inline" })
                                    @Html.ValidationMessageFor(model => model.AdvertClientId, null, new { @class = "btn-danger" })
                                </div>
                                <div class="col-lg-4" style="padding-top: 7px; margin-bottom: 0;">
                                    <i class="fa fa-info-circle"
                                       data-toggle="tooltip5"
                                       title="if client screen is blank then this is optional other wise it's required."
                                       id="clienttooltip"></i>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">Brand</label>
                                <div class="col-lg-6">
                                    @Html.TextBoxFor(model => model.BrandName, new { @class = "form-control trimmed", @placeholder = "Brand Name" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">Advert Category <label class="lbldanger">*</label></label>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(model => model.AdvertCategoryId, ViewBag.allAdvertCategoryList as IEnumerable<SelectListItem>, new { @class = "form-control input-sm1 input-s-sm inline" })
                                    @Html.ValidationMessageFor(model => model.AdvertCategoryId, null, new { @class = "btn-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">Upload Media File <label class="lbldanger">*</label></label>
                                <div class="col-lg-10">
                                    <div class="btn-group">
                                        <label title="Upload image file" for="inputMediaFile" class="btn btn-blue" id="mediaFile">
                                            <input type="file" name="mediaFile" id="inputMediaFile" class="hide" onchange="get_filename(this);">
                                            Upload new Media file
                                        </label>
                                    </div>&nbsp;
                                    <span class="field-validation-valid btn-danger" id="mediafileerrmsg"></span>
                                    <label id="filename">@ViewBag.mediafile
                                    </label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">Upload Script File <label class="lbldanger">*</label></label>
                                <div class="col-lg-10">
                                    <div class="btn-group">
                                        <label title="Upload script file" for="inputScriptFile" class="btn btn-blue" id="scripFile">
                                            <input type="file" name="scriptFile" id="inputScriptFile" class="hide" onchange="get_filename_scripts(this);">
                                            Upload new Script file
                                        </label>
                                    </div>&nbsp;
                                    <span class="field-validation-valid btn-danger" id="scriptfileerrmsg"></span>
                                    <label id="filenamescripts">@ViewBag.scriptfile
                                    </label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">OR</label>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">Paste Script <label class="lbldanger">*</label></label>
                                <div class="col-lg-6">
                                    @Html.TextAreaFor(Model => Model.Script, new { @class = "form-control trimmed", @placeholder = "Script" })
                                    @Html.ValidationMessageFor(Model => Model.Script, null, new { @class = "btn-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">Number of ads in a batch</label>
                                <div class="col-lg-6">
                                    @Html.TextBoxFor(model => model.Numberofadsinabatch, new { @class = "form-control", disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">Operator <label class="lbldanger">*</label></label>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(Model => Model.OperatorId, ViewBag.OperatorList as IEnumerable<SelectListItem>, "--Select Operator--", new { @class = "form-control input-s-sm inline" })
                                    @Html.ValidationMessageFor(Model => Model.OperatorId, null, new { @class = "btn-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label"></label>
                                <div class="col-lg-6">
                                    @Html.CheckBoxFor(Model => Model.IsTermChecked, new { @class = "i-checks1 advertcheckbox" }) &nbsp;
                                    <a id="termLink" href="javascript:void(0)" target="_blank">I agree to the Terms and Conditions</a> <label class="lbldanger">*</label><br />
                                    <span class="field-validation-valid btn-danger" id="istermcheckederrmsg"></span>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-lg-offset-2 col-lg-10">
                                    <button class="btn btn-sm btn-blue" type="submit" id="advertnextbtn">Next</button>
                                    <button class="btn btn-sm btn-blue" type="button" id="advertbackbtn">Back</button>
                                    <button class="btn btn-sm btn-blue" type="submit" id="advertsubmit">Save</button>
                                    <button class="btn btn-sm btn-white" type="button" id="advertcancelbtn">Cancel</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function get_filename(obj) {
        var fileName = obj.value;
        var iSize;
        //Add 22-02-2019
        if (fileName != "") {
            iSize = (obj.files[0].size / 1024);
        }
        var allowed_extensions = new Array("aac", "ac3", "aif", "aifc", "aiff", "amr", "au", "caf",
            "flac", "m4a", "m4b", "mp3", "oga", "ogg", "sfark", "voc", "wav", "weba", "wma");

        var file_extension = fileName.split('.').pop().toLowerCase(); // split function will split the filename by dot(.), and pop function will pop the last element from the array which will give you the extension as well. If there will be no extension then it will return the filename.

        var isValid = false;
        for (var i = 0; i <= allowed_extensions.length; i++) {
            if (allowed_extensions[i] == file_extension) {
                isValid = true;
                break;
            }
        }
        if (isValid) {
            $("#mediafileerrmsg")[0].innerHTML = "";
            var array = fileName.split('\\');
            $("#filename").html(array[array.length - 1]);
        }
        else {
            $("#filename").text("");
            $("#mediafileerrmsg")[0].innerHTML = "Please upload audio file formats.";
            return false;
        }
        if (fileName != "") {
            if (iSize != "" || iSize != null) {
                if (iSize / 1024 > 1) {
                    iSize = (Math.round((iSize / 1024) * 100) / 100)
                    if (iSize > 1) {
                        $("#filename").text("");
                        $("#mediafileerrmsg")[0].innerHTML = "Please upload file size upto 1MB.";
                        return false;
                    }
                }
            }
        }
    }
    function get_filename_scripts(obj) {

        var file = obj.value;
        var iSize;
        //Add 21-02-2019
        if (file != "") {
            iSize = (obj.files[0].size / 1024);
        }

        var allowed_extensions = new Array("pdf", "PDF", "doc", "DOC", "docx", "DOCX");

        var file_extension = file.split('.').pop().toLowerCase(); // split function will split the filename by dot(.), and pop function will pop the last element from the array which will give you the extension as well. If there will be no extension then it will return the filename.

        var isValid = false;
        for (var i = 0; i <= allowed_extensions.length; i++) {
            if (allowed_extensions[i] == file_extension) {
                isValid = true;
                break;
            }
        }
        if (isValid) {
            var array = file.split('\\');
            $("#filenamescripts").html(array[array.length - 1]);
            $("#scriptfileerrmsg")[0].innerHTML = "";
            if ($("#filenamescripts").html != "") {
                $("#Script")[0].nextElementSibling.innerHTML = "";
                $("#Script").attr("disabled", "disabled");
            }
        }
        else {
            $("#filenamescripts").text("");
            $("#scriptfileerrmsg")[0].innerHTML = "Please upload pdf or doc file formats.";
            $("#Script")[0].nextElementSibling.innerHTML = "";
            if ($("#filenamescripts").html != "") {
                $("#Script").removeAttr("disabled");
            }
            return false;
        }
        if (file != "") {
            if (iSize != "" || iSize != null) {
                iSize = (Math.round(iSize * 100) / 100)
                if (iSize > 50) {
                    $("#filenamescripts").text("");
                    $("#scriptfileerrmsg")[0].innerHTML = "Please upload file size upto 50kb.";
                    $("#Script")[0].nextElementSibling.innerHTML = "";
                    if ($("#filenamescripts").html != "") {
                        $("#Script").removeAttr("disabled");
                    }
                    return false;
                }
            }
        }
    }
</script>
