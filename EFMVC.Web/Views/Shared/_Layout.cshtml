
<!DOCTYPE html>
<html>
<head>
    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-75734657-2', 'auto');
        ga('send', 'pageview');

    </script>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Adtones | @ViewBag.Title</title>

    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700' rel='stylesheet' type='text/css'>
    <!-- Add local styles, mostly for plugins css file -->
    @if (IsSectionDefined("Styles"))
    {@RenderSection("Styles", required: false)}

    <!-- Add jQuery Style direct - used for jQGrid plugin -->
    <link href="@Url.Content("~/Scripts/plugins/jquery-ui/jquery-ui.css")" rel="stylesheet" type="text/css" />

    <!-- Primary Inspinia style -->
    @Styles.Render("~/Content/campaigncss")
    @Styles.Render("~/font-awesome/css")

    @*Add 08-03-2019*@
    <link href="~/Content/Common.css" rel="stylesheet" />

</head>
<body class="top-navigation">

    <!-- Skin configuration box -->
    <!-- Wrapper-->
    <!-- PageClass give you ability to specify custom style for specific view based on action -->
    <div id="wrapper">

        <!-- Navigation -->
        @*@Html.Partial("_Navigation")*@

        <!-- Page wraper -->
        <div id="page-wrapper" class="gray-bg">

            <!-- Top Navbar -->
            @Html.Partial("_TopNavbar")
            <!-- Main view  -->
            @RenderBody()
            <!-- Footer -->
            @Html.Partial("_Footer")

        </div>
        <!-- End page wrapper-->
        <!-- Right Sidebar -->
        @*@Html.Partial("_RightSidebar")*@

    </div>
    <!-- End wrapper-->
    <!-- Section for main scripts render -->
    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/jquery-ui-v1.12.0.js"></script>
    @Scripts.Render("~/bundles/jquery-migrate")
    @*<script src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>*@
    @Scripts.Render("~/plugins/unobtrusive")
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/bundles/validateunobtrusive")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/plugins/slimScroll")
    @Scripts.Render("~/bundles/inspinia")

    <!-- Skin config script - only for demo purpose-->
    @*@Scripts.Render("~/bundles/skinConfig")*@ @*// datepicker and dropdown new changes - 17-05-2019*@

    <!-- Common Script-->
    @Scripts.Render("~/Scripts/Common")

    <link href="~/Content/timeout-dialog.css" rel="stylesheet" />
    <script src="~/Scripts/timeout-dialog.js"></script>

    <!-- Handler for local scripts -->
    @RenderSection("scripts", required: false)

</body>

</html>

    <script type="text/javascript">
        function displayCurrency(val, curCode, curSymbol) {
            var roundedAndFixed = parseFloat(val).toFixed(2);
            if (curCode === 'XOF' || curCode === 'KES')
                return roundedAndFixed + ' ' + curSymbol;
            return curSymbol + ' ' + roundedAndFixed;
        };

        $(document).ready(function () {
            $.ajax({
                url: '@Url.Action("GetCopyRight", "Landing")',
                success: function (data) {
                    $("#copyright").text(data);
                }
            });
        });

        $(function () {
            var fnTimeOut = function () {
                jQuery.timeoutDialog.setupDialogTimer({
                    timeout: 1200, // After every 1200 second(20 minutes)
                    countdown: 20, // Count down start number(Second)
                    logout_redirect_url: '@Url.Action("LogOff", "Landing")',
                    keep_alive_url: '@Url.Action("Keepalive", "Landing")'
                });
                UpdateSessionTime();
            };
            fnTimeOut();
        });

        $(document).ajaxComplete(function () {
            jQuery.timeoutDialog.setupDialogTimer({
                timeout: 1200, // After every 1200 second(20 minutes)
                countdown: 20, // Count down start number(Second)
                logout_redirect_url: '@Url.Action("LogOff", "Landing")',
                keep_alive_url: '@Url.Action("Keepalive", "Landing")'
            });
        });

        function UpdateSessionTime() {
            $.get('@Url.Action("Keepalive", "Landing")', function (data) {
            });
        }
        advertiserMultipleTabLogout();

        function dataTableFullExportAction(e, dt, button, config) {
            var self = this;
            var oldStart = dt.settings()[0]._iDisplayStart;
            dt.one('preXhr', function (e, s, data) {
                // Just this once, load all data from the server...
                data.start = 0;
                data.length = 2147483647;
                dt.one('preDraw', function (e, settings) {
                    // Call the original action function
                    if (button[0].className.indexOf('buttons-copy') >= 0) {
                        $.fn.dataTable.ext.buttons.copyHtml5.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-excel') >= 0) {
                        $.fn.dataTable.ext.buttons.excelHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.excelFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-csv') >= 0) {
                        $.fn.dataTable.ext.buttons.csvHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.csvFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-pdf') >= 0) {
                        $.fn.dataTable.ext.buttons.pdfHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.pdfFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-print') >= 0) {
                        $.fn.dataTable.ext.buttons.print.action(e, dt, button, config);
                    }
                    dt.one('preXhr', function (e, s, data) {
                        // DataTables thinks the first item displayed is index 0, but we're not drawing that.
                        // Set the property to what it was before exporting.
                        settings._iDisplayStart = oldStart;
                        data.start = oldStart;
                    });
                    // Reload the grid with the original page. Otherwise, API functions like table.cell(this) don't work properly.
                    setTimeout(dt.ajax.reload, 0);
                    // Prevent rendering of the full data to the DOM
                    return false;
                });
            });
            // Requery the server with the new one-time export settings
            dt.ajax.reload();
        };

        function campaignListMoneyRenderer (data, type, row) {
            if (type !== 'display')
                return data;
            if (row.CurrencyId === 4 || row.CurrencyId === 7) {
                return parseFloat(data).toFixed(2) + " " + row.CurrencyCode;
            }
            else {
                return row.CurrencyCode + " " + parseFloat(data).toFixed(2);
            }
        }

    </script>