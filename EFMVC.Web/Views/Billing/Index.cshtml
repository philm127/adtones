@using EFMVC.Web.SearchClass
@using EFMVC.Web.Models;
@model Tuple<List<BillingResult>, BillingFilter>
@{
    ViewBag.Title = "Billing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<div class="row wrapper border-bottom white-bg page-heading">*@
<div class="spiner-example loader" style="display:none;">
    <div class="sk-spinner sk-spinner-three-bounce">
        <div class="sk-bounce1"></div>
        <div class="sk-bounce2"></div>
        <div class="sk-bounce3"></div>
    </div>
</div>
@*</div>*@

<div class="wrapper wrapper-content animated fadeIn">

    <div class="p-w-md m-t-sm">
        @*<div class="row">

                <div class="col-sm-4">
                    <h1 class="m-b-xs">
                        26,900
                    </h1>
                    <small>
                        Sales in current month
                    </small>
                    <div id="sparkline1" class="m-b-sm"></div>
                    <div class="row">
                        <div class="col-xs-4">
                            <small class="stats-label">Pages / Visit</small>
                            <h4>236 321.80</h4>
                        </div>

                        <div class="col-xs-4">
                            <small class="stats-label">% New Visits</small>
                            <h4>46.11%</h4>
                        </div>
                        <div class="col-xs-4">
                            <small class="stats-label">Last week</small>
                            <h4>432.021</h4>
                        </div>
                    </div>

                </div>
                <div class="col-sm-4">
                    <h1 class="m-b-xs">
                        98,100
                    </h1>
                    <small>
                        Sales in last 24h
                    </small>
                    <div id="sparkline2" class="m-b-sm"></div>
                    <div class="row">
                        <div class="col-xs-4">
                            <small class="stats-label">Pages / Visit</small>
                            <h4>166 781.80</h4>
                        </div>

                        <div class="col-xs-4">
                            <small class="stats-label">% New Visits</small>
                            <h4>22.45%</h4>
                        </div>
                        <div class="col-xs-4">
                            <small class="stats-label">Last week</small>
                            <h4>862.044</h4>
                        </div>
                    </div>


                </div>
                <div class="col-sm-4">

                    <div class="row m-t-xs">
                        <div class="col-xs-6">
                            <h5 class="m-b-xs">Income last month</h5>
                            <h1 class="no-margins">160,000</h1>
                            <div class="font-bold text-navy">98% <i class="fa fa-bolt"></i></div>
                        </div>
                        <div class="col-xs-6">
                            <h5 class="m-b-xs">Sales current year</h5>
                            <h1 class="no-margins">42,120</h1>
                            <div class="font-bold text-navy">98% <i class="fa fa-bolt"></i></div>
                        </div>
                    </div>


                    <table class="table small m-t-sm">
                        <tbody>
                            <tr>
                                <td>
                                    <strong>142</strong> Projects

                                </td>
                                <td>
                                    <strong>22</strong> Messages
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <strong>61</strong> Comments
                                </td>
                                <td>
                                    <strong>54</strong> Articles
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <strong>154</strong> Companies
                                </td>
                                <td>
                                    <strong>32</strong> Clients
                                </td>
                            </tr>
                        </tbody>
                    </table>



                </div>

            </div>*@

        @*<div class="row">
                <div class="col-lg-12">
                    <div class="small pull-left col-md-3 m-l-lg m-t-md">
                        <strong>Sales char</strong> have evolved over the years sometimes.
                    </div>
                    <div class="small pull-right col-md-3 m-t-md text-right">
                        <strong>There are many</strong> variations of passages of Lorem Ipsum available, but the majority have suffered.
                    </div>
                    <div class="flot-chart m-b-xl">
                        <div class="flot-chart-content" id="flot-dashboard5-chart"></div>
                    </div>
                </div>
            </div>*@


        @Html.Partial("_BillingManagement", Tuple.Create<List<BillingResult>, BillingFilter>(Model.Item1, Model.Item2))
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @*@Styles.Render("~/plugins/dateRangeStyles")*@
    @Styles.Render("~/Content/plugins/iCheck/custom")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @*@Styles.Render("~/plugins/dataPickerStyles")*@
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/plugins/daterangepickerNewStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/sparkLine")
    @Scripts.Render("~/plugins/flot")
    @Scripts.Render("~/plugins/iCheck")
    @*@Scripts.Render("~/plugins/dataPicker")*@
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @*@Scripts.Render("~/plugins/dateRange")*@
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/plugins/daterangepickerNew")

    <script type="text/javascript">
        $(document).ready(function () {
            $('body').bind('keyup', function (event) {
                if (event.keyCode === 13) {
                    $('#form0').submit();
                }
            });
            $(".chosen-container").bind('keyup', function (e) {
                if (e.which === 13) {
                    $('#form0').submit();
                    // or your stuff here...
                }
            });

            $('#createdFrom').datetimepicker({
                defaultDate: false,
                ignoreReadonly: true
            });

            $('#createdTo').datetimepicker({
                //minDate: moment().add(1, 'days'),
                useCurrent: false, //Important! See issue #1075
                ignoreReadonly: true
            });

            $("#createdFrom").on("dp.change", function (e) {
                $('#createdTo').data("DateTimePicker").minDate(e.date);
                //$('#createdTo').data("DateTimePicker").minDate(e.date.add(1, 'days'));
                //if (moment(e.date).isAfter($('#createdTo').data("DateTimePicker").date())) {

                //    $('#createdTo').data("DateTimePicker").date(e.date);
                //}
                ignoreReadonly: true
            });

            $("#createdTo").on("dp.change", function (e) {
                //$('#createdFrom').data("DateTimePicker").maxDate(e.date.add(1, 'days'));
                $('#createdFrom').data("DateTimePicker").maxDate(e.date);
            });

            $('#createdSettedFromdate').datetimepicker({
                defaultDate: false,
                ignoreReadonly: true
            });

            $('#createdSettedTodate').datetimepicker({
                //minDate: moment().add(1, 'days'),
                useCurrent: false, //Important! See issue #1075
                ignoreReadonly: true
            });

            $("#createdSettedFromdate").on("dp.change", function (e) {
                //$('#createdSettedTodate').data("DateTimePicker").minDate(e.date.add(1, 'days'));
                //if (moment(e.date).isAfter($('#createdSettedTodate').data("DateTimePicker").date())) {

                //    $('#createdSettedTodate').data("DateTimePicker").date(e.date);
                //}
                $('#createdSettedTodate').data("DateTimePicker").minDate(e.date);
            });

            $("#createdSettedTodate").on("dp.change", function (e) {
                //$('#createdSettedFromdate').data("DateTimePicker").maxDate(e.date.add(1, 'days'));
                $('#createdSettedFromdate').data("DateTimePicker").maxDate(e.date);
            });
            $('#fromdate').css({ "height": "34px" });
            $('#todate').css({ "height": "34px" });
            $('#SettedFromdate').css({ "height": "34px" });
            $('#SettedTodate').css({ "height": "34px" });

            $("#Item2_InvoiceFromTotal").keypress(function (event) {
                return isNumber(event, this)
            });

            $("#Item2_InvoiceToTotal").keypress(function (event) {
                return isNumber(event, this)
            });

            var sparklineCharts = function () {
                $("#sparkline1").sparkline([34, 43, 43, 35, 44, 32, 44, 52], {
                    type: 'line',
                    width: '100%',
                    height: '50',
                    lineColor: '#1e90ff',
                    fillColor: "transparent"
                });

                $("#sparkline2").sparkline([32, 11, 25, 37, 41, 32, 34, 42], {
                    type: 'line',
                    width: '100%',
                    height: '50',
                    lineColor: '#1e90ff',
                    fillColor: "transparent"
                });

                $("#sparkline3").sparkline([34, 22, 24, 41, 10, 18, 16, 8], {
                    type: 'line',
                    width: '100%',
                    height: '50',
                    lineColor: '#1e90ff',
                    fillColor: "transparent"
                });
            };

            var sparkResize;

            $(window).resize(function (e) {
                clearTimeout(sparkResize);
                sparkResize = setTimeout(sparklineCharts, 500);
            });

            sparklineCharts();




            var data1 = [
                [0, 4], [1, 8], [2, 5], [3, 10], [4, 4], [5, 16], [6, 5], [7, 11], [8, 6], [9, 11], [10, 20], [11, 10], [12, 13], [13, 4], [14, 7], [15, 8], [16, 12]
            ];
            var data2 = [
                [0, 0], [1, 2], [2, 7], [3, 4], [4, 11], [5, 4], [6, 2], [7, 5], [8, 11], [9, 5], [10, 4], [11, 1], [12, 5], [13, 2], [14, 5], [15, 2], [16, 0]
            ];
            $("#flot-dashboard5-chart").length && $.plot($("#flot-dashboard5-chart"), [
                data1, data2
            ],
                {
                    series: {
                        lines: {
                            show: false,
                            fill: true
                        },
                        splines: {
                            show: true,
                            tension: 0.4,
                            lineWidth: 1,
                            fill: 0.4
                        },
                        points: {
                            radius: 0,
                            show: true
                        },
                        shadowSize: 2
                    },
                    grid: {
                        hoverable: true,
                        clickable: true,

                        borderWidth: 2,
                        color: 'transparent'
                    },
                    colors: ["#1e90ff", "#1e90ff"],
                    xaxis: {
                    },
                    yaxis: {
                    },
                    tooltip: false
                }
            );


        });
    </script>
    <script type="text/javascript">
        function dataTableSetup() {

            $('.dataTables-billing').DataTable({
                "preDrawCallback": function (settings) {
                    $(".loader").show();
                },
                "info": false,
                "pageLength": 10,
                bFilter: false,
                "aaSorting": [],
                "bLengthChange": false,
                //"processing": true, // for show processing bar
                //"serverSide": true, // for process on server side
                "orderMulti": false, // for disable multi column order
                //"dom": '<"top"i>rt<"bottom"lp><"clear">', // for hide default global search box // little confusion? don't worry I explained in the tutorial website
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy', title: 'Billing' },
                    { extend: 'csv', title: 'Billing' },
                    { extend: 'excel', title: 'Billing' },
                    { extend: 'pdf', title: 'Billing' },

                    {
                        extend: 'print',
                        title: 'Billing',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],
                "drawCallback": function (settings) {
                    $(".loader").hide();
                },
                "fnInitComplete": function () { $(".loader").hide(); }	// Hide processingDiv when loading table is complete
                @*"ajax": {
                    "url": "/Billing/LoadData",
                    "type": "POST",
                    "datatype": "json"
                },
                "aoColumns": [

                    {
                        "data": "InvoiceNO", "name": "InvoiceNO", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.InvoiceNO != "-") {
                                return '<td><a  class="clientname" href="/Invoice/Adtones_invoice_' + row.InvoiceNO + '.pdf" target = "_blank">' + row.InvoiceNO + '</a></td>';
                            }
                            else {
                                return '<td>-</td>';
                            }
                        }
                    }, //index 0
                    {
                        "data": "PONumber", "name": "PONumber", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.PONumber != "-") {
                                return '<td><a  class="PONumber" href="/Invoice/Adtones_invoice_' + row.InvoiceNO + '.pdf" target = "_blank">' + row.PONumber + '</a></td>';
                            }
                            else {
                                return '<td>-</td>';
                            }
                        }
                    }, //index 1
                    {
                        "data": "ClientName", "name": "ClientName", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.ClientName != "-") {
                                return '<td><a  class="clientname" href=/Client/EditClient?id=' + row.ClienId + '>' + row.ClientName + '</a></td>';
                            }
                            else {
                                return '<td>-</td>';
                            }
                        }
                    }, //index 2
                    {
                        "data": "CampaignName", "name": "CampaignName", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            return '<td><a href=/Dashboard/Campaign/' + row.CampaignId + '>' + row.CampaignName + '</a></td>';
                        }
                    }, //index 3
                    {
                        "data": "InvoiceDate", "name": "InvoiceDate", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            return moment(row.InvoiceDate).format("DD/MM/YYYY");
                        }
                    }, //index 4
                    //{ "data": "InvoiceDate", "name": "InvoiceDate", "bSortable": true, "autoWidth": true, }, //index 4
                    {
                        "data": "InvoiceTotal", "name": "InvoiceTotal", "autoWidth": false, "bSortable": true,
                        "mRender": function (data, type, row) {
                            if (@ViewBag.userCurrencyId == 4 || @ViewBag.userCurrencyId == 7) { //row.CountryId == 9 &&
                                return '<td>' + row.InvoiceTotal + " " + row.CurrencySymbol + '</td>';
                            }
                            else {
                                return '<td>' + row.CurrencySymbol + " " + row.InvoiceTotal + '</td>';
                            }
                        }
                    }, //index 5
                    { "data": "status", "name": "status", "bSortable": true, "autoWidth": true }, //index 6
                    {
                        "data": "SettledDate", "name": "SettledDate", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            return moment(row.SettledDate).format("DD/MM/YYYY");
                        }
                    }, //index 7
                    //{ "data": "SettledDate", "name": "SettledDate", "bSortable": true, "autoWidth": true }, //index 7
                    { "data": "MethodOfPayment", "name": "MethodOfPayment", "bSortable": true, "autoWidth": true } //index 8
                ]*@
            });

            //$('.dataTables-billing').DataTable({
            //    "info": false,
            //    bFilter: false,
            //    "searching": false,
            //    "bLengthChange": false,
            //    "language": {
            //        "infoEmpty": "No Record Found."
            //    },
            //    dom: '<"html5buttons"B>lTfgitp',
            //    buttons: [
            //        { extend: 'copy', title: 'Billing' },
            //        { extend: 'csv', title: 'Billing' },
            //        { extend: 'excel', title: 'Billing' },
            //        { extend: 'pdf', title: 'Billing' },

            //        {
            //            extend: 'print',
            //            title: 'Billing',
            //            customize: function (win) {
            //                $(win.document.body).addClass('white-bg');
            //                $(win.document.body).css('font-size', '10px');

            //                $(win.document.body).find('table')
            //                        .addClass('compact')
            //                        .css('font-size', 'inherit');
            //            }
            //        }
            //    ]
            //});
        }
        $(document).ready(function () {

            //$("#btnSearch").click(function () {
            //    oTable.columns(0).search($('#Item2_InvoiceNO').val());
            //    oTable.columns(1).search($('#Item2_PONumber').val());
            //    oTable.columns(2).search($('#BillingClientId').val());
            //    if ($("#fromdate").val() != '') {
            //        oTable.columns(3).search($("#fromdate").val() + ',' + $("#todate").val());
            //    }
            //    else {
            //        oTable.columns(3).search(null);
            //    }
            //    if ($("#SettedFromdate").val() != '') {
            //        oTable.columns(4).search($("#SettedFromdate").val() + ',' + $("#SettedTodate").val());
            //    }
            //    else {
            //        oTable.columns(4).search(null);
            //    }
            //    if ($("#Item2_InvoiceFromTotal").val() != '') {
            //        oTable.columns(5).search($("#Item2_InvoiceFromTotal").val() + ',' + $("#Item2_InvoiceToTotal").val());
            //    }
            //    else {
            //        oTable.columns(5).search(null);
            //    }
            //    oTable.columns(6).search($('#BillingstatusId').val());
            //    oTable.columns(7).search($('#BillingmethodId').val());

            //    //hit search on server
            //    oTable.draw();
            //});

            $("#billingreset").click(function () {
                $(".loader").show();
                $('#fromdate').val('');
                $('#todate').val('');
                $('#SettedFromdate').val('');
                $('#SettedTodate').val('');
                $("#Item2_InvoiceNO").val('');
                $("#Item2_PONumber").val('');
                $("#Item2_ClienId").val('0');
                $("#txtcreatedFrom").val('');
                $("#txtcreatedTo").val('');
                $("#Item2_SettedFromdate").val('');
                $("#Item2_SettedTodate").val('');
                $("#Item2_InvoiceFromTotal").val('');
                $("#Item2_InvoiceToTotal").val('');

                $("#Item2_Status").val('0');
                $("#Item2_MethodOfPayment").val('0');

                $("#BillingClientId").val('0');
                $("#BillingClientId").trigger("chosen:updated");
                $("#BillingstatusId").val('0');
                $("#BillingstatusId").trigger("chosen:updated");
                $("#BillingmethodId").val('0');
                $("#BillingmethodId").trigger("chosen:updated");
                //oTable.columns(0).search(null);
                //oTable.columns(1).search(null);
                //oTable.columns(2).search(null);
                //oTable.columns(3).search(null);
                //oTable.columns(4).search(null);
                //oTable.columns(5).search(null);
                //oTable.columns(6).search(null);
                //oTable.columns(7).search(null);

                ////hit search on server
                //oTable.draw();
                //$(".spiner-example").hide();
                $.ajax({
                    data: null,
                    datatype: "text/plain",
                    type: "POST",
                    url: '@Url.Action("SearchBilling", "Billing")',
                    cache: false,
                    success: function (data) {
                        $("#billingList").html(data);
                        dataTableSetup();
                        $(".loader").hide();
                    }
                });
            });

            $('.dataTables-billing').DataTable({
                "preDrawCallback": function (settings) {
                    $(".loader").show();
                },
                "info": false,
                "pageLength": 10,
                bFilter: false,
                //"order": [[4, "desc"]],
                "aaSorting": [],
                "bLengthChange": false,
                //"processing": true, // for show processing bar
                "serverSide": true, // for process on server side
                "orderMulti": false, // for disable multi column order
                //"dom": '<"top"i>rt<"bottom"lp><"clear">', // for hide default global search box // little confusion? don't worry I explained in the tutorial website
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy', title: 'Billing'},
                    { extend: 'csv', title: 'Billing' },
                    { extend: 'excel', title: 'Billing' },
                    { extend: 'pdf', title: 'Billing' },

                    {
                        extend: 'print',
                        title: 'Billing',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                "ajax": {
                    "url": "/Billing/LoadData",
                    "type": "POST",
                    "datatype": "json"
                },
                "aoColumns": [

                    {
                        "data": "InvoiceNO", "name": "InvoiceNO", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.InvoiceNO != "-") {
                                return '<td><a class="clientname" href="/Invoice/Adtones_invoice_' + row.InvoiceNO + '.pdf" target = "_blank">' + row.InvoiceNO + '</a></td>';
                            }
                            else {
                                return '<td>-</td>';
                            }
                        }
                    }, //index 0
                    {
                        "data": "PONumber", "name": "PONumber", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.PONumber != "-") {
                                return '<td><a  class="PONumber" href="/Invoice/Adtones_invoice_' + row.InvoiceNO + '.pdf" target = "_blank">' + row.PONumber + '</a></td>';
                            }
                            else {
                                return '<td>-</td>';
                            }
                        }
                    }, //index 1
                    {
                        "data": "ClientName", "name": "ClientName", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            if (row.ClientName != "-") {
                                return '<td><a  class="clientname" href=/Client/EditClient?id=' + row.ClienId + '>' + row.ClientName + '</a></td>';
                            }
                            else {
                                return '<td>-</td>';
                            }
                        }
                    }, //index 2
                    {
                        "data": "CampaignName", "name": "CampaignName", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            return '<td><a href=/Dashboard/Campaign/' + row.CampaignId + '>' + row.CampaignName + '</a></td>';
                        }
                    }, //index 3
                    {
                        "data": "InvoiceDate", "name": "InvoiceDate", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            return moment(row.InvoiceDate).format("DD/MM/YYYY");
                        }
                    }, //index 4
                    //{ "data": "InvoiceDate", "name": "InvoiceDate", "bSortable": true, "autoWidth": true, }, //index 4
                    {
                        "data": "InvoiceTotal", "name": "InvoiceTotal", "autoWidth": false, "bSortable": true,
                        "mRender": function (data, type, row) {
                            if (@ViewBag.userCurrencyId == 4 || @ViewBag.userCurrencyId == 7) { //row.CountryId == 9 &&
                                return '<td>' + parseFloat(row.InvoiceTotal).toFixed(2) + " " + row.CurrencySymbol + '</td>';
                            }
                            else {
                                return '<td>' + row.CurrencySymbol + " " + parseFloat(row.InvoiceTotal).toFixed(2) + '</td>';
                            }
                        }
                    }, //index 5
                    { "data": "status", "name": "status", "bSortable": true, "autoWidth": true }, //index 6
                    {
                        "data": "SettledDate", "name": "SettledDate", "bSortable": true, "autoWidth": true,
                        "mRender": function (data, type, row) {
                            return moment(row.SettledDate).format("DD/MM/YYYY");
                        }
                    }, //index 7
                    //{ "data": "SettledDate", "name": "SettledDate", "bSortable": true, "autoWidth": true }, //index 7
                    { "data": "MethodOfPayment", "name": "MethodOfPayment", "bSortable": true, "autoWidth": true } //index 8
                ],
                "drawCallback": function (settings) {
                    $(".loader").hide();
                },
                "fnInitComplete": function () { $(".loader").hide(); }	// Hide processingDiv when loading table is complete
            });
            oTable = $('.dataTables-billing').DataTable();

            //$('.dataTables-billing').DataTable({
            //    "info": false,
            //    bFilter: false,
            //    "searching": false,
            //    "bLengthChange": false,
            //    "language": {
            //        "infoEmpty": "No Record Found."
            //    },
            //    dom: '<"html5buttons"B>lTfgitp',
            //    buttons: [
            //        { extend: 'copy', title: 'Billing'},
            //        { extend: 'csv', title: 'Billing' },
            //        { extend: 'excel', title: 'Billing' },
            //        { extend: 'pdf', title: 'Billing' },

            //        {
            //            extend: 'print',
            //            title: 'Billing',
            //            customize: function (win) {
            //                $(win.document.body).addClass('white-bg');
            //                $(win.document.body).css('font-size', '10px');

            //                $(win.document.body).find('table')
            //                        .addClass('compact')
            //                        .css('font-size', 'inherit');
            //            }
            //        }
            //    ]
            //});


            var $image = $(".image-crop > img")
            $($image).cropper({
                aspectRatio: 1.618,
                preview: ".img-preview",
                done: function (data) {
                    // Output the result data for cropping image.
                }
            });


            //$('#data_5 .input-daterange').datepicker({
            //    keyboardNavigation: false,
            //    forceParse: false,
            //    autoclose: true
            //});



            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            $(".touchspin2").TouchSpin({
                min: 0,
                max: 100,
                step: 0.1,
                decimals: 2,
                boostat: 5,
                maxboostedstep: 10,
                postfix: '%',
                buttondown_class: 'btn btn-white',
                buttonup_class: 'btn btn-white'
            });

            $(".touchspin3").TouchSpin({
                verticalbuttons: true,
                buttondown_class: 'btn btn-white',
                buttonup_class: 'btn btn-white'
            });


        });


        var config = {
            '.chosen-select': {width:"100%"},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 10 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
            '.chosen-select-width': { width: "95%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }

        $("#ionrange_1").ionRangeSlider({
            min: 0,
            max: 5000,
            type: 'double',
            prefix: "$",
            maxPostfix: "+",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_2").ionRangeSlider({
            min: 0,
            max: 10,
            type: 'single',
            step: 0.1,
            postfix: " carats",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_3").ionRangeSlider({
            min: -50,
            max: 50,
            from: 0,
            postfix: "°",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_4").ionRangeSlider({
            values: [
                "January", "February", "March",
                "April", "May", "June",
                "July", "August", "September",
                "October", "November", "December"
            ],
            type: 'single',
            hasGrid: true
        });

        $("#ionrange_5").ionRangeSlider({
            min: 10000,
            max: 100000,
            step: 100,
            postfix: " km",
            from: 55000,
            hideMinMax: true,
            hideFromTo: false
        });

    </script>

}